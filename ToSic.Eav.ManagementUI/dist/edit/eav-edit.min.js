/*! tosic.eav 2015-09-23 11:16 */

!function(){"use strict";var a=angular.module("eavEditEntity",["formly","ui.bootstrap","eavFieldTemplates","eavNgSvcs","EavServices","eavEditTemplates"]);a.directive("eavEditEntity",function(){return{templateUrl:"edit-entity.html",restrict:"E",scope:{contentTypeName:"@contentTypeName",entityId:"@entityId",registerEditControl:"=registerEditControl"},controller:"EditEntityCtrl",controllerAs:"vm"}}),a.controller("EditEntityCtrl",["appId","$http","$scope","formlyConfig","contentTypeFieldSvc","entitiesSvc",function(a,b,c,d,e,f){var g=this;g.editInDefaultLanguageFirst=function(){return!1},g.save=function(){f.save(a,g.entity)},g.control={isValid:function(){return g.form.$valid},save:g.save},c.registerEditControl&&c.registerEditControl(g.control),g.model=null,g.entity=null,g.formFields=null;var h=function(){e(a,{StaticName:g.entity.Type.Name}).getFields().then(function(a){g.debug=a,angular.forEach(a.data,function(a,b){void 0===a.Metadata.All&&(a.Metadata.All={}),g.formFields.push({key:a.StaticName,type:i(a),templateOptions:{required:!!a.Metadata.All.Required,label:void 0===a.Metadata.All.Name?a.StaticName:a.Metadata.All.Name,description:a.Metadata.All.Notes,settings:a.Metadata},hide:a.Metadata.All.VisibleInEditUI?!a.Metadata.All.VisibleInEditUI:!1,expressionProperties:{"templateOptions.disabled":"options.templateOptions.disabled"}})})})};c.entityId?f.getMultiLanguage(a,c.contentTypeName,c.entityId).then(function(a){g.entity=enhanceEntity(a.data),h()}):(g.entity=enhanceEntity(f.newEntity(c.contentTypeName)),h());var i=function(a){var b=a,c=b.Type.toLowerCase(),e=void 0!==b.Metadata.String?b.Metadata.String.InputType:null;return e=e?e.toLowerCase():null,"string"===c&&void 0!==b.Metadata.String&&b.Metadata.String.RowCount>1&&(e="textarea"),e&&d.getType(c+"-"+e)||(e="default"),c+"-"+e}}])}(),function(){"use strict";var a=angular.module("eavFieldTemplates",["formly","formlyBootstrap","ui.bootstrap","eavLocalization","eavEditTemplates"],["formlyConfigProvider",function(a){a.setType({name:"string-default",template:'<input class="form-control" ng-model="value.Value">',wrapper:["bootstrapLabel","bootstrapHasError","eavLocalization"]}),a.setType({name:"string-dropdown",template:'<select class="form-control" ng-model="value.Value"></select>',wrapper:["bootstrapLabel","bootstrapHasError","eavLocalization"],defaultOptions:function(a){function b(a,b,c){return Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0})}if(!a.templateOptions.options&&a.templateOptions.settings.String.DropdownValues){var c=a.templateOptions.settings.String.DropdownValues;c=c.replace("\r","").split("\n"),c=c.map(function(a,b){var c=a.split(":");return{name:c[0],value:c[1]?c[1]:c[0]}}),a.templateOptions.options=c}var d=a.templateOptions.ngOptions||"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options";return{ngModelAttrs:b({},d,{value:"ng-options"})}}}),a.setType({name:"string-textarea",template:'<textarea class="form-control" ng-model="value.Value"></textarea>',wrapper:["bootstrapLabel","bootstrapHasError","eavLocalization"],defaultOptions:{ngModelAttrs:{"{{to.settings.String.RowCount}}":{value:"rows"},cols:{attribute:"cols"}}}}),a.setType({name:"number-default",template:'<input type="number" class="form-control" ng-model="value.Value">{{vm.isGoogleMap}}',wrapper:["bootstrapLabel","bootstrapHasError","eavLocalization"],defaultOptions:{ngModelAttrs:{"{{to.settings.Number.Min}}":{value:"min"},"{{to.settings.Number.Max}}":{value:"max"},'{{to.settings.Number.Decimals ? "^[0-9]+(.[0-9]{1," + to.settings.Number.Decimals + "})?$" : null}}':{value:"pattern"}}},controller:"FieldTemplate-NumberCtrl as vm"}),a.setType({name:"boolean-default",template:'<div class="checkbox">\n	<label>\n		<input type="checkbox"\n           class="formly-field-checkbox"\n		       ng-model="value.Value">\n		{{to.label}}\n		{{to.required ? \'*\' : \'\'}}\n	</label>\n</div>\n',wrapper:["bootstrapLabel","bootstrapHasError","eavLocalization"]}),a.setType({name:"datetime-default",wrapper:["bootstrapLabel","bootstrapHasError","eavLocalization"],template:'<div><div class="input-group"><div class="input-group-addon" style="cursor:pointer;" ng-click="to.isOpen = true;"><i class="glyphicon glyphicon-calendar"></i></div><input class="form-control" ng-model="value.Value" is-open="to.isOpen" datepicker-options="to.datepickerOptions" datepicker-popup /></div><timepicker ng-show="to.settings.DateTime.UseTimePicker" ng-model="value.Value" show-meridian="ismeridian"></timepicker></div>',defaultOptions:{templateOptions:{datepickerOptions:{},datepickerPopup:"dd.MM.yyyy"}}}),a.setType({name:"entity-default",templateUrl:"fields/templates/entity-default.html",wrapper:["bootstrapLabel","bootstrapHasError"],controller:"FieldTemplate-EntityCtrl"})}]);a.controller("FieldTemplate-NumberCtrl",function(){}),a.controller("FieldTemplate-EntityCtrl",["$scope","$http","$filter","$modal","eavManagementDialog",function(a,b,c,d,e){a.to.settings.Entity||(a.to.settings.Entity={}),a.availableEntities=[],(null===a.model[a.options.key]||""===a.model[a.options.key].Values[0].Value)&&(a.model[a.options.key]={Values:[{Value:[],Dimensions:{}}]}),a.chosenEntities=a.model[a.options.key].Values[0].Value,a.addEntity=function(){"new"==a.selectedEntity?a.openNewEntityDialog():a.chosenEntities.push(a.selectedEntity),a.selectedEntity=""},a.createEntityAllowed=function(){return null!==a.to.settings.Entity.EntityType&&""!==a.to.settings.Entity.EntityType},a.openNewEntityDialog=function(){var b=d.open({template:'<div style="padding:20px;"><edit-content-group edit="vm.edit"></edit-content-group></div>',controller:["entityType",function(a){var b=this;b.edit={contentTypeName:a}}],controllerAs:"vm",resolve:{entityType:function(){return a.to.settings.Entity.EntityType}}});b.result.then(function(){a.getAvailableEntities()})},a.getAvailableEntities=function(){b({method:"GET",url:"eav/EntityPicker/getavailableentities",params:{contentTypeName:a.to.settings.Entity.EntityType,appId:e.appId}}).then(function(b){a.availableEntities=b.data})},a.getEntityText=function(b){var d=c("filter")(a.availableEntities,{Value:b});return d.length>0?d[0].Text:"(Entity not found)"},a.remove=function(b){var c=a.chosenEntities.indexOf(b);a.chosenEntities.splice(c,1)},a.getAvailableEntities()}])}(),angular.module("eavEditTemplates",[]).run(["$templateCache",function(a){"use strict";a.put("edit-entity.html",'<div ng-show=vm.editInDefaultLanguageFirst()>Please edit this in the default language first.</div><div ng-show=!vm.editInDefaultLanguageFirst()><formly-form ng-submit=vm.onSubmit() form=vm.form model=vm.entity.Attributes fields=vm.formFields></formly-form><a ng-click="vm.showDebug = !vm.showDebug;">Debug</a><div ng-if=vm.showDebug><h3>Debug</h3><pre>{{vm.entity | json}}</pre><pre>{{vm.debug | json}}</pre><pre>{{vm.formFields | json}}</pre></div></div>'),a.put("fields/templates/entity-default.html",'<div class=eav-entityselect><div ui-tree=options data-empty-place-holder-enabled=false><ol ui-tree-nodes ng-model=chosenEntities><li ng-repeat="item in chosenEntities" ui-tree-node class=eav-entityselect-item><div ui-tree-handle><span title="{{getEntityText(item) + \' (\' + item + \')\'}}">{{getEntityText(item)}}</span> <a data-nodrag title="Remove this item" ng-click=remove(this) class=eav-entityselect-item-remove>[remove]</a></div></li></ol></div><select class="eav-entityselect-selector form-control" ng-model=selectedEntity ng-change=addEntity() ng-show="to.settings.Entity.AllowMultiValue || chosenEntities.length < 1"><option value="">-- choose --</option><option value=new ng-if=createEntityAllowed()>-- new --</option><option ng-repeat="item in availableEntities" ng-disabled="chosenEntities.indexOf(item.Value) != -1" value={{item.Value}}>{{item.Text}}</option></select></div>'),a.put("localization/formly-localization-wrapper.html","<eav-localization-scope-control></eav-localization-scope-control><div ng-if=\"value !== null\"><eav-localization-menu field-model=model[options.key] options=options value=value></eav-localization-menu><formly-transclude></formly-transclude></div><p class=bg-info style=padding:12px ng-if=!value>Please create the value for <i>'{{to.label}}'</i> in the default language before translating it.</p>"),a.put("localization/language-switcher.html",'<ul class="nav nav-pills" style=margin-left:0><li ng-repeat="l in languages.languages" ng-class="{ active: languages.currentLanguage == l.key }"><a ng-click="languages.currentLanguage = l.key;" href=javascript:void(0);>{{l.name}}</a></li></ul>'),a.put("localization/localization-menu.html",'<div dropdown is-open=status.isopen class=eav-localization><a class=eav-localization-lock ng-if=vm.isDefaultLanguage() title={{vm.tooltip()}} ng-class="{ \'eav-localization-lock-open\': !options.templateOptions.disabled }" dropdown-toggle href=javascript:void(0)>{{vm.infoMessage()}} <i class="glyphicon glyphicon-globe"></i></a><ul class="dropdown-menu multi-level pull-right eav-localization-dropdown" role=menu aria-labelledby=single-button><li role=menuitem><a ng-disabled=vm.enableTranslate() ng-click=vm.actions.translate()>Translate (unlink)</a></li><li role=menuitem><a ng-click=vm.actions.linkDefault()>Use default</a></li><li role=menuitem class=dropdown-submenu><a href=#>Google-Translate from</a><ul class=dropdown-menu><li ng-repeat="language in vm.languages.languages" class=disabled role=menuitem><a ng-click=vm.actions.autoTranslate(language.key) title={{language.name}} href=#>{{language.key}}</a></li></ul></li><li role=menuitem class=dropdown-submenu><a href=#>Copy from</a><ul class=dropdown-menu><li ng-repeat="language in vm.languages.languages" ng-class="{ disabled: options.templateOptions.disabled || !vm.hasLanguage(language.key) }" role=menuitem><a ng-click=vm.actions.copyFrom(language.key) title={{language.name}} href=#>{{language.key}}</a></li></ul></li><li role=menuitem class=dropdown-submenu><a href=#>Use from</a><ul class=dropdown-menu><li ng-repeat="language in vm.languages.languages" ng-class="{ disabled: !vm.hasLanguage(language.key) }" role=menuitem><a ng-click=vm.actions.useFrom(language.key) title={{language.name}} href=#>{{language.key}}</a></li></ul></li><li role=menuitem class=dropdown-submenu><a href=#>Share from</a><ul class=dropdown-menu><li ng-repeat="language in vm.languages.languages" ng-class="{ disabled: !vm.hasLanguage(language.key) }" role=menuitem><a ng-click=vm.actions.shareFrom(language.key) title={{language.name}} href=#>{{language.key}}</a></li></ul></li></ul></div>'),a.put("wrappers/edit-entity-wrapper.html",'<div class=modal-header><h3 class=modal-title>Edit entity</h3></div><div class=modal-body><div xng-controller="EditEntityWrapperCtrl as vm"><eav-language-switcher></eav-language-switcher><eav-edit-entity content-type-name={{vm.contentTypeName}} entity-id={{vm.entityId}} register-edit-control=vm.registerEditControl></eav-edit-entity><button ng-disabled=!vm.isValid() ng-click=vm.save() class="btn btn-primary submit-button">Save</button></div></div>')}]),function(){"use strict";var a=angular.module("eavLocalization",["formly","EavConfiguration"],["formlyConfigProvider",function(a){a.setWrapper([{name:"eavLocalization",templateUrl:"localization/formly-localization-wrapper.html"}])}]);a.directive("eavLanguageSwitcher",function(){return{restrict:"E",templateUrl:"localization/language-switcher.html",controller:["$scope","languages",function(a,b){a.languages=b}]}}),a.directive("eavLocalizationScopeControl",function(){return{restrict:"E",transclude:!0,template:"",link:function(a,b,c){},controller:["$scope","$filter","eavDefaultValueService","languages",function(a,b,c,d){var e=a,f=d,g=function(){e.model[e.options.key]||(e.model[e.options.key]={Values:[]});var d=e.model[e.options.key];if(f.currentLanguage==f.defaultLanguage&&0===d.Values.length){var g=c(e.options);d.addVs(g,f.currentLanguage)}0===Object.keys(d.Values[0].Dimensions).length&&(d.Values[0].Dimensions[f.defaultLanguage]=!1);var h;if(h=b("filter")(d.Values,function(a,b){return void 0!==a.Dimensions[f.currentLanguage]})[0],void 0===h&&(h=b("filter")(d.Values,function(a,b){return void 0!==a.Dimensions[f.defaultLanguage]})[0]),void 0===h){if(d.Values.length>1)throw"Default language value not found, but found multiple values - can't handle editing for "+a.options.key;h=d.Values[0]}d._currentValue=h,e.value=d._currentValue;var i=f.currentLanguage==f.defaultLanguage||e.value&&e.value.Dimensions[f.currentLanguage]===!1;e.to.disabled=!i};g(),e.langConf=f,e.$watch("langConf.currentLanguage",function(a,b){void 0!==b&&a!=b&&(g(),console.log("switched language from "+b+" to "+a))}),e.$watch("model[options.key].Values",function(a,b){g()},!0),e.model[e.options.key]._initCurrentValue=g}]}}),a.directive("eavLocalizationMenu",function(){return{restrict:"E",scope:{fieldModel:"=fieldModel",options:"=options",value:"=value"},templateUrl:"localization/localization-menu.html",link:function(a,b,c){},controllerAs:"vm",controller:["$scope","languages",function(a,b){var c=this;c.fieldModel=a.fieldModel,c.languages=b,c.hasLanguage=function(a){return null!==c.fieldModel.getVsWithLanguage(a)},c.isDefaultLanguage=function(){return b.currentLanguage!=b.defaultLanguage},c.enableTranslate=function(){return!0},c.infoMessage=function(){return 1===Object.keys(a.value.Dimensions).length&&a.value.Dimensions[b.defaultLanguage]===!1?"auto (default)":1===Object.keys(a.value.Dimensions).length&&a.value.Dimensions[b.currentLanguage]===!1?"":"in "+Object.keys(a.value.Dimensions).join(", ")},c.tooltip=function(){var b=[],c=[];angular.forEach(a.value.Dimensions,function(a,d){(a?c:b).push(d)});var d="editable in "+b.join(", ");return c.length>0&&(d+=", also used in "+c.join(", ")),d},c.actions={translate:function(){c.fieldModel.addVs(a.value.Value,b.currentLanguage,!1)},linkDefault:function(){c.fieldModel.removeLanguage(b.currentLanguage)},autoTranslate:function(a){alert("Sorry, but this action is not implemented yet.")},copyFrom:function(a){var d=c.fieldModel.getVsWithLanguage(a).Value;c.fieldModel.addVs(d,b.currentLanguage,!1)},useFrom:function(a){var d=c.fieldModel.getVsWithLanguage(a);c.fieldModel.setLanguageToVs(d,b.currentLanguage,!0)},shareFrom:function(a){var d=c.fieldModel.getVsWithLanguage(a);c.fieldModel.setLanguageToVs(d,b.currentLanguage,!1)}}}]}})}(),function(){"use strict";angular.module("eavEditEntity").service("eavDefaultValueService",function(){return function(a){var b=a,c=b.templateOptions.settings.DefaultValue;switch(b.type.split("-")[0]){case"boolean":return void 0!==c?"true"==c.toLowerCase():!1;case"datetime":return void 0!==c?new Date(c):null;case"entity":return[];case"number":return null;default:return c?c:""}}})}(),function(){"use strict";var a=angular.module("eavEditEntity");a.controller("EditEntityWrapperCtrl",["$q","$http","$scope","contentTypeName","entityId","$modalInstance",function(a,b,c,d,e,f){var g=this;g.contentTypeName=d,g.entityId=e,g.registeredControls=[],g.registerEditControl=function(a){g.registeredControls.push(a)},g.isValid=function(){var a=!0;return angular.forEach(g.registeredControls,function(b,c){b.isValid()||(a=!1)}),a},g.save=function(){var b=[];angular.forEach(g.registeredControls,function(a,c){b.push(a.save())}),a.all(b).then(function(){alert("All save promises resolved!"),f.dismiss("cancel")})}}])}();
//# sourceMappingURL=eav-edit.min.js.map