/*! tosic.eav 2015-09-08 09:42 */

!function(){function a(a,b,c,d,e){var f=this;f.mode=a,f.entityId=b,f.contentType=c,f.TestMessage="Test message the controller is binding correctly...",f.history=function(){return d.openItemHistory(f.entityId)},f.close=function(){e.dismiss("cancel")}}angular.module("ContentEditApp",["ContentItemsAppServices","EavAdminUi"]).constant("createdBy","2sic").constant("license","MIT").controller("EditContentItem",a),a.$inject=["mode","entityId","contentType","eavAdminDialogs","$modalInstance"]}(),function(){function a(a,b,c,d,e,f){var g=this,h=a(c,d,e);g.add=function(){f.openItemNew(h.contentTypeId,h.liveListReload)},g.edit=function(a){f.openItemEditWithEntityId(a.Id,h.liveListReload)},g.items=h.liveList(),g.dynamicColumns=[],h.getColumns().then(function(a){for(var b=a.data,c=0;c<b.length;c++)b[c].IsTitle||g.dynamicColumns.push(b[c])}),g.tryToDelete=function(a){confirm("Delete 'title-unkwonn-yet' ("+a.Id+") ?")&&h["delete"](a.Id)}}angular.module("ContentItemsApp",["ContentItemsAppServices","eavGlobalConfigurationProvider","EavAdminUi"]).constant("createdBy","2sic").constant("license","MIT").controller("ContentItemsList",a),a.$inject=["contentItemsSvc","eavGlobalConfigurationProvider","appId","contentType","contentTypeId","eavAdminDialogs"]}(),function(){function a(a,b,c,d,e){var f=this,g=c(a,b);f.entityId=b,f.items=g.liveList(),f.close=function(){d.dismiss("cancel")},f.details=function(a){e.open({animation:!0,templateUrl:"content-items/history-details.html",controller:"HistoryDetails",controllerAs:"vm",resolve:{changeId:function(){return a.ChangeId},dataSvc:function(){return g}}})}}function b(a,b,c){var d=this;alert("not implemented yet");var e=b;e.getVersionDetails(a).then(function(a){alert(a.data),d.items=a.data}),d.close=function(){c.dismiss("cancel")}}angular.module("HistoryApp",["ContentItemsAppServices","eavGlobalConfigurationProvider","HistoryServices","eavTemplates"]).controller("History",a).controller("HistoryDetails",b),a.$inject=["appId","entityId","historySvc","$modalInstance","$modal"],b.$inject=["changeId","dataSvc","$modalInstance"]}(),function(){function ContentTypeListController(contentTypeSvc,eavAdminDialogs,appId){var vm=this,svc=contentTypeSvc(appId);vm.items=svc.liveList(),vm.refresh=svc.liveListReload,vm.isLoaded=function(){return vm.items.isLoaded},vm.tryToDelete=function(a,b){var c=confirm("Delete '"+a+"' ("+b+") ?");c&&svc["delete"](b)},vm.edit=function(a){void 0===a&&(a=svc.newItem()),eavAdminDialogs.openContentTypeEdit(a,vm.refresh)},vm.editFields=function(a){eavAdminDialogs.openContentTypeFields(a,vm.refresh)},vm.editItems=function(a){eavAdminDialogs.openContentItems(svc.appId,a.StaticName,a.Id,vm.refresh)},vm.tryToDelete=function(a){confirm("Delete?")&&svc["delete"](a)},vm.liveEval=function admin(){var inp=prompt("This is for very advanced operations. Only use this if you know what you're doing. \n\n Enter admin commands:");inp&&eval(inp)},vm.isGuid=function(a){var b=new RegExp(/[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}/i);return b.test(a)},vm.permissions=function(a){return vm.isGuid(a.StaticName)?eavAdminDialogs.openPermissionsForGuid(svc.appId,a.StaticName,vm.refresh):alert("Permissions can only be set to Content-Types with Guid Identifiers")},vm.openExport=function(){return eavAdminDialogs.openContentExport(svc.appId)},vm.openImport=function(){return eavAdminDialogs.openContentImport(svc.appId)}}function ContentTypeEditController(a,b,c,d){var e=this,f=b(a);e.item=c,e.ok=function(){f.save(c),d.close(e.item)},e.cancel=function(){d.dismiss("cancel")}}function ContentTypeFieldListController(a,b,c,d,e,f,g,h,i){var j=this,k=b(a,c);j.close=function(){f.dismiss("cancel")},j.items=k.liveList(),j.add=function(){g.open({animation:!0,templateUrl:"content-types/content-types-field-edit.html",controller:"FieldsAdd",controllerAs:"vm",resolve:{dataSvc:function(){return k}}})},j.moveUp=k.moveUp,j.moveDown=k.moveDown,j.setTitle=k.setTitle,j.tryToDelete=function(a){return a.IsTitle?alert("Can't delete Title"):confirm("Delete?")?k["delete"](a):void 0},j.createOrEditMetadata=function(b,c){c="@"+c;var d=void 0!==b.Metadata[c];d?i.openItemEditWithEntityId(b.Metadata[c].EntityId,k.liveListReload):i.openMetadataNew(a,"attribute",b.Id,c,k.liveListReload)}}function ContentTypeFieldAddController(a,b){var c=this,d=a,e=d.newItem;c.items=[e(),e(),e(),e(),e(),e(),e(),e(),e(),e()],c.item=d.newItem(),c.types=d.types.liveList(),c.ok=function(){for(var a=c.items,e=[],f=0;f<a.length;f++)a[f].StaticName&&e.push(a[f]);d.addMany(e,0),b.close()},c.cancel=function(){b.dismiss("cancel")}}angular.module("ContentTypesApp",["ContentTypeServices","ContentTypeFieldServices","eavGlobalConfigurationProvider","EavAdminUi"]).constant("createdBy","2sic").constant("license","MIT").controller("List",ContentTypeListController).controller("Edit",ContentTypeEditController).controller("FieldList",ContentTypeFieldListController).controller("FieldsAdd",ContentTypeFieldAddController),ContentTypeListController.$inject=["contentTypeSvc","eavAdminDialogs","appId"],ContentTypeEditController.$inject=["appId","contentTypeSvc","item","$modalInstance"],ContentTypeFieldListController.$inject=["appId","contentTypeFieldSvc","contentType","eavGlobalConfigurationProvider","eavManagementSvc","$modalInstance","$modal","$q","eavAdminDialogs"],ContentTypeFieldAddController.$inject=["dataSvc","$modalInstance"]}(),angular.module("eavTemplates",[]).run(["$templateCache",function(a){"use strict";a.put("content-items/content-edit.html",'<div class=modal-header><button type=button class="btn btn-default" ng-click=vm.history()><span class="glyphicon glyphicon-time">history / todo</span></button><h3 class=modal-title>Edit / New Content</h3></div><div class=modal-body>this is where the edit appears. Would edit entity {{vm.entityId}} or add a {{vm.contentType}} - depending on the mode: {{vm.mode}}<h3>Use cases</h3><ol><li>Edit an existing entity with ID</li><li>Create a new entity of a certaint content-type, just save and done (like from a "new" button without content-group)</li><li>Create a new entity and put it into a content-group at the right place</li><li>Create a new entity of a certain type and assign it to a metadata thing (guid, int, string)</li><li>Edit an item + presentation</li><li>Edit multiple items with IDs</li></ol></div>'),a.put("content-items/content-items.html",'<div class=modal-header><h3 class=modal-title>Manage Content / Data</h3></div><div class=modal-body><h3 .>todo</h3><ol><li>change entity-delivery of values ot be a serializer setting</li></ol><button type=button class="btn btn-default" ng-click=vm.add()><span class="glyphicon glyphicon-plus"></span></button> <button type=button class="btn btn-default" ng-click=vm.refresh()><span class="glyphicon glyphicon-repeat"></span></button><div style="overflow: auto"><table class="table table-striped table-hover"><thead><tr><th>ID</th><th>Publ</th><th style="width: 200px">Title</th><th>Del</th><th ng-repeat="col in vm.dynamicColumns">{{col.StaticName}}</th></tr></thead><tbody><tr ng-repeat="item in vm.items"><td style="white-space: nowrap"><button type=button class="btn btn-xs" ng-click=vm.edit(item)><span class="glyphicon glyphicon-pencil"></span></button> <span>{{item.Id}}</span></td><td style="white-space: nowrap"><span class=glyphicon ng-class="{\'glyphicon-ok-circle\': item.IsPublished, \'glyphicon-ban-circle\' : !item.IsPublished && !item.Published, \'glyphicon-record\' : !item.IsPublished && item.Published }" tooltip="{{ item.IsPublished ? \'Published and visible\' : item.Published ? \'This is a draft for another item\' : \'Not published at the moment\' }}"></span> <span class=glyphicon ng-class="{\'glyphicon-paperclip\':  item.Draft, \'glyphicon-export\': item.Published}" tooltip="{{ item.Draft ? \'Has draft:\' + item.Draft.RepositoryId : \'\' }}{{ item.Published ? \'Will replace published:\' + item.Published.RepositoryId : \'\' }}"></span></td><td><div style="height: 20px; width: 200px; position: relative; overflow: hidden; white-space: nowrap; text-overflow: ellipsis" tooltip={{item.Title}}><a ng-click=vm.edit(item) target=_self>{{item.Title}}{{ !item.Title ? \'no title on # \' + item.Id : \'\' }}</a></div></td><td><button type=button class="btn btn-xs" ng-click=vm.tryToDelete(item)><span class="glyphicon glyphicon-remove"></span></button></td><td ng-repeat="col in vm.dynamicColumns"><div style="height: 20px; max-width: 100px; position: relative; overflow: hidden; text-overflow: ellipsis" tooltip={{item[col.StaticName]}}>{{item[col.StaticName].toString().substring(0,25)}}</div></td></tr><tr ng-if=!vm.items.length><td colspan=100>No Items</td></tr></tbody></table></div></div>'),a.put("content-items/history-details.html",'<div><div class=modal-header><button class="btn btn-primary pull-right" type=button ng-click=vm.close()><span class="glyphicon glyphicon-remove"></span></button><h3 class=modal-title>History Details {{vm.ChangeId}} of {{vm.entityId}}</h3></div><div class=modal-body><h1>todo</h1><table class="table table-striped table-hover"><thead><tr><th>Field</th><th>Language</th><th>Value</th><th>SharedWith</th></tr></thead><tbody><tr ng-repeat="item in vm.items | orderBy:SysCreatedDate:reverse"><td>{{item.Field}}</td><td>{{item.Language}}</td><td>{{item.Value}}</td><td>{{item.SharedWith}}</td></tr><tr ng-if=!vm.items.length><td colspan=100>No History</td></tr></tbody></table><button class="btn btn-primary pull-right" type=button ng-click=vm.restore()><span class="glyphicon glyphicon-ok">todo restore</span></button></div></div>'),a.put("content-items/history.html",'<div><div class=modal-header><button class="btn btn-primary pull-right" type=button ng-click=vm.close()><span class="glyphicon glyphicon-remove"></span></button><h3 class=modal-title>History of {{vm.entityId}}</h3></div><div class=modal-body><table class="table table-striped table-hover"><thead><tr><th>#</th><th>When</th><th>User</th><th></th></tr></thead><tbody><tr ng-repeat="item in vm.items | orderBy:SysCreatedDate:reverse"><td><span tooltip="ChangeId: {{item.ChangeId}}">{{item.VirtualVersion}}</span></td><td>{{item.SysCreatedDate.replace("T", " ")}}</td><td>{{item.User}}</td><td><button type=button class="btn btn-xs" ng-click=vm.details(item)><span class="glyphicon glyphicon-search"></span></button></td></tr><tr ng-if=!vm.items.length><td colspan=100>No History</td></tr></tbody></table></div></div>'),a.put("content-types/content-types-edit.html",'<div class=modal-header><h3 class=modal-title>Edit Content Type external</h3></div><div class=modal-body><h3>todo</h3><ol><li>get validators to work</li></ol>Name:<br><input ng-model="vm.item.Name"><br>Description:<br><input ng-model="vm.item.Description"><br>Scope:<br><input disabled ng-model="vm.item.Scope"></div><div class=modal-footer><button class="btn btn-primary" type=button ng-click=vm.ok()>OK</button> <button class="btn btn-warning" type=button ng-click=vm.cancel()>Cancel</button></div>'),a.put("content-types/content-types-field-edit.html",'<div class=modal-header><h3 class=modal-title>Add Fields</h3></div><div class=modal-body><table class="table table-hover"><thead><tr><th>Name</th><th>Data Type</th></tr></thead><tbody><tr ng-repeat="item in vm.items"><td><input ng-model=item.StaticName ng-required="true"></td><td><select ng-model=item.Type ng-options="o for o in vm.types track by o"></select></td></tr></tbody></table></div><div class=modal-footer><button class="btn btn-primary" type=button ng-click=vm.ok()>OK</button> <button class="btn btn-warning" type=button ng-click=vm.cancel()>Cancel</button></div>'),a.put("content-types/content-types-fields.html",'<div class=modal-header><button class="btn btn-primary pull-right" type=button ng-click=vm.close()><span class="glyphicon glyphicon-remove"></span></button><h3 class=modal-title>Content Type Fields</h3></div><div class=modal-body><h3>todo</h3><ol><li>validators on the +new dialog</li></ol><a ng-click=vm.add() class="btn btn-default"><span class="glyphicon glyphicon-plus"></span></a><table class="table table-hover"><thead><tr><th>Title</th><th>Static Name</th><th>Edit & Data Type</th><th>Label</th><th>Notes</th><th>Sort</th><th>Delete</th></tr></thead><tbody><tr ng-repeat="item in vm.items | orderBy: \'SortOrder\'"><td><button type=button class="btn btn-xs" xng-class="{\'btn-success\': item.IsTitle }" ng-click=vm.setTitle(item)><span class=glyphicon ng-class="{ \'glyphicon-star\': item.IsTitle, \'glyphicon-star-empty\': !item.IsTitle}" ng-style="(item.IsTitle ? \'\' : \'color: transparent !important\')"></span></button></td><td><span tooltip="{{ \'Id: \' + item.Id}}">{{item.StaticName}}</span></td><td style="white-space: nowrap"><button type=button class="btn btn-xs" ng-click="vm.createOrEditMetadata(item, \'All\')"><span class="glyphicon glyphicon-pencil"></span>General</button> <button type=button class="btn btn-xs" ng-click="vm.createOrEditMetadata(item, item.Type)"><span class="glyphicon glyphicon-pencil"></span>{{item.Type}}</button></td><td>{{item.Metadata[\'@All\'].Attributes.Name.DefaultValue.TypedContents}}</td><td>{{item.Metadata[\'@All\'].Attributes.Notes.DefaultValue.TypedContents}}</td><td style="white-space: nowrap"><button type=button class="btn btn-xs" ng-disabled=$first ng-click=vm.moveUp(item)><span class="glyphicon glyphicon-arrow-up"></span></button> <button type=button class="btn btn-xs" ng-disabled=$last ng-click=vm.moveDown(item)><span class="glyphicon glyphicon-arrow-down"></span></button></td><td><button type=button class="btn btn-xs" ng-click=vm.tryToDelete(item)><span class="glyphicon glyphicon-remove"></span></button></td></tr><tr ng-if=!vm.items.length><td colspan=100>No Items</td></tr></tbody></table></div>'),a.put("content-types/content-types.html",'<div class=modal-header><h3 class=modal-title>Content-Types and Data</h3></div><div class=modal-body><div ng-controller="List as vm" class=ng-cloak><a ng-click=vm.edit() class="btn btn-default"><span class="glyphicon glyphicon-plus"></span></a> <button type=button class="btn btn-default" ng-click=vm.refresh()><span class="glyphicon glyphicon-repeat"></span></button> <button type=button class="btn btn-default" ng-click=vm.liveEval()><span class="glyphicon glyphicon-flash"></span></button><table class="table table-hover"><thead><tr><th>Name</th><th>Description</th><th>Fields</th><th>Items</th><th>Permissions</th><th></th></tr></thead><tbody><tr ng-if=vm.items.isLoaded ng-repeat="item in vm.items | orderBy:\'Name\'"><td><a ng-click=vm.edit(item) target=_self>{{item.Name}}</a></td><td>{{item.Description}}</td><td><button type=button class="btn btn-xs" ng-click=vm.editFields(item)><span class="glyphicon glyphicon-cog">&nbsp;{{item.Fields}}</span></button></td><td><button type=button class="btn btn-xs" ng-click=vm.editItems(item)><span class="glyphicon glyphicon-list">&nbsp;{{item.Items}}</span></button></td><td><button type=button class="btn btn-xs" ng-click=vm.permissions(item) ng-if=vm.isGuid(item.StaticName)><span class="glyphicon glyphicon-user"></span> Permissions</button></td><td><button type=button class="btn btn-xs" ng-click=vm.tryToDelete(item)><span class="glyphicon glyphicon-remove"></span></button></td></tr><tr ng-if=!vm.items.length><td colspan=100>Loading... or no items found</td></tr></tbody></table><h3>Export/Import</h3><button type=button class=btn ng-click=vm.openExport()><span class="glyphicon glyphicon-export"></span> Export</button> xxx <button type=button class=btn ng-click=vm.openImport()><span class="glyphicon glyphicon-import"></span> Import</button></div></div>'),a.put("permissions/permissions-standalone.html",'<div sxc-app=PermissionsApp eav-app=PermissionsApp><div ng-controller="Admin as vm"><h1>todo: include the other file here</h1></div></div>'),a.put("permissions/permissions.html",'<div><div class=modal-header><button class="btn btn-primary pull-right" type=button ng-click=vm.close()><span class="glyphicon glyphicon-remove"></span></button><h3 class=modal-title>Permission</h3></div><div class=modal-body><button type=button class="btn btn-default" ng-click=vm.add()><span class="glyphicon glyphicon-plus"></span></button> <button type=button class="btn btn-default" ng-click=vm.refresh()><span class="glyphicon glyphicon-repeat"></span></button><table class="table table-striped table-hover"><thead><tr><th>Name</th><th>ID</th><th>Condition</th><th>Grant</th><th>Delete</th></tr></thead><tbody><tr ng-repeat="item in vm.items | orderBy:\'Title\'"><td><a ng-click=vm.edit(item)>{{item.Title}}</a></td><td>{{item.Id}}</td><td>{{item.Condition}}</td><td>{{item.Grant}}</td><td><button type=button class="btn btn-xs" ng-click=vm.tryToDelete(item)><span class="glyphicon glyphicon-remove"></span></button></td></tr><tr ng-if=!vm.items.length><td colspan=100>No Items</td></tr></tbody></table></div></div>'),a.put("pipelines/pipeline-designer.html",'<div class=ng-cloak><div ng-controller=PipelineDesignerController><div id=pipelineContainer><div ng-repeat="dataSource in pipelineData.DataSources" datasource id=dataSource_{{dataSource.EntityGuid}} class=dataSource ng-attr-style="top: {{dataSource.VisualDesignerData.Top}}px; left: {{dataSource.VisualDesignerData.Left}}px"><div class=configure ng-click=configureDataSource(dataSource) title="Configure this DataSource" ng-if=!dataSource.ReadOnly><span class="glyphicon glyphicon-list-alt"></span></div><div class=name title="Click to edit the Name" ng-click=editName(dataSource)>{{dataSource.Name || \'(unnamed)\'}}</div><br><div class=description title="Click to edit the Description" ng-click=editDescription(dataSource)>{{dataSource.Description || \'(no description)\'}}</div><br><div class=typename ng-attr-title={{dataSource.PartAssemblyAndType}}>Type: {{dataSource.PartAssemblyAndType | typename: \'className\'}}</div><div class=ep title="Drag a new Out-Connection from here" ng-if=!dataSource.ReadOnly><span class="glyphicon glyphicon-plus-sign"></span></div><div class="delete glyphicon glyphicon-remove" title="Delete this DataSource" ng-click=remove($index) ng-if=!dataSource.ReadOnly></div></div></div><div class="actions panel panel-default"><div class=panel-heading><span class=pull-left>Actions</span> <a href=http://2sxc.org/help class="btn btn-info btn-xs pull-right" target=_blank><span class="glyphicon glyphicon-question-sign"></span> Help</a></div><div class=panel-body><button type=button class="btn btn-primary btn-block" ng-disabled=readOnly ng-click=savePipeline()><span class="glyphicon glyphicon-floppy-save"></span> Save</button><select class=form-control ng-model=addDataSourceType ng-disabled=readOnly ng-change=addDataSource() ng-options="d.ClassName for d in pipelineData.InstalledDataSources | filter: {allowNew: \'!false\'} | orderBy: \'ClassName\'"><option value="">-- Add DataSource --</option></select><button type=button class="btn btn-default btn-sm" title="Query the Data of this Pipeline" ng-click=queryPipeline()><span class="glyphicon glyphicon-play"></span> Query</button> <button type=button class="btn btn-default btn-sm" title="Clone this Pipeline with all DataSources and Configurations" ng-click=clonePipeline() ng-disabled=!PipelineEntityId><span class="glyphicon glyphicon-share-alt"></span> Clone</button> <button type=button class="btn btn-default btn-sm" ng-click=editPipelineEntity()><span class="glyphicon glyphicon-pencil"></span> Test Parameters</button> <button type=button class="btn btn-info btn-xs" ng-click=toggleEndpointOverlays()><span class="glyphicon glyphicon-info-sign"></span> {{showEndpointOverlays ? \'Hide\' : \'Show\' }} Overlays</button> <button type=button class="btn btn-info btn-xs" ng-click=repaint()><span class="glyphicon glyphicon-repeat"></span> Repaint</button> <button type=button class="btn btn-info btn-xs" ng-click=toogleDebug()><span class="glyphicon glyphicon-info-sign"></span> {{debug ? \'Hide\' : \'Show\'}} Debug Info</button></div></div><toaster-container></toaster-container><pre ng-if=debug>{{pipelineData | json}}</pre></div></div>'),a.put("pipelines/pipelines.html",'<div class=ng-cloak><div ng-controller="PipelineManagementController as vm"><button type=button class="btn btn-default" ng-click=vm.add()><span class="glyphicon glyphicon-plus"></span></button> <button type=button class="btn btn-default" ng-click=vm.refresh()><span class="glyphicon glyphicon-repeat"></span></button> <button type=button class="btn btn-default" ng-click=vm.liveEval()><span class="glyphicon glyphicon-flash"></span></button><table class="table table-striped table-hover"><thead><tr><th>ID</th><th>Name</th><th>Description</th><th>Actions</th></tr></thead><tbody><tr ng-repeat="pipeline in vm.pipelines | orderBy:\'Name\'"><td>{{pipeline.Id}}</td><td><a ng-click=vm.edit(pipeline)>{{pipeline.Name}}</a></td><td>{{pipeline.Description}}</td><td><a class="btn btn-xs btn-default" ng-click=vm.design(pipeline)><span class="glyphicon glyphicon-random"></span>&nbsp;Design</a> <button type=button class="btn btn-xs" ng-click=vm.permissions(pipeline)><span class="glyphicon glyphicon-user"></span>&nbsp;Permissions</button> <button type=button class="btn btn-xs" ng-click=vm.clone(pipeline)><span class="glyphicon glyphicon-share-alt"></span>&nbsp;Clone</button> <button type=button class="btn btn-xs" ng-click=vm.delete(pipeline)><span class="glyphicon glyphicon-remove"></span>&nbsp;Delete</button></td></tr><tr ng-if=!vm.pipelines.length><td colspan=100>No Items</td></tr></tbody></table></div></div>')}]),function(){function a(a,b,c,d,e,f){var g=this,h=a(d,e);g.edit=function(a){b.openItemEditWithEntityId(a.Id,h.liveListReload)},g.add=function(){b.openMetadataNew("entity",h.PermissionTargetGuid,h.ctName,h.liveListReload)},g.items=h.liveList(),g.tryToDelete=function(a){confirm("Delete '"+a.Title+"' ("+a.Id+") ?")&&h["delete"](a.Id)},g.refresh=h.liveListReload,g.close=function(){f.dismiss("cancel")}}angular.module("PermissionsApp",["PermissionsServices","eavGlobalConfigurationProvider","EavAdminUi"]).constant("createdBy","2sic").constant("license","MIT").controller("PermissionList",a),a.$inject=["permissionsSvc","eavAdminDialogs","eavGlobalConfigurationProvider","appId","targetGuid","$modalInstance"]}(),angular.module("PipelineDesigner",["PipelineDesigner.filters","ngResource","toaster","eavGlobalConfigurationProvider","eavDialogService","PipelineService","eavTemplates"]).directive("datasource",["$timeout",function(a){return{restrict:"A",link:function(b,c){a(function(){b.makeDataSource(b.dataSource,c)}),b.$last===!0&&a(function(){b.$emit("ngRepeatFinished")})}}}]).factory("uiNotification",["toaster",function(a){"use strict";var b=function(b,c,d,e){angular.element(document).ready(function(){a.clear(),a.pop(b,c,d,e?null:0)})};return{clear:function(){a.clear()},error:function(a,c){var d;c&&c.data&&c.data.Message?(d=c.data.Message,c.data.ExceptionMessage&&(d+="\n"+c.data.ExceptionMessage)):d=c,b("error",a,d)},note:function(a,c,d){b("note",a,c,d)},success:function(a,c,d){b("success",a,c,d)},wait:function(a){b("note",a?a:"Please wait ..","This shouldn't take long",!1)}}}]),angular.module("PipelineDesigner.filters",[]).filter("typename",function(){return function(a,b){var c=a.match(/[^,\s]+/g);switch(b){case"classFullName":if(c)return c[0];break;case"className":if(c){var d=c[0].match(/[^\.]+/g);return d[d.length-1]}}return a}}),angular.module("PipelineDesigner").controller("PipelineDesignerController",["$scope","pipelineService","$location","$timeout","$filter","uiNotification","eavDialogService","$log","eavGlobalConfigurationProvider","$q",function(a,b,c,d,e,f,g,h,i,j){"use strict";if(f.wait(),a.readOnly=!0,a.dataSourcesCount=0,a.dataSourceIdPrefix="dataSource_",a.debug=!1,a.PipelineEntityId=c.search().PipelineId,!c.search().AppId)return void d(function(){f.error("Please specify an AppId")});b.setAppId(c.search().AppId),b.getPipeline(a.PipelineEntityId).then(function(b){a.pipelineData=b,a.readOnly=!b.Pipeline.AllowEdit,f.note("Ready",a.readOnly?"This pipeline is read only":"You can now design the Pipeline. \nNote that there are still a few UI bugs.\nVisit 2sxc.org/help for more.",!0),a.PipelineEntityId&&1!==a.pipelineData.DataSources.length||p()},function(a){f.error("Loading Pipeline failed",a)}),jsPlumb.ready(function(){a.jsPlumbInstance=jsPlumb.getInstance({Connector:["Bezier",{curviness:70}],HoverPaintStyle:{lineWidth:4,strokeStyle:"#216477",outlineWidth:2,outlineColor:"white"},PaintStyle:{lineWidth:4,strokeStyle:"#61B7CF",joinstyle:"round",outlineColor:"white",outlineWidth:2},Container:"pipelineContainer"}),a.jsPlumbInstance.bind("connectionDetached",function(b){if(b.targetId==a.dataSourceIdPrefix+"Out"){var c=angular.element(b.target).scope().dataSource.Definition().In,e=b.targetEndpoint.getOverlay("endpointLabel").label;-1==c.indexOf(e)&&d(function(){a.jsPlumbInstance.deleteEndpoint(b.targetEndpoint)})}}),a.jsPlumbInstance.bind("connection",function(b){if(a.connectionsInitialized)for(var c=0,d=function(a){var c=a.getOverlay("endpointLabel").getLabel();c===g&&b.targetEndpoint.id!==a.id&&angular.element(a.canvas).hasClass("targetEndpoint")&&(i=a)};;){c++;var e="Please name the Stream";c>1&&(e+=". Ensure the name is not used by any other Stream on this DataSource.");var f=b.targetEndpoint.getOverlay("endpointLabel"),g=prompt(e,f.getLabel());if(g){f.setLabel(g);var h=a.jsPlumbInstance.getEndpoints(b.target.id),i=null;if(angular.forEach(h,d),!i)break}}})});var k=function(b){return[["Label",{id:"endpointLabel",location:[.5,b?-.5:1.5],label:"Default",cssClass:b?"endpointSourceLabel":"endpointTargetLabel",events:{dblclick:function(b){if(!a.readOnly){var c=prompt("Rename Stream",b.label);c&&b.setLabel(c)}}}}]]},l={paintStyle:{fillStyle:"transparent",radius:10,lineWidth:0},cssClass:"sourceEndpoint",maxConnections:-1,isSource:!0,anchor:["Continuous",{faces:["top"]}],overlays:k(!0)},m={paintStyle:{fillStyle:"transparent",radius:10,lineWidth:0},cssClass:"targetEndpoint",maxConnections:1,isTarget:!0,anchor:["Continuous",{faces:["bottom"]}],overlays:k(!1),dropOptions:{hoverClass:"hover",activeClass:"active"}};a.makeDataSource=function(b,c){a.jsPlumbInstance.doWhileSuspended(function(){var d=b.Definition();if(null!==d){if(angular.forEach(d.Out,function(a){n(c,a,!1)}),angular.forEach(d.In,function(a){n(c,a,!0)}),d.In){var e=m;e.maxConnections=-1,a.jsPlumbInstance.makeTarget(c,e)}a.jsPlumbInstance.makeSource(c,l,{filter:".ep .glyphicon"})}a.readOnly||a.jsPlumbInstance.draggable(c,{grid:[20,20],drag:a.dataSourceDrag})}),a.dataSourcesCount++};var n=function(b,c,d){if(!b.length)return void h.error({message:"Element not found",selector:b.selector});var e=b.scope().dataSource,f=b.attr("id")+(d?"_in_":"_out_")+c,g={uuid:f,enabled:!e.ReadOnly||"Out"==e.EntityGuid},i=a.jsPlumbInstance.addEndpoint(b,d?m:l,g);i.getOverlay("endpointLabel").setLabel(c)};a.connectionsInitialized=!1,a.$on("ngRepeatFinished",function(){a.connectionsInitialized||(a.jsPlumbInstance.doWhileSuspended(function(){o(a.pipelineData.Pipeline.StreamWiring)}),a.repaint(),a.connectionsInitialized=!0)});var o=function(b){angular.forEach(b,function(b){var c=a.dataSourceIdPrefix+b.From,d=c+"_out_"+b.Out,e=a.dataSourceIdPrefix+b.To,f=e+"_in_"+b.In;a.jsPlumbInstance.getEndpoint(d)||n(jsPlumb.getSelector("#"+c),b.Out,!1),a.jsPlumbInstance.getEndpoint(f)||n(jsPlumb.getSelector("#"+e),b.In,!0);try{a.jsPlumbInstance.connect({uuids:[d,f]})}catch(g){h.error({message:"Connection failed",from:d,to:f})}})},p=function(){angular.forEach(i.pipelineDesigner.defaultPipeline.dataSources,function(b){a.addDataSource(b.partAssemblyAndType,b.visualDesignerData,!1,b.entityGuid)});var b=a.$on("ngRepeatFinished",function(){a.connectionsInitialized=!1,o(i.pipelineDesigner.defaultPipeline.streamWiring),a.connectionsInitialized=!0,b()})};a.addDataSource=function(c,d,f,g){c||(c=a.addDataSourceType.PartAssemblyAndType,a.addDataSourceType=null),d||(d={Top:100,Left:100});var h={VisualDesignerData:d,Name:e("typename")(c,"className"),Description:"",PartAssemblyAndType:c,EntityGuid:g||"unsaved"+(a.dataSourcesCount+1)};h=angular.extend(h,b.getNewDataSource(a.pipelineData,h)),a.pipelineData.DataSources.push(h),f!==!1&&a.savePipeline()},a.remove=function(b){var c=a.pipelineData.DataSources[b];if(confirm('Delete DataSource "'+(c.Name||"(unnamed)")+'"?')){var d=a.dataSourceIdPrefix+c.EntityGuid;a.jsPlumbInstance.selectEndpoints({element:d}).remove(),a.pipelineData.DataSources.splice(b,1)}},a.editName=function(a){if(!a.ReadOnly){var b=prompt("Rename DataSource",a.Name);void 0!==b&&b.trim()&&(a.Name=b)}},a.editDescription=function(a){if(!a.ReadOnly){var b=prompt("Edit Description",a.Description);void 0!==b&&b.trim()&&(a.Description=b)}},a.dataSourceDrag=function(){var b=$(this),c=b.offset(),d=b.scope().dataSource;a.$apply(function(){d.VisualDesignerData.Top=Math.round(c.top),d.VisualDesignerData.Left=Math.round(c.left)})},a.configureDataSource=function(c){if(!c.ReadOnly){if(!q(c))return void a.savePipeline();f.wait(),b.getDataSourceConfigurationUrl(c).then(function(a){f.clear(),g.open({url:a,title:"Configure DataSource "+c.Name})},function(a){f.error("Open Configuration UI failed",a)})}};var q=function(a){return-1===a.EntityGuid.indexOf("unsaved")};a.showEndpointOverlays=!0,a.toggleEndpointOverlays=function(){a.showEndpointOverlays=!a.showEndpointOverlays;var b=a.jsPlumbInstance.selectEndpoints();a.showEndpointOverlays?b.showOverlays():b.hideOverlays()},a.editPipelineEntity=function(){a.savePipeline().then(function(){g.open({url:b.getPipelineUrl("edit",a.PipelineEntityId),title:"Edit Test Values",onClose:function(){b.getPipeline(a.PipelineEntityId).then(s)}})})};var r=function(){var b=[];angular.forEach(a.jsPlumbInstance.getAllConnections(),function(c){b.push({From:c.sourceId.substr(a.dataSourceIdPrefix.length),Out:c.endpoints[0].getOverlay("endpointLabel").label,To:c.targetId.substr(a.dataSourceIdPrefix.length),In:c.endpoints[1].getOverlay("endpointLabel").label})}),a.pipelineData.Pipeline.StreamWiring=b;var c=[];a.jsPlumbInstance.selectEndpoints({target:a.dataSourceIdPrefix+"Out"}).each(function(a){c.push(a.getOverlay("endpointLabel").label)}),a.pipelineData.Pipeline.StreamsOut=c.join(",")};a.savePipeline=function(c){f.wait("Saving..."),a.readOnly=!0,r();var d=j.defer();return"undefined"==typeof c&&(c=s),b.savePipeline(a.pipelineData.Pipeline,a.pipelineData.DataSources).then(c,function(b){f.error("Save Pipeline failed",b),a.readOnly=!1,d.reject()}).then(function(){d.resolve()}),d.promise};var s=function(d){a.pipelineData.Pipeline=d.Pipeline,a.PipelineEntityId=d.Pipeline.EntityId,c.search("PipelineId",d.Pipeline.EntityId),a.readOnly=!d.Pipeline.AllowEdit,a.pipelineData.DataSources=d.DataSources,b.postProcessDataSources(a.pipelineData),f.success("Saved","Pipeline "+d.Pipeline.EntityId+" saved and loaded",!0),a.jsPlumbInstance.reset(),a.connectionsInitialized=!1};a.repaint=function(){a.jsPlumbInstance.repaintEverything()},a.toogleDebug=function(){a.debug=!a.debug},a.queryPipeline=function(){var c=function(){f.wait("Running Query ..."),b.queryPipeline(a.PipelineEntityId).then(function(b){f.clear(),g.open({title:"Query result",content:"<div><div>The Full result was logged to the Browser Console. Further down you'll find more debug-infos. </div><h3>Parameters used</h3><div>"+(a.pipelineData.Pipeline.TestParameters.length>5?a.pipelineData.Pipeline.TestParameters.replace("\n","<br>"):"no test params specified")+"</div> <h3>Query result - executed in "+b.QueryTimer.Milliseconds+"ms ("+b.QueryTimer.Ticks+'tx)</h3><div> <pre id="pipelineQueryResult">'+e("json")(b.Query)+"</pre>"+i(b)+"</div></div"}),d(function(){j(b)}),h.debug(b)},function(a){f.error("Query failed",a)})},i=function(a){var b="<h3>Sources</h3><table><tr><th>Guid</th><th>Type</th><th>Config</th></tr>",c=a.Sources;for(var d in c)if("$"!=d[0]){b+="<tr><td><pre>"+d.substring(0,13)+"...</pre></td><td>"+c[d].Type+"</td><td>";var e=c[d].Configuration;for(var f in e)"$"!=f[0]&&(b+="<b>"+f+"</b>="+e[f]+"</br>");b+="</td></tr>"}b+="</table>",b+="<h3>Streams</h3><table><tr><th>Source</th><th>Target</th><th>Items</th><th>Err</th></tr>",c=a.Streams;
for(var g in c)"$"!=g[0]&&(b+="<tr><td><pre>"+c[g].Source.substring(0,13)+":"+c[g].SourceOut+"</pre></td><td><pre>"+c[g].Target.substring(0,13)+":"+c[g].TargetIn+"</pre></td><td>"+c[g].Count+"</td><td>"+c[g].Error+"</td></tr>");return b+="</table>"},j=function(b){angular.forEach(b.Streams,function(b){var c=a.dataSourceIdPrefix+b.Source,d=a.dataSourceIdPrefix+b.Target;"00000000-0000-0000-0000-000000000000"===b.Target&&(d=a.dataSourceIdPrefix+"Out");var e=c+"_out_"+b.SourceOut,f=d+"_in_"+b.TargetIn,g=a.jsPlumbInstance.getEndpoint(e),i=!1;g&&angular.forEach(g.connections,function(a){return a.endpoints[1].getUuid()===f?(a.setLabel({label:b.Count.toString(),cssClass:"streamEntitiesCount"}),void(i=!0)):void 0}),i||h.error("Stream not found",b,g)})};a.savePipeline().then(c)},a.clonePipeline=function(){if(confirm("Clone Pipeline "+a.PipelineEntityId+"?")){var c=function(){return b.clonePipeline(a.PipelineEntityId)},d=function(a){return b.getPipeline(a.EntityId)};a.savePipeline(null).then(c).then(d).then(s)}}}]),angular.module("PipelineManagement",["PipelineService","eavGlobalConfigurationProvider","ngResource","eavNgSvcs","EavAdminUi"]).controller("PipelineManagementController",["$rootScope","$scope","$location","appId","$window","pipelineService","eavAdminDialogs",function($rootScope,$scope,$location,appId,$window,pipelineService,eavAdminDialogs){var vm=this;vm.appId=appId,pipelineService.setAppId(appId),pipelineService.initContentTypes(),vm.getPipelineUrl=pipelineService.getPipelineUrl,vm.refresh=function(){vm.pipelines=pipelineService.getPipelines(appId)},vm.refresh(),vm["delete"]=function(a){confirm('Delete Pipeline "'+a.Name+'" ('+a.Id+")?")&&pipelineService.deletePipeline(a.Id).then(function(){vm.refresh()},function(a){alert(a)})},vm.clone=function(a){pipelineService.clonePipeline(a.Id).then(function(){vm.refresh()},function(a){alert(a)})},vm.permissions=function(a){return eavAdminDialogs.openPermissionsForGuid(appId,a.Guid)},vm.add=function(){eavAdminDialogs.openItemNew(pipelineService.dataPipelineAttributeSetId,vm.refresh)},vm.edit=function(a){eavAdminDialogs.openItemEditWithEntityId(a.Id,vm.refresh)},vm.design=function(a){return eavAdminDialogs.editPipeline(vm.appId,a.Id,vm.refresh)},vm.liveEval=function admin(){var inp=prompt("This is for very advanced operations. Only use this if you know what you're doing. \n\n Enter admin commands:");inp&&eval(inp)}}]),angular.module("ContentItemsAppServices",["ng","eavNgSvcs","eavGlobalConfigurationProvider"]).factory("contentItemsSvc",["$http","entitiesSvc","eavManagementSvc","svcCreator",function(a,b,c,d){return function(c,e,f){var g={};return g.contentType=e,g.contentTypeId=f,g.appId=c,g=angular.extend(g,d.implementLiveList(function(){return a.get("eav/entities/GetAllOfTypeForAdmin",{params:{appId:g.appId,contentType:g.contentType}})})),g["delete"]=function(a){return b["delete"](g.contentType,a).then(g.liveListReload)},g.getColumns=function(){return a.get("eav/contenttype/getfields/",{params:{appid:g.appId,staticName:g.contentType}})},g}}]),angular.module("ContentTypeFieldServices",["ng","eavNgSvcs","eavGlobalConfigurationProvider"]).factory("contentTypeFieldSvc",["$http","eavGlobalConfigurationProvider","svcCreator",function(a,b,c){return function(b,d){var e={};return e.appId=b,e.contentType=d,e.typeListRetrieve=function(){return a.get("eav/contenttype/datatypes/",{params:{appid:e.appId}})},e=angular.extend(e,c.implementLiveList(function(){return a.get("eav/contenttype/getfields/",{params:{appid:e.appId,staticName:e.contentType.StaticName}})})),e.types=c.implementLiveList(e.typeListRetrieve),e.moveUp=function(b){return a.get("eav/contenttype/reorder",{params:{appid:e.appId,contentTypeId:e.contentType.Id,attributeId:b.Id,direction:"up"}}).then(e.liveListReload)},e.moveDown=function(b){return a.get("eav/contenttype/reorder",{params:{appid:e.appId,contentTypeId:e.contentType.Id,attributeId:b.Id,direction:"down"}}).then(e.liveListReload)},e["delete"]=function(b){return a["delete"]("eav/contenttype/delete",{params:{appid:e.appId,contentTypeId:e.contentType.Id,attributeId:b.Id}}).then(e.liveListReload)},e.addMany=function(b,c){return a.get("eav/contenttype/addfield/",{params:b[c]}).then(function(){b.length==++c?e.liveListReload():e.addMany(b,c)})},e.add=function(b){return a.get("eav/contenttype/addfield/",{params:b}).then(e.liveListReload)},e.newItemCount=0,e.newItem=function(){return{AppId:e.appId,ContentTypeId:e.contentType.Id,Id:0,Type:"String",StaticName:"",IsTitle:0===e.liveList().length,SortOrder:e.liveList().length+e.newItemCount++}},e["delete"]=function(b){if(b.IsTitle)throw"Can't delete Title";return a["delete"]("eav/contenttype/deletefield",{params:{appid:e.appId,contentTypeId:e.contentType.Id,attributeId:b.Id}}).then(e.liveListReload)},e.setTitle=function(b){return a.get("eav/contenttype/setTitle",{params:{appid:e.appId,contentTypeId:e.contentType.Id,attributeId:b.Id}}).then(e.liveListReload)},e}}]),angular.module("ContentTypeServices",["ng","eavNgSvcs","eavGlobalConfigurationProvider"]).factory("contentTypeSvc",["$http","eavGlobalConfigurationProvider","svcCreator",function(a,b,c){return function(d){var e={};return e.scope=b.contentType.defaultScope,e.appId=d,e.retrieveContentTypes=function(){return a.get("eav/contenttype/get/",{params:{appid:e.appId,scope:e.scope}})},e=angular.extend(e,c.implementLiveList(e.retrieveContentTypes)),e.getDetails=function(b){return a.get("eav/contenttype/get/",{params:{appid:e.appId,contentTypeId:b}})},e.newItem=function(){return{StaticName:"",Name:"",Description:"",Scope:b.contentType.defaultScope}},e.save=function(b){return a.post("eav/contenttype/save/",b,{params:{appid:e.appId}}).then(e.liveListReload)},e["delete"]=function(b){return a["delete"]("eav/contenttype/delete",{params:{appid:e.appId,staticName:b.StaticName}}).then(e.liveListReload)},e.setScope=function(a){e.scope=a,e.liveListReload()},e}}]),angular.module("EavAdminUi",["ng","ui.bootstrap","eavTemplates","PermissionsApp","ContentItemsApp","PipelineManagement","ContentTypeServices","ContentEditApp","HistoryApp"]).factory("eavAdminDialogs",["$modal","eavGlobalConfigurationProvider","eavManagementSvc","contentTypeSvc","$window",function(a,b,c,d,e){var f=!0,g={};return g.openContentItems=function(a,b,c,d){return g.openContentItemsX(g._createResolve({appId:a,contentType:b,contentTypeId:c}),{close:d})},g.openContentItemsX=function(a,b){return g._openModalWithCallback("content-items/content-items.html","ContentItemsList as vm","lg",a,b)},g.openContentTypeEdit=function(a,b){return g.openContentTypeEditX(g._createResolve({item:a}),{close:b})},g.openContentTypeEditX=function(a,b){return g._openModalWithCallback("content-types/content-types-edit.html","Edit as vm","sm",a,b)},g.openContentTypeFields=function(a,b){return g.openContentTypeFieldsX(g._createResolve({contentType:a}),{close:b})},g.openContentTypeFieldsX=function(a,b){return g._openModalWithCallback("content-types/content-types-fields.html","FieldList as vm","lg",a,b)},g.openItemNew=function(a,c){if(f)return g.openItemEditWithEntityIdX(g._createResolve({mode:"new",entityId:0,contentType:a}),{close:c});var d=b.itemForm.getNewItemUrl(a);return PromiseWindow.open(d).then(null,function(a){"closed"===a&&c()})},g.openItemEditWithEntityId=function(a,c){if(f)return g.openItemEditWithEntityIdX(g._createResolve({mode:"edit",entityId:a,contentType:""}),{close:c});var d=b.itemForm.getEditItemUrl(a,void 0,!0);return PromiseWindow.open(d).then(null,function(a){"closed"==a&&c()})},g.openItemEditWithEntityIdX=function(a,b){return g._openModalWithCallback("content-items/content-edit.html","EditContentItem as vm","lg",a,b)},g.openItemHistory=function(a,b){return g._openModalWithCallback("content-items/history.html","History as vm","lg",g._createResolve({entityId:a}),{close:b})},g.openMetadataNew=function(a,c,e,h,i){var j,k={};switch(c){case"entity":k.keyGuid=e,j=b.metadataOfEntity;break;case"attribute":k.keyNumber=e,j=b.metadataOfAttribute;break;default:throw"targetType unknown, only accepts entity or attribute"}return d(a).getDetails(h).then(function(a){if(f){var c=g._createResolve({mode:"new",entityId:0,contentType:h});return angular.extend(c,k),g.openItemEditWithEntityIdX(c,{close:i})}var d=a.data.AttributeSetId,e=b.itemForm.getNewItemUrl(d,j,k,!1);return PromiseWindow.open(e).then(null,function(a){"closed"==a&&i()})})},g.openPermissionsForGuid=function(a,b,c){return g.openPermissionsForGuidX(g._createResolve({appId:a,targetGuid:b}),{close:c})},g.openPermissionsForGuidX=function(a,b){return g._openModalWithCallback("permissions/permissions.html","PermissionList as vm","lg",a,b)},g.editPipeline=function(a,c,d){var f=b.pipelineDesigner.getUrl(a,c);e.open(f)},g.openContentExport=function(a,c){var d=b.adminUrls.exportContent(a);window.open(d)},g.openContentImport=function(a,c){var d=b.adminUrls.importContent(a);window.open(d)},g._attachCallbacks=function(a,b){return a.result.then(b.success||b.close,b.error||b.close,b.notify||b.close)},g._openModalWithCallback=function(b,c,d,e,f){var h=c.indexOf(" as "),i=h>0?c.substring(h+4):null;h>0&&(c=c.substring(0,h));var j=a.open({animation:!0,templateUrl:b,controller:c,controllerAs:i,size:d,resolve:e});return g._attachCallbacks(j,f)},g._createResolve=function(){var a={},b=arguments[0];for(var c in b)b.hasOwnProperty(c)&&(a[c]=g._create1Resolve(b[c]));return a},g._create1Resolve=function(a){return function(){return a}},g}]),angular.module("eavNgSvcs",["ng"]).config(["$locationProvider",function(a){a.html5Mode({enabled:!0,requireBase:!1})}]).factory("eavManagementDialog",["$location",function(a){var b={},c=a.search();return b.appId=c.AppId||c.appId||c.appid,b}]).factory("eavManagementSvc",["$http","eavManagementDialog",function(a,b){var c={};return c.getContentTypeDefinition=function(c){return alert("using the wrong method - should use the content-type controller. Will work for now, change code please"),a.get("eav/contenttype/get",{params:{appId:b.appId,contentTypeId:c}})},c.getAssignedItems=function(c,d,e){return a.get("eav/metadata/getassignedentities",{params:{appId:b.appId,assignmentObjectTypeId:c,keyGuid:d,contentType:e}})},c}]).factory("svcCreator",function(){var a={};return a.implementLiveList=function(a){var b={};return b.liveListCache=[],b.liveListCache.isLoaded=!1,b.liveList=function(){return 0===b.liveListCache.length&&b.liveListReload(),b.liveListCache},b._liveListUpdateWithResult=function(a){b.liveListCache.length=0;for(var c=0;c<a.data.length;c++)b.liveListCache.push(a.data[c]);return b.liveListCache.isLoaded=!0,a},b.liveListSourceRead=a,b.liveListReload=function(){return b.liveListSourceRead().then(b._liveListUpdateWithResult)},b.liveListReset=function(){b.liveListCache=[]},b},a}).factory("entitiesSvc",["$http","eavManagementDialog",function(a,b){var c={};return c.get=function(c,d){return d?a.get("eav/entities/getone",{params:{contentType:c,id:d,appId:b.appId}}):a.get("eav/entities/getentities",{params:{contentType:c,appId:b.appId}})},c["delete"]=function(c,d){return a["delete"]("eav/entities/delete",{params:{contentType:c,id:d,appId:b.appId}})},c}]),angular.module("HistoryServices",["ng","eavNgSvcs"]).factory("historySvc",["$http","svcCreator",function(a,b){return function(c,d){var e={appId:c,entityId:d};return e=angular.extend(e,b.implementLiveList(function(){return a.get("eav/entities/history",{params:{appId:e.appId,entityId:e.entityId}}).then(function(a){for(var b=a.data,c=0;c<b.length;c++)b[c].VirtualVersion=b.length-c;return a})})),e.getVersionDetails=function(b){return a.get("eav/entities/historydetails",{params:{appId:e.appId,entityId:e.entityId,changeId:b}})},e}}]),function(){angular.module("InitParametersFromUrl",[]).factory("appId",["$location",function(a){return a.search().appid}]).factory("entityId",["$location",function(b){return a("entityid")}]).factory("contentTypeName",["$location",function(b){return a("contenttypename")}]);var a=function(a){var b=location.href;a=a.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var c="[\\?&]"+a+"=([^&#]*)",d=new RegExp(c),e=d.exec(b);return null===e?null:e[1]}}(),angular.module("PermissionsServices",["ng","eavNgSvcs","eavGlobalConfigurationProvider"]).factory("permissionsSvc",["$http","eavGlobalConfigurationProvider","entitiesSvc","eavManagementSvc","svcCreator","contentTypeSvc",function(a,b,c,d,e,f){var g=b;return function(a,b){var h={PermissionTargetGuid:b,ctName:"PermissionConfiguration",ctId:0,EntityAssignment:g.metadataOfEntity,ctSvc:f(a)};return h=angular.extend(h,e.implementLiveList(function(){return d.getAssignedItems(h.EntityAssignment,h.PermissionTargetGuid,h.ctName).then(h.updateLiveAll)})),h.ctSvc.getDetails(h.ctName).then(function(a){h.ctId=a.data.AttributeSetId}),h["delete"]=function(a){return c["delete"](h.ctName,a).then(h.liveListReload)},h}}]),angular.module("PipelineService",["ContentTypeServices"]).factory("pipelineService",["$resource","$q","$filter","eavGlobalConfigurationProvider","$http","contentTypeSvc",function(a,b,c,d,e,f){"use strict";var g={};g.pipelineResource=a(d.api.baseUrl+"/EAV/PipelineDesigner/:action"),g.entitiesResource=a(d.api.baseUrl+"/EAV/Entities/:action"),g.dataPipelineAttributeSetId=0,g.appId=0,g.getDataSourceDefinitionProperty=function(a,b){return c("filter")(a.InstalledDataSources,function(a){return a.PartAssemblyAndType==b.PartAssemblyAndType})[0]};var h=function(a){a.DataSources.push({Name:d.pipelineDesigner.outDataSource.name,Description:d.pipelineDesigner.outDataSource.description,EntityGuid:"Out",PartAssemblyAndType:d.pipelineDesigner.outDataSource.className,VisualDesignerData:d.pipelineDesigner.outDataSource.visualDesignerData,ReadOnly:!0}),angular.forEach(a.DataSources,function(b){b.Definition=function(){return g.getDataSourceDefinitionProperty(a,b)},b.ReadOnly=b.ReadOnly||!a.Pipeline.AllowEdit})};return angular.extend(g,{getPipeline:function(a){var c=b.defer(),e=g.pipelineResource.get({action:"GetPipeline",id:a,appId:g.appId}),f=g.pipelineResource.query({action:"GetInstalledDataSources"});return b.all([e.$promise,f.$promise]).then(function(b){var e=JSON.parse(angular.toJson(b[0]));e.InstalledDataSources=JSON.parse(angular.toJson(b[1])),a||(e.Pipeline={AllowEdit:"True"}),e.InstalledDataSources.push({PartAssemblyAndType:d.pipelineDesigner.outDataSource.className,ClassName:d.pipelineDesigner.outDataSource.className,In:d.pipelineDesigner.outDataSource["in"],Out:null,allowNew:!1}),h(e),c.resolve(e)},function(a){c.reject(a)}),c.promise},postProcessDataSources:function(a){c("filter")(a.DataSources,function(a){return"Out"==a.EntityGuid})[0]||h(a)},getNewDataSource:function(a,b){return{Definition:function(){return g.getDataSourceDefinitionProperty(a,b)}}},savePipeline:function(a,c){if(!g.appId)return b.reject("appId must be set to save a Pipeline");var d=[];return angular.forEach(c,function(a){var b=angular.copy(a);delete b.ReadOnly,d.push(b)}),g.pipelineResource.save({action:"SavePipeline",appId:g.appId,Id:a.EntityId},{pipeline:a,dataSources:d}).$promise},clonePipeline:function(a){return g.pipelineResource.get({action:"ClonePipeline",appId:g.appId,Id:a}).$promise},getDataSourceConfigurationUrl:function(a){var e=c("typename")(a.PartAssemblyAndType,"classFullName"),f="|Config "+e,h=4,i=a.EntityGuid,j=!0,k=b.defer();return g.entitiesResource.query({action:"GetAssignedEntities",appId:g.appId,assignmentObjectTypeId:h,keyGuid:i,contentType:f},function(a){a.length?k.resolve(d.itemForm.getEditItemUrl(a[0].Id,null,j)):g.entitiesResource.get({action:"GetContentType",appId:g.appId,contentType:f},function(a){"n"==a[0]&&"u"==a[1]&&"l"==a[2]&&"l"==a[3]?k.reject("Content Type "+f+" not found."):k.resolve(d.itemForm.getNewItemUrl(a.AttributeSetId,h,{KeyGuid:i,ReturnUrl:null},j))},function(a){k.reject(a)})},function(a){k.reject(a)}),k.promise}}),angular.extend(g,{queryPipeline:function(a){return g.pipelineResource.get({action:"QueryPipeline",appId:g.appId,id:a}).$promise},setAppId:function(a){g.appId=a},initContentTypes:function(){return f(g.appId).getDetails("DataPipeline").then(function(a){g.dataPipelineAttributeSetId=a.data.AttributeSetId})},getPipelines:function(){return g.entitiesResource.query({action:"GetEntities",appId:g.appId,contentType:"DataPipeline"})},deletePipeline:function(a){return g.pipelineResource.get({action:"DeletePipeline",appId:g.appId,id:a}).$promise}}),g}]);
//# sourceMappingURL=tosic-eav-admin.min.js.map