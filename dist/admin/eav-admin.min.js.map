{"version":3,"sources":["templates.js","eav-admin.min.js"],"names":["angular","module","contentExportController","appId","contentType","contentExportService","eavAdminDialogs","eavConfig","languages","$modalInstance","$filter","$translate","vm","this","formValues","formFields","key","type","defaultValue","defaultLanguage","expressionProperties","templateOptions.label","templateOptions.options","options","name","instant","value","forEach","lang","langCode","push","templateOptions.disabled","RecordExport","exportContent","close","dismiss","$inject","controller","$http","args","url","getUrlPrefix","window","open","AppId","Language","DefaultLanguage","ContentType","ResourcesReferences","LanguageReferences","srvc","factory","config","formlyConfigProvider","formly","setType","template","wrapper","filter","str","length","substring","toLowerCase","toUpperCase","contentImportController","contentImportService","debugState","debug","templateOptions","required","viewStates","Waiting","Default","Evaluated","Imported","viewStateSelected","evaluationResult","importResult","evaluateContent","then","result","data","importContent","reset","back","post","ContentBase64","File","base64","ClearEntities","EditContentItemController","mode","entityId","TestMessage","history","openItemHistory","contentItemsListController","contentItemsSvc","toastr","$q","$modalStack","activate","svc","all","setRowData","getColumns","success","columnDefs","getColumnDefs","gridOptions","api","setColumnDefs","bodyWidth","gridPanel","eBodyContainer","clientWidth","viewportWidth","eBodyViewport","setModalWidth","width","modalDomEl","getTop","modalDialog","children","css","add","openItemNew","openEditDialog","params","openItemEditWithEntityId","Id","sortModel","filterModel","getSortModel","getFilterModel","liveListSourceRead","setSortModel","setFilterModel","eavAttributes","staticColumns","eavAttribute","IsTitle","colDef","headerName","StaticName","field","cellRenderer","cellRendererDefault","filterParams","cellRendererDefaultFilter","Type","allowMultiValue","Metadata","Entity","AllowMultiValue","e","cellRendererEntity","valueGetter","valueGetterEntityField","useTimePicker","DateTime","UseTimePicker","valueGetterDateTime","valueGetterBoolean","rawValue","map","item","Title","valueGetterStatusField","IsPublished","substr","replace","toString","encodedValue","htmlEncode","text","Array","isArray","join","tryToDelete","msg","title","id","RepositoryId","confirm","status","warning","allowHtml","timeOut","onShown","toast","el","onclick","event","target","srcElement","openDuplicate","items","ContentTypeName","DuplicateEntity","openEditItems","liveListReload","extend","enableSorting","enableFilter","rowHeight","colWidth","headerHeight","angularCompileRows","refresh","cellClass","onCellClicked","suppressSorting","suppressMenu","ContentItemsListController","maxDynamicColumns","edit","liveList","dynamicColumns","cols","c","HistoryController","historySvc","$modal","details","animation","templateUrl","controllerAs","resolve","changeId","ChangeId","dataSvc","HistoryDetailsController","alert","getVersionDetails","constant","createdBy","license","contentTypeListController","contentTypeSvc","Name","undefined","newItem","openContentTypeEdit","createGhost","sourceName","prompt","editFields","openContentTypeFields","editItems","openContentItems","addItem","liveEval","admin","inp","eval","changeScope","setScope","isGuid","txtToTest","patt","RegExp","test","permissions","openPermissionsForGuid","openExport","openContentExport","openImport","openContentImport","createOrEditMetadata","createItemDefinition","metadataType","EntityId","Key","KeyType","TargetType","metadataOfContentType","Prefill","Label","Description","contentTypeEditController","ChangeStaticName","NewStaticName","ok","save","contentTypeFieldEditController","types","allInputTypes","getInputTypesList","resetSubTypes","InputType","updateInputType","contentTypeFieldsAddController","nw","newList","addMany","contentTypeFieldListController","contentTypeFieldSvc","$scope","orderList","i","treeOptions","dropped","dragEnabled","reOrder","size","inputTypeTooltip","inputType","setTitle","translations","rename","newName","metadataOfAttribute","directive","restrict","transclude","link","scope","elem","attrs","icn","icon","addClass","element","attr","stopEvent","bind","stopPropagation","permissionListController","permissionsSvc","targetGuid","openMetadataNew","PermissionTargetGuid","ctName","$timeout","makeDataSource","dataSource","$last","$emit","input","format","globalParts","match","classFullName","getElementOffset","de","document","documentElement","box","getBoundingClientRect","top","pageYOffset","clientTop","left","pageXOffset","clientLeft","pipelineId","pipelineService","$location","ctrlS","toastrWithHttpErrorHandling","$log","saveShortcut","savePipeline","waitMsg","info","readOnly","dataSourcesCount","dataSourceIdPrefix","PipelineEntityId","setAppId","findDataSourceOfElement","guid","attributes","list","pipelineData","DataSources","found","EntityGuid","getPipeline","Pipeline","AllowEdit","clear","autoDismiss","initNewPipeline","reason","error","jsPlumb","ready","jsPlumbInstance","getInstance","Connector","curviness","HoverPaintStyle","lineWidth","strokeStyle","outlineWidth","outlineColor","PaintStyle","joinstyle","Container","targetId","fixedEndpoints","Definition","In","label","targetEndpoint","getOverlay","indexOf","deleteEndpoint","connectionsInitialized","repeatCount","endpointHandling","endpoint","getLabel","labelPrompt","canvas","hasClass","targetEndpointHavingSameLabel","promptMessage","endpointLabel","setLabel","endpoints","getEndpoints","getEndpointOverlays","isSource","location","cssClass","events","dblclick","labelOverlay","newLabel","sourceEndpoint","paintStyle","fillStyle","radius","maxConnections","anchor","faces","overlays","isTarget","dropOptions","hoverClass","activeClass","batch","draggable","grid","drag","dataSourceDrag","dataSourceDefinition","Out","addEndpoint","targetEndpointUnlimited","makeTarget","makeSource","isIn","message","selector","console","log","uuid","enabled","ReadOnly","endPoint","$on","initWirings","StreamWiring","repaint","streamWiring","wire","sourceElementId","From","fromUuid","targetElementId","To","toUuid","getEndpoint","getSelector","connect","uuids","from","to","templateForNew","pipelineDesigner","defaultPipeline","dataSources","addDataSource","partAssemblyAndType","visualDesignerData","entityGuid","initWiringsListener","autoSave","addDataSourceType","PartAssemblyAndType","Top","Left","newDataSource","VisualDesignerData","getNewDataSource","remove","index","elementId","selectEndpoints","splice","editName","trim","editDescription","newDescription","draggedWrapper","offset","$apply","Math","round","configureDataSource","dataSourceIsPersisted","editDataSourcePart","showEndpointOverlays","toggleEndpointOverlays","showOverlays","hideOverlays","editPipelineEntity","unbind","pipelineSaved","rebind","syncPipelineData","connectionInfos","getAllConnections","connection","sourceId","streamsOut","each","StreamsOut","successHandler","deferred","defer","reject","promise","search","postProcessDataSources","repaintEverything","toogleDebug","queryPipeline","query","CreateResolve","testParams","TestParameters","OpenModal","showEntityCountOnStreams","Streams","stream","Source","Target","SourceOut","TargetIn","streamFound","connections","getUuid","Count","clonePipeline","clone","getClonePipeline","pipelines","getPipelines","pipeline","deletePipeline","Guid","testParameters","design","editPipeline","split","timeUsed","QueryTimer","Milliseconds","ticksUsed","Ticks","Query","sources","Sources","streams","entitiesSvc","metadataSvc","svcCreator","implementLiveList","get","tryForce","appid","staticName","defaultScope","retrieveContentTypes","getDetails","contentTypeName","contentTypeStaticName","Scope","newScope","sourceStaticName","typeListRetrieve","_inputTypesList","addToList","dataType","description","getFields","fld","md","allMd","All","typeMd","inputMd","merged","merge","idArray","contentTypeId","newSortOrder","JSON","stringify","attributeId","count","newItemCount","ContentTypeId","SortOrder","$window","createSave","action","_event","_action","_isbound","detectCtrlSAndExcecute","keyCode","navigator","platform","metaKey","ctrlKey","preventDefault","addEventListener","removeEventListener","on","toggle","autoEnableAsNeeded","ctrlPressed","alreadySwitchedDebugState","body","classList","itemId","closeCallback","openContentTypeFieldsOfItems","getManyForEditing","Header","svcForThis","result2","targetType","metadata","metadataOfEntity","derivedUrl","dialog","varsToReplace","href","prop","hasOwnProperty","replaceOrAddOneParam","original","param","rule","newText","_attachCallbacks","callbacks","notify","resolveValues","foundAs","contAs","modalInstance","fns","arguments","_create1Resolve","$locationProvider","html5Mode","requireBase","service","iconPrefix","defaultIcon","checkImgRegEx","extensions","doc","docx","xls","xlsx","ppt","pptx","pdf","mp3","avi","mpg","mpeg","mov","mp4","zip","rar","txt","html","xml","xsl","vcf","getExtension","filename","lastIndexOf","getIconClass","isKnownType","isImage","VirtualVersion","$translateProvider","$translatePartialLoaderProvider","preferredLanguage","currentLanguage","useSanitizeValueStrategy","fallbackLanguage","useLoader","urlTemplate","i18nRoot","useLoaderCache","addPart","run","$rootScope","getParameterByName","$2sxc","urlParams","getParameterByNameDuplicate","searchRx","results","exec","hashRx","hash","matches","pathname","reverse","decodeURIComponent","latinMap","Á","Ă","Ắ","Ặ","Ằ","Ẳ","Ẵ","Ǎ","Â","Ấ","Ậ","Ầ","Ẩ","Ẫ","Ä","Ǟ","Ȧ","Ǡ","Ạ","Ȁ","À","Ả","Ȃ","Ā","Ą","Å","Ǻ","Ḁ","Ⱥ","Ã","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ḃ","Ḅ","Ɓ","Ḇ","Ƀ","Ƃ","Ć","Č","Ç","Ḉ","Ĉ","Ċ","Ƈ","Ȼ","Ď","Ḑ","Ḓ","Ḋ","Ḍ","Ɗ","Ḏ","ǲ","ǅ","Đ","Ƌ","Ǳ","Ǆ","É","Ĕ","Ě","Ȩ","Ḝ","Ê","Ế","Ệ","Ề","Ể","Ễ","Ḙ","Ë","Ė","Ẹ","Ȅ","È","Ẻ","Ȇ","Ē","Ḗ","Ḕ","Ę","Ɇ","Ẽ","Ḛ","Ꝫ","Ḟ","Ƒ","Ǵ","Ğ","Ǧ","Ģ","Ĝ","Ġ","Ɠ","Ḡ","Ǥ","Ḫ","Ȟ","Ḩ","Ĥ","Ⱨ","Ḧ","Ḣ","Ḥ","Ħ","Í","Ĭ","Ǐ","Î","Ï","Ḯ","İ","Ị","Ȉ","Ì","Ỉ","Ȋ","Ī","Į","Ɨ","Ĩ","Ḭ","Ꝺ","Ꝼ","Ᵹ","Ꞃ","Ꞅ","Ꞇ","Ꝭ","Ĵ","Ɉ","Ḱ","Ǩ","Ķ","Ⱪ","Ꝃ","Ḳ","Ƙ","Ḵ","Ꝁ","Ꝅ","Ĺ","Ƚ","Ľ","Ļ","Ḽ","Ḷ","Ḹ","Ⱡ","Ꝉ","Ḻ","Ŀ","Ɫ","ǈ","Ł","Ǉ","Ḿ","Ṁ","Ṃ","Ɱ","Ń","Ň","Ņ","Ṋ","Ṅ","Ṇ","Ǹ","Ɲ","Ṉ","Ƞ","ǋ","Ñ","Ǌ","Ó","Ŏ","Ǒ","Ô","Ố","Ộ","Ồ","Ổ","Ỗ","Öe","Ȫ","Ȯ","Ȱ","Ọ","Ő","Ȍ","Ò","Ỏ","Ơ","Ớ","Ợ","Ờ","Ở","Ỡ","Ȏ","Ꝋ","Ꝍ","Ō","Ṓ","Ṑ","Ɵ","Ǫ","Ǭ","Ø","Ǿ","Õ","Ṍ","Ṏ","Ȭ","Ƣ","Ꝏ","Ɛ","Ɔ","Ȣ","Ṕ","Ṗ","Ꝓ","Ƥ","Ꝕ","Ᵽ","Ꝑ","Ꝙ","Ꝗ","Ŕ","Ř","Ŗ","Ṙ","Ṛ","Ṝ","Ȑ","Ȓ","Ṟ","Ɍ","Ɽ","Ꜿ","Ǝ","Ś","Ṥ","Š","Ṧ","Ş","Ŝ","Ș","Ṡ","Ṣ","Ṩ","Ť","Ţ","Ṱ","Ț","Ⱦ","Ṫ","Ṭ","Ƭ","Ṯ","Ʈ","Ŧ","Ɐ","Ꞁ","Ɯ","Ʌ","Ꜩ","Ú","Ŭ","Ǔ","Û","Ṷ","Ü","Ǘ","Ǚ","Ǜ","Ǖ","Ṳ","Ụ","Ű","Ȕ","Ù","Ủ","Ư","Ứ","Ự","Ừ","Ử","Ữ","Ȗ","Ū","Ṻ","Ų","Ů","Ũ","Ṹ","Ṵ","Ꝟ","Ṿ","Ʋ","Ṽ","Ꝡ","Ẃ","Ŵ","Ẅ","Ẇ","Ẉ","Ẁ","Ⱳ","Ẍ","Ẋ","Ý","Ŷ","Ÿ","Ẏ","Ỵ","Ỳ","Ƴ","Ỷ","Ỿ","Ȳ","Ɏ","Ỹ","Ź","Ž","Ẑ","Ⱬ","Ż","Ẓ","Ȥ","Ẕ","Ƶ","Ĳ","Œ","ᴀ","ᴁ","ʙ","ᴃ","ᴄ","ᴅ","ᴇ","ꜰ","ɢ","ʛ","ʜ","ɪ","ʁ","ᴊ","ᴋ","ʟ","ᴌ","ᴍ","ɴ","ᴏ","ɶ","ᴐ","ᴕ","ᴘ","ʀ","ᴎ","ᴙ","ꜱ","ᴛ","ⱻ","ᴚ","ᴜ","ᴠ","ᴡ","ʏ","ᴢ","á","ă","ắ","ặ","ằ","ẳ","ẵ","ǎ","â","ấ","ậ","ầ","ẩ","ẫ","ä","ǟ","ȧ","ǡ","ạ","ȁ","à","ả","ȃ","ā","ą","ᶏ","ẚ","å","ǻ","ḁ","ⱥ","ã","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ḃ","ḅ","ɓ","ḇ","ᵬ","ᶀ","ƀ","ƃ","ɵ","ć","č","ç","ḉ","ĉ","ɕ","ċ","ƈ","ȼ","ď","ḑ","ḓ","ȡ","ḋ","ḍ","ɗ","ᶑ","ḏ","ᵭ","ᶁ","đ","ɖ","ƌ","ı","ȷ","ɟ","ʄ","ǳ","ǆ","é","ĕ","ě","ȩ","ḝ","ê","ế","ệ","ề","ể","ễ","ḙ","ë","ė","ẹ","ȅ","è","ẻ","ȇ","ē","ḗ","ḕ","ⱸ","ę","ᶒ","ɇ","ẽ","ḛ","ꝫ","ḟ","ƒ","ᵮ","ᶂ","ǵ","ğ","ǧ","ģ","ĝ","ġ","ɠ","ḡ","ᶃ","ǥ","ḫ","ȟ","ḩ","ĥ","ⱨ","ḧ","ḣ","ḥ","ɦ","ẖ","ħ","ƕ","í","ĭ","ǐ","î","ï","ḯ","ị","ȉ","ì","ỉ","ȋ","ī","į","ᶖ","ɨ","ĩ","ḭ","ꝺ","ꝼ","ᵹ","ꞃ","ꞅ","ꞇ","ꝭ","ǰ","ĵ","ʝ","ɉ","ḱ","ǩ","ķ","ⱪ","ꝃ","ḳ","ƙ","ḵ","ᶄ","ꝁ","ꝅ","ĺ","ƚ","ɬ","ľ","ļ","ḽ","ȴ","ḷ","ḹ","ⱡ","ꝉ","ḻ","ŀ","ɫ","ᶅ","ɭ","ł","ǉ","ſ","ẜ","ẛ","ẝ","ḿ","ṁ","ṃ","ɱ","ᵯ","ᶆ","ń","ň","ņ","ṋ","ȵ","ṅ","ṇ","ǹ","ɲ","ṉ","ƞ","ᵰ","ᶇ","ɳ","ñ","ǌ","ó","ŏ","ǒ","ô","ố","ộ","ồ","ổ","ỗ","ö","ȫ","ȯ","ȱ","ọ","ő","ȍ","ò","ỏ","ơ","ớ","ợ","ờ","ở","ỡ","ȏ","ꝋ","ꝍ","ⱺ","ō","ṓ","ṑ","ǫ","ǭ","ø","ǿ","õ","ṍ","ṏ","ȭ","ƣ","ꝏ","ɛ","ᶓ","ɔ","ᶗ","ȣ","ṕ","ṗ","ꝓ","ƥ","ᵱ","ᶈ","ꝕ","ᵽ","ꝑ","ꝙ","ʠ","ɋ","ꝗ","ŕ","ř","ŗ","ṙ","ṛ","ṝ","ȑ","ɾ","ᵳ","ȓ","ṟ","ɼ","ᵲ","ᶉ","ɍ","ɽ","ↄ","ꜿ","ɘ","ɿ","ß","ś","ṥ","š","ṧ","ş","ŝ","ș","ṡ","ṣ","ṩ","ʂ","ᵴ","ᶊ","ȿ","ɡ","ᴑ","ᴓ","ᴝ","ť","ţ","ṱ","ț","ȶ","ẗ","ⱦ","ṫ","ṭ","ƭ","ṯ","ᵵ","ƫ","ʈ","ŧ","ᵺ","ɐ","ᴂ","ǝ","ᵷ","ɥ","ʮ","ʯ","ᴉ","ʞ","ꞁ","ɯ","ɰ","ᴔ","ɹ","ɻ","ɺ","ⱹ","ʇ","ʌ","ʍ","ʎ","ꜩ","ú","ŭ","ǔ","û","ṷ","ü","ǘ","ǚ","ǜ","ǖ","ṳ","ụ","ű","ȕ","ù","ủ","ư","ứ","ự","ừ","ử","ữ","ȗ","ū","ṻ","ų","ᶙ","ů","ũ","ṹ","ṵ","ᵫ","ꝸ","ⱴ","ꝟ","ṿ","ʋ","ᶌ","ⱱ","ṽ","ꝡ","ẃ","ŵ","ẅ","ẇ","ẉ","ẁ","ⱳ","ẘ","ẍ","ẋ","ᶍ","ý","ŷ","ÿ","ẏ","ỵ","ỳ","ƴ","ỷ","ỿ","ȳ","ẙ","ɏ","ỹ","ź","ž","ẑ","ʑ","ⱬ","ż","ẓ","ȥ","ẕ","ᵶ","ᶎ","ʐ","ƶ","ɀ","ﬀ","ﬃ","ﬄ","ﬁ","ﬂ","ĳ","œ","ﬆ","ₐ","ₑ","ᵢ","ⱼ","ₒ","ᵣ","ᵤ","ᵥ","ₓ","a","getMetadata","assignedToId","keyGuid","assignmentObjectTypeId","keyType","eavConf","permissionTargetGuid","ctId","EntityAssignment","ctSvc","updateLiveAll","$resource","pipelineResource","entitiesResource","getDataSourceDefinitionProperty","model","definition","InstalledDataSources","d","outDataSource","className","pipelineEntityId","getInstalledDataSources","$promise","parse","toJson","ClassName","allowNew","dataSourceBase","dataSourcesPrepared","dataSourceClone","copy","dataSourceFullName","newAppId","creator","getLiveList","disableToastr","t","liveListCache","isLoaded","_liveListUpdateWithResult","isOpened","liveListReset","toastrConfig","containerId","maxOpened","newestOnTop","positionClass","preventDuplicates","preventOpenDuplicates","originalError","messageOrHttpError","optionsOverride","Message","ExceptionMessage","saveWithToaster","saving","keyInfo","keyOk","keyError","durInfo","durOk","durError","$templateCache","put"],"mappings":"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","file":"eav-admin.min.js","sourcesContent":[null,"(function () {\r\n    angular.module(\"ContentExportApp\", [\r\n        \"EavAdminUi\",\r\n        \"EavDirectives\",\r\n        \"EavConfiguration\",\r\n        \"EavServices\",\r\n        \"ContentHelperFilters\",\r\n        \"ContentFormlyTypes\"\r\n    ]);\r\n}());\n(function () {\r\n\r\n    contentExportController.$inject = [\"appId\", \"contentType\", \"contentExportService\", \"eavAdminDialogs\", \"eavConfig\", \"languages\", \"$modalInstance\", \"$filter\", \"$translate\"];\r\n    angular.module(\"ContentExportApp\")\r\n        .controller(\"ContentExport\", contentExportController);\r\n\r\n    function contentExportController(appId, contentType, contentExportService, eavAdminDialogs, eavConfig, languages, $modalInstance, $filter, $translate) {\r\n\r\n        var vm = this;\r\n\r\n        vm.formValues = {};\r\n\r\n        vm.formFields = [{\r\n            // Content type\r\n            key: \"AppId\",\r\n            type: \"hidden\",\r\n            defaultValue: appId\r\n        }, {\r\n            // Default / fallback language\r\n            key: \"DefaultLanguage\",\r\n            type: \"hidden\",\r\n            defaultValue: $filter(\"isoLangCode\")(languages.defaultLanguage)\r\n        }, {\r\n            // Content type\r\n            key: \"ContentType\",\r\n            type: \"hidden\",\r\n            defaultValue: contentType\r\n        }, {\r\n            key: \"Language\",\r\n            type: \"select\",\r\n            expressionProperties: {\r\n                \"templateOptions.label\": \"'Content.Export.Fields.Language.Label' | translate\",\r\n                \"templateOptions.options\": function () {\r\n                    var options = [{\r\n                        \"name\": $translate.instant(\"Content.Export.Fields.Language.Options.All\"),\r\n                        \"value\": \"\"\r\n                    }];\r\n                    angular.forEach(languages.languages, function (lang) {\r\n                        var langCode = $filter(\"isoLangCode\")(lang.key);\r\n                        options.push({ \"name\": langCode, \"value\": langCode });\r\n                    });\r\n                    return options;\r\n                }\r\n            },\r\n            defaultValue: \"\"\r\n        }, {\r\n            key: \"RecordExport\",\r\n            type: \"radio\",\r\n            expressionProperties: {\r\n                \"templateOptions.label\": \"'Content.Export.Fields.RecordExport.Label' | translate\",\r\n                \"templateOptions.options\": function () {\r\n                    return [{\r\n                        \"name\": $translate.instant(\"Content.Export.Fields.RecordExport.Options.Blank\"),\r\n                        \"value\": \"Blank\"\r\n                    }, {\r\n                        \"name\": $translate.instant(\"Content.Export.Fields.RecordExport.Options.All\"),\r\n                        \"value\": \"All\"\r\n                    }];\r\n                }\r\n            },\r\n            defaultValue: \"All\"\r\n        }, {\r\n            // Language references\r\n            key: \"LanguageReferences\",\r\n            type: \"radio\",\r\n            expressionProperties: {\r\n                \"templateOptions.label\": \"'Content.Export.Fields.LanguageReferences.Label' | translate\",\r\n                \"templateOptions.disabled\": function () {\r\n                    return vm.formValues.RecordExport == \"Blank\";\r\n                },\r\n                \"templateOptions.options\": function () {\r\n                    return [{\r\n                        \"name\": $translate.instant(\"Content.Export.Fields.LanguageReferences.Options.Link\"),\r\n                        \"value\": \"Link\"\r\n                    }, {\r\n                        \"name\": $translate.instant(\"Content.Export.Fields.LanguageReferences.Options.Resolve\"),\r\n                        \"value\": \"Resolve\"\r\n                    }];\r\n                }\r\n            },\r\n            defaultValue: \"Link\"\r\n        }, {\r\n            // File / page references\r\n            key: \"ResourcesReferences\",\r\n            type: \"radio\",\r\n            expressionProperties: {\r\n                \"templateOptions.label\": \"'Content.Export.Fields.ResourcesReferences.Label' | translate\",\r\n                \"templateOptions.disabled\": function () {\r\n                    return vm.formValues.RecordExport == \"Blank\";\r\n                },\r\n                \"templateOptions.options\": function () {\r\n                    return [{\r\n                        \"name\": $translate.instant(\"Content.Export.Fields.ResourcesReferences.Options.Link\"),\r\n                        \"value\": \"Link\"\r\n                    }, {\r\n                        \"name\": $translate.instant(\"Content.Export.Fields.ResourcesReferences.Options.Resolve\"),\r\n                        \"value\": \"Resolve\"\r\n                    }];\r\n                }\r\n            },\r\n            defaultValue: \"Link\"\r\n        }];\r\n\r\n\r\n        vm.exportContent = function exportContent() {\r\n            contentExportService.exportContent(vm.formValues);\r\n        };\r\n\r\n        vm.close = function close() {\r\n            $modalInstance.dismiss(\"cancel\");\r\n        };\r\n    }\r\n}());\n(function () {\r\n\r\n    contentExportService.$inject = [\"$http\", \"eavConfig\"];\r\n    angular.module(\"ContentExportApp\")\r\n         .factory(\"contentExportService\", contentExportService);\r\n\r\n\r\n    function contentExportService($http, eavConfig) {\r\n        var srvc = {\r\n            exportContent: exportContent,\r\n        };\r\n        return srvc;\r\n\r\n        function exportContent(args) {\r\n            var url = eavConfig.getUrlPrefix(\"api\") + \"/eav/ContentExport/ExportContent\";\r\n            window.open(url + \"?appId=\" + args.AppId + \"&language=\" + args.Language + \"&defaultLanguage=\" + args.DefaultLanguage + \"&contentType=\" + args.ContentType + \"&recordExport=\" + args.RecordExport + \"&resourcesReferences=\" + args.ResourcesReferences + \"&languageReferences=\" + args.LanguageReferences, \"_self\", \"\");\r\n        }\r\n    }\r\n}());\n(function () {\r\n    angular.module(\"ContentFormlyTypes\", [\r\n        \"naif.base64\",\r\n        \"formly\",\r\n        \"formlyBootstrap\",\r\n        \"ui.bootstrap\"\r\n    ]);\r\n}());\n(function () {\r\n\r\n    angular.module(\"ContentFormlyTypes\")\r\n\r\n        .config([\"formlyConfigProvider\", function (formlyConfigProvider) {\r\n            var formly = formlyConfigProvider;\r\n\r\n            formly.setType({\r\n                name: \"file\",\r\n                template: \"<span class='btn btn-default btn-square btn-file'><span class='glyphicon glyphicon-open'></span><input type='file' ng-model='model[options.key]' base-sixty-four-input /></span> <span ng-if='model[options.key]'>{{model[options.key].filename}}</span>\",\r\n                wrapper: [\"bootstrapLabel\", \"bootstrapHasError\"]\r\n            });\r\n\r\n            formly.setType({\r\n                name: \"hidden\",\r\n                template: \"<input style='display:none' ng-model='model[options.key]' />\",\r\n                wrapper: [\"bootstrapLabel\", \"bootstrapHasError\"]\r\n            });\r\n    }]);\r\n}());\n(function () {\r\n    angular.module(\"ContentHelperFilters\", []);\r\n\r\n\r\n    angular.module(\"ContentHelperFilters\").filter(\"isoLangCode\", function () {\r\n        return function (str) {\r\n            if (str.length != 5)\r\n                return str;\r\n            return str.substring(0, 2).toLowerCase() + \"-\" + str.substring(3, 5).toUpperCase();\r\n        };\r\n    });\r\n}());\n(function () {\r\n    angular.module(\"ContentImportApp\", [\r\n        \"EavAdminUi\",\r\n        \"EavDirectives\",\r\n        \"EavConfiguration\",\r\n        \"EavServices\",\r\n        \"ContentHelperFilters\",\r\n        \"ContentFormlyTypes\"\r\n    ]);\r\n}());\n(function () {\r\n\r\n    contentImportController.$inject = [\"appId\", \"contentType\", \"contentImportService\", \"eavAdminDialogs\", \"eavConfig\", \"languages\", \"debugState\", \"$modalInstance\", \"$filter\", \"$translate\"];\r\n    angular.module(\"ContentImportApp\")\r\n        .controller(\"ContentImport\", contentImportController);\r\n\r\n    function contentImportController(appId, contentType, contentImportService, eavAdminDialogs, eavConfig, languages, debugState, $modalInstance, $filter, $translate) {\r\n\r\n        var vm = this;\r\n        vm.debug = debugState;\r\n\r\n        vm.formValues = {};\r\n\r\n        vm.formFields = [{\r\n            // Content type\r\n            key: \"AppId\",\r\n            type: \"hidden\",\r\n            defaultValue: appId\r\n        }, {\r\n            // Default / fallback language\r\n            key: \"DefaultLanguage\",\r\n            type: \"hidden\",\r\n            defaultValue: $filter(\"isoLangCode\")(languages.defaultLanguage)\r\n        }, {\r\n            // Content type\r\n            key: \"ContentType\",\r\n            type: \"hidden\",\r\n            defaultValue: contentType\r\n        }, {\r\n            // File\r\n            key: \"File\",\r\n            type: \"file\",\r\n            templateOptions: {\r\n                required: true\r\n            },\r\n            expressionProperties: {\r\n                \"templateOptions.label\": \"'Content.Import.Fields.File.Label' | translate\"\r\n            }\r\n        }, {\r\n            // File / page references\r\n            key: \"ResourcesReferences\",\r\n            type: \"radio\",\r\n            expressionProperties: {\r\n                \"templateOptions.label\": \"'Content.Import.Fields.ResourcesReferences.Label' | translate\",\r\n                \"templateOptions.options\": function () {\r\n                    return [{\r\n                        \"name\": $translate.instant(\"Content.Import.Fields.ResourcesReferences.Options.Keep\"),\r\n                        \"value\": \"Keep\"\r\n                    }, {\r\n                        \"name\": $translate.instant(\"Content.Import.Fields.ResourcesReferences.Options.Resolve\"),\r\n                        \"value\": \"Resolve\"\r\n                    }];\r\n                }\r\n            },\r\n            defaultValue: \"Keep\"\r\n        }, {\r\n            // Clear entities\r\n            key: \"ClearEntities\",\r\n            type: \"radio\",\r\n            expressionProperties: {\r\n                \"templateOptions.label\": \"'Content.Import.Fields.ClearEntities.Label' | translate\",\r\n                \"templateOptions.options\": function () {\r\n                    return [{\r\n                        \"name\": $translate.instant(\"Content.Import.Fields.ClearEntities.Options.None\"),\r\n                        \"value\": \"None\"\r\n                    }, {\r\n                        \"name\": $translate.instant(\"Content.Import.Fields.ClearEntities.Options.All\"),\r\n                        \"value\": \"All\"\r\n                    }];\r\n                }\r\n            },\r\n            defaultValue: \"None\"\r\n        }];\r\n\r\n        vm.viewStates = {\r\n            \"Waiting\":   0,\r\n            \"Default\":   1,\r\n            \"Evaluated\": 2,\r\n            \"Imported\":  3\r\n        };\r\n\r\n        vm.viewStateSelected = vm.viewStates.Default;\r\n\r\n\r\n        vm.evaluationResult = { };\r\n\r\n        vm.importResult = { };\r\n\r\n\r\n        vm.evaluateContent = function evaluateContent() {\r\n            vm.viewStateSelected = vm.viewStates.Waiting;\r\n            return contentImportService.evaluateContent(vm.formValues).then(function (result) {\r\n                vm.evaluationResult = result.data;\r\n                vm.viewStateSelected = vm.viewStates.Evaluated;\r\n            });\r\n        };\r\n\r\n        vm.importContent = function importContent() {\r\n            vm.viewStateSelected = vm.viewStates.Waiting;\r\n            return contentImportService.importContent(vm.formValues).then(function (result) {\r\n                vm.importResult = result.data;\r\n                vm.viewStateSelected = vm.viewStates.Imported;\r\n            });\r\n        };\r\n\r\n        vm.reset = function reset() {\r\n            vm.formValues = { };\r\n            vm.evaluationResult = { };\r\n            vm.importResult = { };\r\n        };\r\n\r\n        vm.back = function back() {\r\n            vm.viewStateSelected = vm.viewStates.Default;\r\n        };\r\n\r\n        vm.close = function close() {\r\n            vm.viewStateSelected = vm.viewStates.Default;\r\n            $modalInstance.dismiss(\"cancel\");\r\n        };\r\n    }\r\n}());\n(function () {\r\n\r\n    contentImportService.$inject = [\"$http\"];\r\n    angular.module(\"ContentImportApp\")\r\n         .factory(\"contentImportService\", contentImportService);\r\n\r\n\r\n    function contentImportService($http) {\r\n        var srvc = {\r\n            evaluateContent: evaluateContent,\r\n            importContent: importContent\r\n        };\r\n        return srvc;\r\n\r\n        function evaluateContent(args) {\r\n            return $http.post(\"eav/ContentImport/EvaluateContent\", { AppId: args.AppId, DefaultLanguage: args.DefaultLanguage, ContentType: args.ContentType, ContentBase64: args.File.base64, ResourcesReferences: args.ResourcesReferences, ClearEntities: args.ClearEntities });\r\n        }\r\n\r\n        function importContent(args) {\r\n            return $http.post(\"eav/ContentImport/ImportContent\", { AppId: args.AppId, DefaultLanguage: args.DefaultLanguage, ContentType: args.ContentType, ContentBase64: args.File.base64, ResourcesReferences: args.ResourcesReferences, ClearEntities: args.ClearEntities });\r\n        }\r\n    }\r\n}());\n(function () { \r\n\r\n    EditContentItemController.$inject = [\"mode\", \"entityId\", \"contentType\", \"eavAdminDialogs\", \"$modalInstance\"];\r\n    angular.module(\"ContentEditApp\", [\r\n        \"EavServices\",\r\n        \"EavAdminUi\"\r\n    ])\r\n        .controller(\"EditContentItem\", EditContentItemController)\r\n        ;\r\n\r\n    function EditContentItemController(mode, entityId, contentType, eavAdminDialogs, $modalInstance) { //}, contentTypeId, eavAdminDialogs) {\r\n        var vm = this;\r\n        vm.mode = mode;\r\n        vm.entityId = entityId;\r\n        vm.contentType = contentType;\r\n        vm.TestMessage = \"Test message the controller is binding correctly...\";\r\n\r\n        vm.history = function history() {\r\n            return eavAdminDialogs.openItemHistory(vm.entityId);\r\n        };\r\n\r\n        vm.close = function () { $modalInstance.dismiss(\"cancel\"); };\r\n    }\r\n\r\n} ());\n(function () {\r\n\t'use strict';\r\n\r\n\tcontentItemsListController.$inject = [\"contentItemsSvc\", \"eavConfig\", \"appId\", \"contentType\", \"eavAdminDialogs\", \"toastr\", \"debugState\", \"$modalInstance\", \"$q\", \"$modalStack\", \"$translate\"];\r\n\tangular.module(\"ContentItemsAppAgnostic\", [\r\n        \"EavConfiguration\",\r\n        \"EavAdminUi\",\r\n        \"EavServices\",\r\n\t\t// \"agGrid\" // needs this, but can't hardwire the dependency as it would cause problems with lazy-loading\r\n\t])\r\n        .controller(\"ContentItemsList\", contentItemsListController)\r\n\t;\r\n\r\n\tfunction contentItemsListController(contentItemsSvc, eavConfig, appId, contentType, eavAdminDialogs, toastr, debugState, $modalInstance, $q, $modalStack, $translate) {\r\n\t\t/* jshint validthis:true */\r\n\t\tvar vm = angular.extend(this, {\r\n\t\t\tdebug: debugState,\r\n\t\t\tgridOptions: {\r\n\t\t\t\tenableSorting: true,\r\n\t\t\t\tenableFilter: true,\r\n\t\t\t\trowHeight: 39,\r\n\t\t\t\tcolWidth: 155,\r\n\t\t\t\theaderHeight: 38,\r\n\t\t\t\tangularCompileRows: true\r\n\t\t\t},\r\n\t\t\tadd: add,\r\n\t\t\trefresh: setRowData,\r\n\t\t\ttryToDelete: tryToDelete,\r\n\t\t\topenDuplicate: openDuplicate,\r\n\t\t\tclose: close\r\n\t\t});\r\n\t\tvar svc;\r\n\r\n\t\tvar staticColumns = [\r\n\t\t\t{\r\n\t\t\t\theaderName: \"ID\",\r\n\t\t\t\tfield: \"Id\",\r\n\t\t\t\twidth: 50,\r\n\t\t\t\ttemplate: '<span tooltip-append-to-body=\"true\" tooltip=\"Id: {{data.Id}}\\nRepoId: {{data.RepositoryId}}\\nGuid: {{data.Guid}}\" ng-bind=\"data.Id\"></span>',\r\n\t\t\t\tcellClass: \"clickable\",\r\n\t\t\t\tfilter: 'number',\r\n\t\t\t\tonCellClicked: openEditDialog\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theaderName: \"Status\",\r\n\t\t\t\tfield: \"IsPublished\",\r\n\t\t\t\twidth: 75,\r\n\t\t\t\tsuppressSorting: true,\r\n\t\t\t\ttemplate: '<span class=\"glyphicon\" ng-class=\"{\\'glyphicon-eye-open\\': data.IsPublished, \\'glyphicon-eye-close\\' : !data.IsPublished}\" tooltip-append-to-body=\"true\" tooltip=\"{{ \\'Content.Publish.\\' + (data.IsPublished ? \\'PnV\\': data.Published ? \\'DoP\\' : \\'D\\') | translate }}\"></span> <span icon=\"{{ data.Draft ? \\'link\\' : data.Published ? \\'link\\' : \\'\\' }}\" tooltip-append-to-body=\"true\" tooltip=\"{{ (data.Draft ? \\'Content.Publish.HD\\' :\\'\\') | translate:\\'{ id: data.Draft.RepositoryId}\\' }}\\n{{ (data.Published ? \\'Content.Publish.HP\\' :\\'\\') | translate }} #{{ data.Published.RepositoryId }}\"></span> <span ng-if=\"data.Metadata\" tooltip-append-to-body=\"true\" tooltip=\"Metadata for type {{ data.Metadata.TargetType}}, id {{ data.Metadata.KeyNumber }}{{ data.Metadata.KeyString }}{{ data.Metadata.KeyGuid }}\" icon=\"tag\"></span>',\r\n\t\t\t\tvalueGetter: valueGetterStatusField\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theaderName: \"Title\",\r\n\t\t\t\tfield: \"Title\",\r\n\t\t\t\twidth: 216,\r\n\t\t\t\tcellClass: \"clickable\",\r\n\t\t\t\ttemplate: '<span tooltip-append-to-body=\"true\" tooltip=\"{{data.Title}}\" ng-bind=\"data.Title + \\' \\' + ((!data.Title ? \\'Content.Manage.NoTitle\\':\\'\\') | translate)\"></span>',\r\n\t\t\t\tfilter: 'text',\r\n\t\t\t\tonCellClicked: openEditDialog\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theaderName: \"\",\r\n\t\t\t\twidth: 70,\r\n\t\t\t\tsuppressSorting: true,\r\n\t\t\t\tsuppressMenu: true,\r\n\t\t\t\ttemplate: '<button type=\"button\" class=\"btn btn-xs btn-square\" ng-click=\"vm.openDuplicate(data)\" tooltip-append-to-body=\"true\" tooltip=\"{{ \\'General.Buttons.Copy\\' | translate }}\">'\r\n                    + '<i icon=\"duplicate\"></i>'\r\n                    + '</button> '\r\n                    + '<button type=\"button\" class=\"btn btn-xs btn-square\" ng-click=\"vm.tryToDelete(data, false)\" tooltip-append-to-body=\"true\" tooltip=\"{{ \\'General.Buttons.Delete\\' | translate }}\">'\r\n                    + '<i icon=\"remove\"></i> '\r\n                    + '</button>'\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\tsvc = contentItemsSvc(appId, contentType);\r\n\r\n\t\t\t// set RowData an Column Definitions\r\n\t\t\t$q.all([setRowData(), svc.getColumns()])\r\n\t\t\t\t.then(function (success) {\r\n\t\t\t\t\tvar columnDefs = getColumnDefs(success[1].data);\r\n\t\t\t\t\tvm.gridOptions.api.setColumnDefs(columnDefs);\r\n\r\n\t\t\t\t\t// resize outer modal (if needed)\r\n\t\t\t\t\tvar bodyWidth = vm.gridOptions.api.gridPanel.eBodyContainer.clientWidth;\r\n\t\t\t\t\tvar viewportWidth = vm.gridOptions.api.gridPanel.eBodyViewport.clientWidth;\r\n\t\t\t\t\tif (bodyWidth < viewportWidth)\r\n\t\t\t\t\t\tsetModalWidth(bodyWidth);\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t// set width of outer angular-ui-modal. This is a quick and dirty solution because there's no official way to do this.\r\n\t\t// $modalStack.getTop() might get a wrong modal Instance\r\n\t\t// setting the width with inline css in a controller should be avoided\r\n\t\tfunction setModalWidth(width) {\r\n\t\t\tvar modalDomEl = $modalStack.getTop().value.modalDomEl;\r\n\t\t\tvar modalDialog = modalDomEl.children();\r\n\t\t\tmodalDialog.css(\"width\", (width + 47) + \"px\");\t// add some pixels for padding and scrollbars\r\n\t\t}\r\n\r\n\t\tfunction add() {\r\n\t\t\teavAdminDialogs.openItemNew(contentType, setRowData);\r\n\t\t}\r\n\r\n\t\tfunction openEditDialog(params) {\r\n\t\t\teavAdminDialogs.openItemEditWithEntityId(params.data.Id, setRowData);\r\n\t\t}\r\n\r\n\t\t// Get/Update Grid Row-Data\r\n\t\tfunction setRowData() {\r\n\t\t\tvar sortModel = {};\r\n\t\t\tvar filterModel = {};\r\n\t\t\tif (vm.gridOptions.api) {\r\n\t\t\t\tsortModel = vm.gridOptions.api.getSortModel();\r\n\t\t\t\tfilterModel = vm.gridOptions.api.getFilterModel();\r\n\t\t\t}\r\n\r\n\t\t\treturn svc.liveListSourceRead().then(function (success) {\r\n\t\t\t\tvm.gridOptions.api.setRowData(success.data);\r\n\t\t\t\tvm.gridOptions.api.setSortModel(sortModel);\r\n\t\t\t\tvm.gridOptions.api.setFilterModel(filterModel);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// get Grid Column-Definitions from an Array of EAV-Attributes\r\n\t\tfunction getColumnDefs(eavAttributes) {\r\n\t\t\tvar columnDefs = staticColumns;\r\n\r\n\t\t\tangular.forEach(eavAttributes, function (eavAttribute) {\r\n\t\t\t\tif (eavAttribute.IsTitle) {\r\n\t\t\t\t\tstaticColumns[2].eavAttribute = eavAttribute;\r\n\t\t\t\t\treturn;\t// don't add Title-Field twice\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar colDef = {\r\n\t\t\t\t\teavAttribute: eavAttribute,\r\n\t\t\t\t\theaderName: eavAttribute.StaticName,\r\n\t\t\t\t\tfield: eavAttribute.StaticName,\r\n\t\t\t\t\tcellRenderer: cellRendererDefault,\r\n\t\t\t\t\tfilterParams: { cellRenderer: cellRendererDefaultFilter }\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t\tswitch (eavAttribute.Type) {\r\n\t\t\t\t\tcase \"Entity\":\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tcolDef.allowMultiValue = eavAttribute.Metadata.Entity.AllowMultiValue;\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tcolDef.allowMultiValue = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcolDef.cellRenderer = cellRendererEntity;\r\n\t\t\t\t\t\tcolDef.valueGetter = valueGetterEntityField;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"DateTime\":\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tcolDef.useTimePicker = eavAttribute.Metadata.DateTime.UseTimePicker;\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tcolDef.useTimePicker = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcolDef.valueGetter = valueGetterDateTime;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Boolean\":\r\n\t\t\t\t\t\tcolDef.valueGetter = valueGetterBoolean;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Number\":\r\n\t\t\t\t\t\tcolDef.filter = 'number';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolumnDefs.push(colDef);\r\n\t\t\t});\r\n\r\n\t\t\treturn columnDefs;\r\n\t\t}\r\n\r\n\t\t//#region Column Value-Getter and Cell Renderer\r\n\t\tfunction valueGetterEntityField(params) {\r\n\t\t\tvar rawValue = params.data[params.colDef.field];\r\n\t\t\tif (rawValue.length === 0)\r\n\t\t\t\treturn null;\r\n\r\n\t\t\treturn rawValue.map(function (item) {\r\n\t\t\t\treturn item.Title;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction valueGetterStatusField(params) {\r\n\t\t\treturn [\r\n\t\t\t\tparams.data.IsPublished ? \"is published\" : \"is not published\",\r\n\t\t\t\tparams.data.Metadata ? \"is metadata\" : \"is not metadata\"\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\tfunction valueGetterDateTime(params) {\r\n\t\t\tvar rawValue = params.data[params.colDef.field];\r\n\t\t\tif (!rawValue)\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t// remove 'Z' and replace 'T'\r\n\t\t\treturn params.colDef.useTimePicker ? rawValue.substr(0, 19).replace('T', ' ') : rawValue.substr(0, 10);\r\n\t\t}\r\n\r\n\t\tfunction valueGetterBoolean(params) {\r\n\t\t\tvar rawValue = params.data[params.colDef.field];\r\n\t\t\tif (typeof rawValue != \"boolean\")\r\n\t\t\t\treturn null;\r\n\r\n\t\t\treturn rawValue.toString();\r\n\t\t}\r\n\r\n\t\tfunction cellRendererDefault(params) {\r\n\t\t\tif (typeof (params.value) != \"string\" || params.value === null)\r\n\t\t\t\treturn params.value;\r\n\r\n\t\t\tvar encodedValue = htmlEncode(params.value);\r\n\t\t\treturn '<span ng-non-bindable><span title=\"' + encodedValue + '\">' + encodedValue + '</span></span>';\r\n\t\t}\r\n\r\n\t\tfunction cellRendererDefaultFilter(params) {\r\n\t\t\treturn cellRendererDefault(params) || \"(empty)\";\r\n\t\t}\r\n\r\n\t\t// htmlencode strings (source: http://stackoverflow.com/a/7124052)\r\n\t\tfunction htmlEncode(text) {\r\n\t\t\treturn text.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n\t\t}\r\n\r\n\t\tfunction cellRendererEntity(params) {\r\n\t\t\tif (!Array.isArray(params.value))\r\n\t\t\t\treturn null;\r\n\r\n\t\t\tvar encodedValue = htmlEncode(params.value.join(\", \"));\r\n\t\t\tvar result = '<span title=\"' + encodedValue + '\">';\r\n\t\t\tif (params.colDef.allowMultiValue)\r\n\t\t\t    result += '<span class=\"badge badge-primary\">' + params.value.length + '</span> ';\r\n\t\t\tresult += encodedValue + '</span>';\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\t// #endregion\r\n\r\n\t\tfunction tryToDelete(item) {\r\n            // todo: i18n\r\n\t\t    var msg = $translate.instant(\"General.Questions.DeleteEntity\", { title: item.Title, id: item.RepositoryId });\r\n\t\t\tif (confirm(msg))\r\n\t\t\t    svc.delete(item.RepositoryId, false)\r\n                    .then(function (result) {\r\n\t\t\t            if (result.status >= 200 && result.status < 300) {\r\n\t\t\t                setRowData();\r\n\t\t\t                return;\r\n\t\t\t            }\r\n\r\n                        // if delete failed, ask to force-delete in a toaster\r\n\t\t\t            var msg = \"<div>\" + $translate.instant(\"General.Questions.ForceDelete\", { title: item.Title, id: item.RepositoryId}) + \"<br/>\"\r\n\t\t\t                + \"<button type='button' id='del' class='btn btn-default' ><i class= 'icon-ok'></i>\" + $translate.instant(\"General.Buttons.ForceDelete\") + \"</button>\"\r\n\t\t\t                + \"</div>\";\r\n\r\n\t\t\t            toastr.warning(msg, {\r\n\t\t\t                    allowHtml: true,\r\n\t\t\t                    timeOut: 5000,\r\n\t\t\t                    onShown: function (toast) {\r\n                                    // this checks for the click on the button in the toaster\r\n\t\t\t                        toast.el[0].onclick = function(event) {\r\n\t\t\t                            var target = event.target || event.srcElement;\r\n\t\t\t                            if (target.id === \"del\")\r\n\t\t\t                                svc.delete(item.RepositoryId, true)\r\n\t\t\t                                    .then(setRowData);\r\n\t\t\t                        };\r\n\t\t\t                    }\r\n\r\n\r\n\t\t\t                });\r\n\t\t\t        });\r\n\t\t}\r\n\r\n\t\tfunction openDuplicate(item) {\r\n\t\t\tvar items = [\r\n\t\t        {\r\n\t\t        \tContentTypeName: contentType,\r\n\t\t        \tDuplicateEntity: item.Id\r\n\t\t        }\r\n\t\t\t];\r\n\t\t\teavAdminDialogs.openEditItems(items, svc.liveListReload);\r\n\t\t}\r\n\r\n\t\tfunction close() {\r\n\t\t\t$modalInstance.dismiss(\"cancel\");\r\n\t\t}\r\n\t}\r\n\r\n}());\n(function () { // TN: this is a helper construct, research iife or read https://github.com/johnpapa/angularjs-styleguide#iife\r\n\r\n    ContentItemsListController.$inject = [\"contentItemsSvc\", \"eavConfig\", \"appId\", \"contentType\", \"eavAdminDialogs\", \"debugState\", \"$modalInstance\"];\r\n    angular.module(\"ContentItemsApp\", [\r\n        \"EavConfiguration\",\r\n        \"EavAdminUi\",\r\n        \"EavServices\"\r\n    ])\r\n        .controller(\"ContentItemsList\", ContentItemsListController)\r\n    ;\r\n\r\n    function ContentItemsListController(contentItemsSvc, eavConfig, appId, contentType, eavAdminDialogs, debugState, $modalInstance) {\r\n        var vm = this;\r\n        vm.debug = debugState;\r\n\r\n        var svc = contentItemsSvc(appId, contentType); \r\n\r\n        // config\r\n        vm.maxDynamicColumns = 10;\r\n\r\n        vm.add = function add() {\r\n            eavAdminDialogs.openItemNew(contentType, svc.liveListReload);\r\n        };\r\n\r\n        vm.edit = function(item) {\r\n            eavAdminDialogs.openItemEditWithEntityId(item.Id, svc.liveListReload);\r\n        };\r\n\r\n        vm.refresh = svc.liveListReload;\r\n\r\n        vm.items = svc.liveList();\r\n\r\n        vm.dynamicColumns = [];\r\n        svc.getColumns().then(function (result) {\r\n            var cols = result.data;\r\n            for (var c = 0; c < cols.length && c < vm.maxDynamicColumns; c++) {\r\n                if (!cols[c].IsTitle)\r\n                    vm.dynamicColumns.push(cols[c]);\r\n            }\r\n        });\r\n\r\n        vm.tryToDelete = function tryToDelete(item) {\r\n            if (confirm(\"Delete '\" + \"title-unknown-yet\" + \"' (\" + item.RepositoryId + \") ?\"))\r\n                svc.delete(item.RepositoryId);\r\n        };\r\n\r\n        vm.openDuplicate = function openDuplicate(item) {\r\n            var items = [\r\n                {\r\n                    ContentTypeName: contentType,\r\n                    DuplicateEntity: item.Id\r\n                }\r\n            ];\r\n            eavAdminDialogs.openEditItems(items, svc.liveListReload);\r\n\r\n        };\r\n\r\n        vm.close = function () { $modalInstance.dismiss(\"cancel\"); };\r\n\r\n    }\r\n\r\n} ());\n(function () { // TN: this is a helper construct, research iife or read https://github.com/johnpapa/angularjs-styleguide#iife\r\n\r\n    HistoryController.$inject = [\"appId\", \"entityId\", \"historySvc\", \"$modalInstance\", \"$modal\"];\r\n    HistoryDetailsController.$inject = [\"changeId\", \"dataSvc\", \"$modalInstance\"];\r\n    angular.module(\"HistoryApp\", [\r\n        \"EavServices\",\r\n        \"EavConfiguration\",\r\n        \"eavTemplates\",\r\n    ])\r\n        .controller(\"History\", HistoryController)\r\n        .controller(\"HistoryDetails\", HistoryDetailsController)\r\n        ;\r\n\r\n    function HistoryController(appId, entityId, historySvc, $modalInstance, $modal) {\r\n        var vm = this;\r\n        var svc = historySvc(appId, entityId);\r\n        vm.entityId = entityId;\r\n        vm.items = svc.liveList();\r\n\r\n        vm.close = function () { $modalInstance.dismiss(\"cancel\"); };\r\n\r\n        vm.details = function(item) {\r\n            $modal.open({\r\n                animation: true,\r\n                templateUrl: \"content-items/history-details.html\",\r\n                controller: \"HistoryDetails\",\r\n                controllerAs: \"vm\",\r\n                resolve: {\r\n                    changeId: function() { return item.ChangeId; },\r\n                    dataSvc: function() { return svc; }\r\n                }\r\n            });\r\n        };\r\n    }\r\n\r\n    function HistoryDetailsController(changeId, dataSvc, $modalInstance) {\r\n        var vm = this;\r\n        alert(\"not implemented yet\");\r\n        var svc = dataSvc;\r\n\r\n        svc.getVersionDetails(changeId).then(function(result) {\r\n            alert(result.data);\r\n            vm.items = result.data;\r\n        });\r\n        // vm.items = svc.liveList();\r\n\r\n        vm.close = function () { $modalInstance.dismiss(\"cancel\"); };\r\n    }\r\n} ());\n// This is the main declaration for the app ContentTypesApp\r\n(function () {\r\n\r\n    angular.module(\"ContentTypesApp\", [\r\n        \"EavServices\",\r\n        \"EavAdminUi\",\r\n        \"EavDirectives\"\r\n        ])\r\n        .constant(\"license\", {\r\n            createdBy: \"2sic internet solutions\",\r\n            license: \"MIT\"\r\n            })             \r\n    ;  \r\n}()); \n(function() {\r\n\r\n    contentTypeListController.$inject = [\"contentTypeSvc\", \"eavAdminDialogs\", \"appId\", \"debugState\", \"$translate\", \"eavConfig\"];\r\n    angular.module(\"ContentTypesApp\")\r\n        .controller(\"List\", contentTypeListController);\r\n\r\n\r\n    /// Manage the list of content-types\r\n    function contentTypeListController(contentTypeSvc, eavAdminDialogs, appId, debugState, $translate, eavConfig) {\r\n        var vm = this;\r\n        var svc = contentTypeSvc(appId);\r\n\r\n        vm.debug = debugState;\r\n\r\n        vm.items = svc.liveList();\r\n        vm.refresh = svc.liveListReload;\r\n\r\n        vm.tryToDelete = function tryToDelete(item) {\r\n            $translate(\"General.Questions.Delete\", { target: \"'\" + item.Name + \"' (\" + item.Id + \")\"}).then(function(msg) {\r\n                if(confirm(msg))\r\n                    svc.delete(item);\r\n            });\r\n        };\r\n\r\n        vm.edit = function edit(item) {\r\n            if (item === undefined)\r\n                item = svc.newItem();\r\n\r\n            eavAdminDialogs.openContentTypeEdit(item, vm.refresh);\r\n        };\r\n\r\n        vm.createGhost = function createGhost() {\r\n            var sourceName = window.prompt(\"to create a ghost content-type enter source static name / id - this is a very advanced operation - read more about it on 2sxc.org/help?tag=ghost\");\r\n            if (!sourceName)\r\n                return;\r\n            svc.createGhost(sourceName);\r\n        };\r\n\r\n        vm.editFields = function editFields(item) {\r\n            eavAdminDialogs.openContentTypeFields(item, vm.refresh);\r\n        };\r\n\r\n        vm.editItems = function editItems(item) {\r\n            eavAdminDialogs.openContentItems(svc.appId, item.StaticName, item.Id, vm.refresh);\r\n        };\r\n\r\n        vm.addItem = function(contentType) {\r\n            eavAdminDialogs.openItemNew(contentType, vm.refresh);\r\n        };\r\n\r\n\r\n        vm.liveEval = function admin() {\r\n            $translate(\"General.Questions.SystemInput\").then(function (msg) {\r\n                var inp = prompt(msg);\r\n                if(inp)\r\n                    eval(inp); // jshint ignore:line\r\n            });\r\n        };\r\n\r\n        // this is to change the scope of the items being shown\r\n        vm.changeScope = function admin() {\r\n            $translate(\"ContentTypes.Buttons.ChangeScopeQuestion\").then(function (msg) {\r\n                var inp = prompt(msg);\r\n                if (inp)\r\n                    svc.setScope(inp);\r\n            });\r\n        };\r\n\r\n        vm.isGuid = function isGuid(txtToTest) {\r\n            var patt = new RegExp(/[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}/i);\r\n            return patt.test(txtToTest); // note: can't use the txtToTest.match because it causes infinite digest cycles\r\n        };\r\n\r\n        vm.permissions = function permissions(item) {\r\n            return eavAdminDialogs.openPermissionsForGuid(svc.appId, item.StaticName, vm.refresh);\r\n        };\r\n\r\n        vm.openExport = function openExport(item) {\r\n            return eavAdminDialogs.openContentExport(svc.appId, item.StaticName, vm.refresh);\r\n        };\r\n\r\n        vm.openImport = function openImport(item) {\r\n            return eavAdminDialogs.openContentImport(svc.appId, item.StaticName, vm.refresh);\r\n        };\r\n\r\n\r\n        //#region metadata for this type - new 2016-09-07\r\n\r\n        // Edit / Add metadata to a specific fields\r\n        vm.createOrEditMetadata = function createOrEditMetadata(item) {\r\n            // assemble an array of items for editing\r\n            var items = [vm.createItemDefinition(item, \"ContentType\")];\r\n            eavAdminDialogs.openEditItems(items, svc.liveListReload);\r\n        };\r\n\r\n        vm.createItemDefinition = function createItemDefinition(item, metadataType) {\r\n            var title = \"ContentType Metadata\"; // todo: i18n\r\n            return item.Metadata  // check if it already has metadata\r\n                ? { EntityId: item.Metadata.Id, Title: title }  // if defined, return the entity-number to edit\r\n                : {\r\n                    ContentTypeName: metadataType,        // otherwise the content type for new-assegnment\r\n                    Metadata: {\r\n                        Key: item.Id,\r\n                        KeyType: \"number\",\r\n                        TargetType: eavConfig.metadataOfContentType\r\n                    },\r\n                    Title: title,\r\n                    Prefill: { Label: item.Name, Description: item.Description }\r\n                };\r\n        };\r\n\r\n\r\n        //#endregion\r\n\r\n    }\r\n\r\n\r\n}());\n(function() {\r\n\r\n    contentTypeEditController.$inject = [\"appId\", \"item\", \"contentTypeSvc\", \"debugState\", \"$translate\", \"$modalInstance\"];\r\n    angular.module(\"ContentTypesApp\")\r\n        .controller(\"Edit\", contentTypeEditController);\r\n\r\n    /// Edit or add a content-type\r\n    /// Note that the svc can also be null if you don't already have it, the system will then create its own\r\n    function contentTypeEditController(appId, item, contentTypeSvc, debugState, $translate, $modalInstance) {\r\n        var vm = this;\r\n        var svc = contentTypeSvc(appId);\r\n\r\n        vm.debug = debugState;\r\n\r\n        vm.item = item;\r\n        vm.item.ChangeStaticName = false;\r\n        vm.item.NewStaticName = vm.item.StaticName; // in case you really, really want to change it\r\n\r\n        vm.ok = function () {\r\n            svc.save(item).then(function() {\r\n                $modalInstance.close(vm.item);              \r\n            });\r\n        };\r\n\r\n        vm.close = function () {\r\n            $modalInstance.dismiss(\"cancel\");\r\n        };\r\n    }\r\n\r\n}());\n(function () {\r\n    /*jshint laxbreak:true */\r\n    contentTypeFieldEditController.$inject = [\"appId\", \"svc\", \"item\", \"$filter\", \"$modalInstance\"];\r\n    angular.module(\"ContentTypesApp\")\r\n        .controller(\"FieldEdit\", contentTypeFieldEditController)\r\n    ;\r\n\r\n    /// This is the main controller for adding a field\r\n    /// Add is a standalone dialog, showing 10 lines for new field names / types\r\n    function contentTypeFieldEditController(appId, svc, item, $filter, $modalInstance) {\r\n        var vm = this;\r\n\r\n        vm.items = [item];\r\n\r\n        vm.types = svc.types.liveList();\r\n\r\n        vm.allInputTypes = svc.getInputTypesList();\r\n\r\n        vm.resetSubTypes = function resetSubTypes(item) {\r\n            item.InputType = item.Type.toLowerCase() + \"-default\";\r\n        };\r\n\r\n        vm.ok = function () {\r\n            svc.updateInputType(vm.items[0]);\r\n            $modalInstance.close();\r\n        };\r\n\r\n        vm.close = function() { $modalInstance.dismiss(\"cancel\"); };\r\n    }\r\n}());\n(function () {\r\n    /*jshint laxbreak:true */\r\n    contentTypeFieldsAddController.$inject = [\"appId\", \"svc\", \"$filter\", \"$modalInstance\"];\r\n    angular.module(\"ContentTypesApp\")\r\n        .controller(\"FieldsAdd\", contentTypeFieldsAddController)\r\n    ;\r\n\r\n    /// This is the main controller for adding a field\r\n    /// Add is a standalone dialog, showing 10 lines for new field names / types\r\n    function contentTypeFieldsAddController(appId, svc, $filter, $modalInstance) {\r\n        var vm = this;\r\n\r\n        // prepare empty array of up to 10 new items to be added\r\n        var nw = svc.newItem;\r\n        vm.items = [nw(), nw(), nw(), nw(), nw(), nw(), nw(), nw(), nw(), nw()];\r\n\r\n        vm.item = svc.newItem();\r\n        vm.types = svc.types.liveList();\r\n\r\n        vm.allInputTypes = svc.getInputTypesList();\r\n        //svc.getInputTypes().then(function (result) {\r\n        //    function addToList(value, key) {\r\n        //        var item = {\r\n        //            dataType: value.Type.substring(0, value.Type.indexOf(\"-\")),\r\n        //            inputType: value.Type, \r\n        //            label: value.Label,\r\n        //            description: value.Description\r\n        //        };\r\n        //        vm.allInputTypes.push(item);\r\n        //    }\r\n\r\n        //    angular.forEach(result.data, addToList);\r\n\r\n        //    vm.allInputTypes = $filter(\"orderBy\")(vm.allInputTypes, [\"dataType\", \"inputType\"]);\r\n        //});\r\n\r\n        vm.resetSubTypes = function resetSubTypes(item) {\r\n            item.InputType = item.Type.toLowerCase() + \"-default\";\r\n        };\r\n\r\n        vm.ok = function () {\r\n            var items = vm.items;\r\n            var newList = [];\r\n            for (var c = 0; c < items.length; c++)\r\n                if (items[c].StaticName)\r\n                    newList.push(items[c]);\r\n            svc.addMany(newList, 0);\r\n            $modalInstance.close();\r\n        };\r\n\r\n        vm.close = function() { $modalInstance.dismiss(\"cancel\"); };\r\n    }\r\n}());\n/*jshint laxbreak:true */\r\n(function () {\r\n    contentTypeFieldListController.$inject = [\"appId\", \"contentTypeFieldSvc\", \"contentType\", \"$modalInstance\", \"$modal\", \"eavAdminDialogs\", \"$filter\", \"$translate\", \"eavConfig\", \"$scope\"];\r\n    angular.module(\"ContentTypesApp\")\r\n        .controller(\"FieldList\", contentTypeFieldListController)\r\n    ;\r\n\r\n    /// The controller to manage the fields-list\r\n    function contentTypeFieldListController(appId, contentTypeFieldSvc, contentType, $modalInstance, $modal, eavAdminDialogs, $filter, $translate, eavConfig, $scope) {\r\n        var vm = this;\r\n        var svc = contentTypeFieldSvc(appId, contentType);\r\n\r\n        // to close this dialog\r\n        vm.close = function () {\r\n            $modalInstance.dismiss(\"cancel\");\r\n        };\r\n\r\n        vm.items = svc.liveList();\r\n\r\n        vm.orderList = function () {\r\n            var orderList = [];\r\n            vm.items.map(function (e,i) {\r\n                orderList.push(e.Id);\r\n            });\r\n            return orderList;\r\n        };\r\n\r\n        vm.treeOptions = {\r\n            dropped: function () {\r\n                vm.dragEnabled = false; // Disable drag while updating (causes strange effects like duplicate items)\r\n                svc.reOrder(vm.orderList()).then(function () {\r\n                    vm.dragEnabled = true;\r\n                });\r\n            }\r\n        };\r\n\r\n        vm.dragEnabled = true;\r\n\r\n        // Open an add-dialog, and add them if the dialog is closed\r\n        vm.add = function add() {\r\n            $modal.open({\r\n                animation: true,\r\n                templateUrl: \"content-types/content-types-fields-add.html\",\r\n                controller: \"FieldsAdd\",\r\n                controllerAs: \"vm\",\r\n                size: \"lg\",\r\n                resolve: {\r\n                    svc: function() { return svc; }\r\n                }\r\n            });\r\n        };\r\n\r\n        vm.edit = function edit(item) {\r\n            $modal.open({\r\n                animation: true,\r\n                templateUrl: \"content-types/content-types-field-edit.html\",\r\n                controller: \"FieldEdit\",\r\n                controllerAs: \"vm\",\r\n                size: \"lg\",\r\n                resolve: {\r\n                    svc: function() { return svc; },\r\n                    item: function() { return item; }\r\n                }\r\n            });\r\n\r\n        };\r\n\r\n        vm.inputTypeTooltip = function(inputType) {\r\n            if (inputType !== \"unknown\")\r\n                return inputType;\r\n\r\n            return \"unknown means it's using an old definition for input-types - edit it to use the new definition\";\r\n        };\r\n\r\n        // Actions like moveUp, Down, Delete, Title\r\n        //vm.moveUp = svc.moveUp;\r\n        //vm.moveDown = svc.moveDown;\r\n        vm.setTitle = svc.setTitle;\r\n\r\n        vm.tryToDelete = function tryToDelete(item) {\r\n            if (item.IsTitle) \r\n                return $translate([\"General.Messages.CantDelete\", \"General.Terms.Title\"], {target:\"{0}\"}).then(function (translations) {\r\n                    alert(translations[\"General.Messages.CantDelete\"].replace(\"{0}\", translations[\"General.Terms.Title\"]));\r\n                });\r\n\r\n            return $translate(\"General.Questions.Delete\", { target: \"'\" + item.StaticName + \"' (\" + item.Id + \")\" }).then(function(msg) {\r\n                if (confirm(msg))\r\n                    svc.delete(item);\r\n            });\r\n        };\r\n\r\n        vm.rename = function rename(item) {\r\n            $translate(\"General.Questions.Rename\", { target: \"'\" + item.StaticName + \"' (\" + item.Id + \")\" }).then(function(msg) {\r\n                var newName = prompt(msg);\r\n                if (newName)\r\n                    svc.rename(item, newName);\r\n            });\r\n        };\r\n\r\n        // Edit / Add metadata to a specific fields\r\n        vm.createOrEditMetadata = function createOrEditMetadata(item, metadataType) {\r\n            // assemble an array of 2 items for editing\r\n            var items = [vm.createItemDefinition(item, \"All\"),\r\n                vm.createItemDefinition(item, metadataType),\r\n                vm.createItemDefinition(item, item.InputType)\r\n            ];\r\n            eavAdminDialogs.openEditItems(items, svc.liveListReload);\r\n        };\r\n\r\n        vm.createItemDefinition = function createItemDefinition(item, metadataType) {\r\n            var title = metadataType === \"All\" ? $translate.instant(\"DataType.All.Title\") : metadataType; \r\n            return item.Metadata[metadataType] !== undefined\r\n                ? { EntityId: item.Metadata[metadataType].Id, Title: title }  // if defined, return the entity-number to edit\r\n                : {\r\n                    ContentTypeName: \"@\" + metadataType,        // otherwise the content type for new-assegnment\r\n                    Metadata: {\r\n                        Key: item.Id,\r\n                        KeyType: \"number\",\r\n                        TargetType: eavConfig.metadataOfAttribute\r\n                    },\r\n                    Title: title,\r\n                    Prefill: { Name: item.StaticName }\r\n                };      \r\n        };\r\n    }\r\n\r\n}());\n\r\n(function () {\r\n    /* jshint laxbreak:true*/\r\n\r\nangular.module(\"EavDirectives\", [])\r\n    .directive(\"icon\", function() {\r\n        return {\r\n            restrict: \"A\",\r\n            replace: false,\r\n            transclude: false,\r\n            link: function postLink(scope, elem, attrs) {\r\n                var icn = attrs.icon;\r\n                elem.addClass(\"glyphicon glyphicon-\" + icn);\r\n            }\r\n        };\r\n    })\r\n    .directive('stopEvent', function() {\r\n        return {\r\n            restrict: 'A',\r\n            link: function(scope, element, attr) {\r\n                if (attr && attr.stopEvent)\r\n                    element.bind(attr.stopEvent, function(e) {\r\n                        e.stopPropagation();\r\n                    });\r\n            }\r\n        };\r\n    })\r\n    .directive('showDebugAvailability', function() {\r\n        return {\r\n            restrict: 'E',\r\n            template: \"<span class=\\\"low-priority\\\" tooltip=\\\"{{ 'AdvancedMode.Info.Available' | translate }}\\\">\"\r\n                + \"&pi;\" // \"<i icon=\\\"sunglasses\\\"></i>\"\r\n                + \"</span><br/>\"\r\n        };\r\n    })\r\n\r\n    ;\r\n\r\n\r\n})();\n(function () { \r\n\r\n    permissionListController.$inject = [\"permissionsSvc\", \"eavAdminDialogs\", \"eavConfig\", \"appId\", \"targetGuid\", \"$modalInstance\"];\r\n    angular.module(\"PermissionsApp\", [\r\n        \"EavServices\",\r\n        \"EavConfiguration\",\r\n        \"EavAdminUi\"])\r\n        .controller(\"PermissionList\", permissionListController)\r\n        ;\r\n\r\n    function permissionListController(permissionsSvc, eavAdminDialogs, eavConfig, appId, targetGuid, $modalInstance /* $location */) {\r\n        var vm = this;\r\n        var svc = permissionsSvc(appId, targetGuid);\r\n\r\n        vm.edit = function edit(item) {\r\n            eavAdminDialogs.openItemEditWithEntityId(item.Id, svc.liveListReload);\r\n        };\r\n\r\n        vm.add = function add() {\r\n            eavAdminDialogs.openMetadataNew(appId, \"entity\", svc.PermissionTargetGuid, svc.ctName, svc.liveListReload);\r\n        };\r\n\r\n        vm.items = svc.liveList();\r\n        vm.refresh = svc.liveListReload;\r\n        \r\n        vm.tryToDelete = function tryToDelete(item) {\r\n            if (confirm(\"Delete '\" + item.Title + \"' (\" + item.Id + \") ?\"))\r\n                svc.delete(item.Id);\r\n        };\r\n\r\n        vm.close = function () {\r\n            $modalInstance.dismiss(\"cancel\");\r\n        };\r\n    }\r\n\r\n} ());\nangular.module(\"PipelineDesigner\", [\r\n        \"PipelineDesigner.filters\",\r\n        \"ngResource\",\r\n        \"EavConfiguration\",\r\n        \"EavServices\",\r\n        \"eavTemplates\",\r\n        \"eavNgSvcs\",\r\n        \"EavAdminUi\",\r\n        \"eavEditEntity\"\r\n    ])\r\n\r\n// datasource directive makes an element a DataSource with jsPlumb\r\n    .directive(\"datasource\", [\"$timeout\", function($timeout) {\r\n        return {\r\n            restrict: \"A\",\r\n            link: function(scope, element) {\r\n                // make this a DataSource when the DOM is ready\r\n                $timeout(function() {\r\n                    scope.makeDataSource(scope.dataSource, element);\r\n                });\r\n                if (scope.$last === true) {\r\n                    $timeout(function() {\r\n                        scope.$emit(\"ngRepeatFinished\");\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }]);\r\n\r\n// Filters for \"ClassName, AssemblyName\"\r\nangular.module(\"PipelineDesigner.filters\", []).filter(\"typename\", function () {\r\n\treturn function (input, format) {\r\n\t\tvar globalParts = input.match(/[^,\\s]+/g);\r\n\r\n\t\tswitch (format) {\r\n\t\t\tcase \"classFullName\":\r\n\t\t\t\tif (globalParts)\r\n\t\t\t\t    return globalParts[0];\r\n\t\t\t    break;\r\n\t\t\tcase \"className\":\r\n\t\t\t\tif (globalParts) {\r\n\t\t\t\t\tvar classFullName = globalParts[0].match(/[^\\.]+/g);\r\n\t\t\t\t\treturn classFullName[classFullName.length - 1];\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn input;\r\n\t};\r\n});\n// AngularJS Controller for the >>>> Pipeline Designer\r\n\r\n(function () {\r\n    /*jshint laxbreak:true */\r\n\r\n    // helper method because we don't have jQuery any more to find the offset\r\n    function getElementOffset(element) {\r\n        var de = document.documentElement;\r\n        var box = element.getBoundingClientRect();\r\n        var top = box.top + window.pageYOffset - de.clientTop;\r\n        var left = box.left + window.pageXOffset - de.clientLeft;\r\n        return { top: top, left: left };\r\n    }\r\n\r\n    angular.module(\"PipelineDesigner\")\r\n        .controller(\"PipelineDesignerController\",\r\n            [\"appId\", \"pipelineId\", \"$scope\", \"pipelineService\", \"$location\", \"debugState\", \"$timeout\", \"ctrlS\", \"$filter\", \"toastrWithHttpErrorHandling\", \"eavAdminDialogs\", \"$log\", \"eavConfig\", \"$q\", function (appId, pipelineId, $scope, pipelineService, $location, debugState, $timeout, ctrlS, $filter, toastrWithHttpErrorHandling, eavAdminDialogs, $log, eavConfig, $q) {\r\n                \"use strict\";\r\n                var vm = this;\r\n                // Init\r\n                vm.debug = debugState;\r\n                var toastr = toastrWithHttpErrorHandling;\r\n                var waitMsg = toastr.info(\"This shouldn't take long\", \"Please wait...\");\r\n\r\n                function activate() {\r\n                    // add ctrl+s to save\r\n                    vm.saveShortcut = ctrlS(function() { vm.savePipeline(); });\r\n                }\r\n                activate();\r\n\r\n\r\n                $scope.readOnly = true;\r\n                $scope.dataSourcesCount = 0;\r\n                $scope.dataSourceIdPrefix = \"dataSource_\";\r\n                $scope.debug = false;\r\n\r\n                // Load Pipeline Data\r\n                $scope.PipelineEntityId = pipelineId;\r\n\r\n                pipelineService.setAppId(appId);\r\n\r\n                // this will retrieve the dataSource info-object for a DOM element\r\n                $scope.findDataSourceOfElement = function fdsog(element) {\r\n                    var guid = element.attributes.guid.value;\r\n                    var list = $scope.pipelineData.DataSources;\r\n                    var found = $filter(\"filter\")(list, { EntityGuid: guid })[0];\r\n                    return found;\r\n                };\r\n\r\n                // Get Data from PipelineService (Web API)\r\n                pipelineService.getPipeline($scope.PipelineEntityId)\r\n                    .then(function(success) {\r\n                        $scope.pipelineData = success;\r\n\r\n                        // If a new (empty) Pipeline is made, init new Pipeline\r\n                        if (!$scope.PipelineEntityId || $scope.pipelineData.DataSources.length === 1) {\r\n                            $scope.readOnly = false;\r\n                            initNewPipeline();\r\n                        } else {\r\n                            // if read only, show message\r\n                            $scope.readOnly = !success.Pipeline.AllowEdit;\r\n                            toastr.clear(waitMsg);\r\n                            toastr.info($scope.readOnly ? \"This pipeline is read only\" : \"You can now design the Pipeline. \\nNote that there are still a few UI bugs.\\nVisit 2sxc.org/help for more.\",\r\n                                \"Ready\", { autoDismiss: true });\r\n                        }\r\n                    }, function(reason) {\r\n                        toastr.error(reason, \"Loading Pipeline failed\");\r\n                    });\r\n\r\n\r\n                // init new jsPlumb Instance\r\n                jsPlumb.ready(function () {\r\n\r\n                    $scope.jsPlumbInstance = jsPlumb.getInstance({\r\n                        Connector: [\"Bezier\", { curviness: 70 }],\r\n                        HoverPaintStyle: {\r\n                            lineWidth: 4,\r\n                            strokeStyle: \"#216477\",\r\n                            outlineWidth: 2,\r\n                            outlineColor: \"white\"\r\n                        },\r\n                        PaintStyle: {\r\n                            lineWidth: 4,\r\n                            strokeStyle: \"#61B7CF\",\r\n                            joinstyle: \"round\",\r\n                            outlineColor: \"white\",\r\n                            outlineWidth: 2\r\n                        },\r\n                        Container: \"pipelineContainer\"\r\n                    });\r\n\r\n\r\n                    // If connection on Out-DataSource was removed, remove custom Endpoint\r\n                    $scope.jsPlumbInstance.bind(\"connectionDetached\", function(info) {\r\n                        if (info.targetId === $scope.dataSourceIdPrefix + \"Out\") {\r\n                            var element = angular.element(info.target);\r\n                            var fixedEndpoints = $scope.findDataSourceOfElement(element) /* element.scope() */.dataSource.Definition().In;\r\n                            var label = info.targetEndpoint.getOverlay(\"endpointLabel\").label;\r\n                            if (fixedEndpoints.indexOf(label) === -1) {\r\n                                $timeout(function() {\r\n                                    $scope.jsPlumbInstance.deleteEndpoint(info.targetEndpoint);\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    // If a new connection is created, ask for a name of the In-Stream\r\n                    $scope.jsPlumbInstance.bind(\"connection\", function(info) {\r\n                        if (!$scope.connectionsInitialized) return;\r\n\r\n                        // Repeat until a valid Stream-Name is provided by the user\r\n                        var repeatCount = 0;\r\n                        var endpointHandling = function(endpoint) {\r\n                            var label = endpoint.getOverlay(\"endpointLabel\").getLabel();\r\n                            if (label === labelPrompt && info.targetEndpoint.id !== endpoint.id && angular.element(endpoint.canvas).hasClass(\"targetEndpoint\"))\r\n                                targetEndpointHavingSameLabel = endpoint;\r\n                        };\r\n                        while (true) {\r\n                            repeatCount++;\r\n\r\n                            var promptMessage = \"Please name the Stream\";\r\n                            if (repeatCount > 1)\r\n                                promptMessage += \". Ensure the name is not used by any other Stream on this DataSource.\";\r\n\r\n                            var endpointLabel = info.targetEndpoint.getOverlay(\"endpointLabel\");\r\n                            var labelPrompt = prompt(promptMessage, endpointLabel.getLabel());\r\n                            if (labelPrompt)\r\n                                endpointLabel.setLabel(labelPrompt);\r\n                            else\r\n                                continue;\r\n\r\n                            // Check if any other Target-Endpoint has the same Stream-Name (Label)\r\n                            var endpoints = $scope.jsPlumbInstance.getEndpoints(info.target.id);\r\n                            var targetEndpointHavingSameLabel = null;\r\n\r\n                            angular.forEach(endpoints, endpointHandling);\r\n                            if (targetEndpointHavingSameLabel)\r\n                                continue;\r\n\r\n                            break;\r\n                        }\r\n                    });\r\n                });\r\n\r\n                // #region jsPlumb Endpoint Definitions\r\n                var getEndpointOverlays = function(isSource) {\r\n                    return [\r\n                        [\r\n                            \"Label\", {\r\n                                id: \"endpointLabel\",\r\n                                location: [0.5, isSource ? -0.5 : 1.5],\r\n                                label: \"Default\",\r\n                                cssClass: isSource ? \"endpointSourceLabel\" : \"endpointTargetLabel\",\r\n                                events: {\r\n                                    dblclick: function(labelOverlay) {\r\n                                        if ($scope.readOnly) return;\r\n\r\n                                        var newLabel = prompt(\"Rename Stream\", labelOverlay.label);\r\n                                        if (newLabel)\r\n                                            labelOverlay.setLabel(newLabel);\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]\r\n                    ];\r\n                };\r\n\r\n                // the definition of source endpoints (the small blue ones)\r\n                var sourceEndpoint = {\r\n                    paintStyle: { fillStyle: \"transparent\", radius: 10, lineWidth: 0 },\r\n                    cssClass: \"sourceEndpoint\",\r\n                    maxConnections: -1,\r\n                    isSource: true,\r\n                    anchor: [\"Continuous\", { faces: [\"top\"] }],\r\n                    overlays: getEndpointOverlays(true)\r\n                };\r\n\r\n                // the definition of target endpoints (will appear when the user drags a connection) \r\n                var targetEndpoint = {\r\n                    paintStyle: { fillStyle: \"transparent\", radius: 10, lineWidth: 0 },\r\n                    cssClass: \"targetEndpoint\",\r\n                    maxConnections: 1,\r\n                    isTarget: true,\r\n                    anchor: [\"Continuous\", { faces: [\"bottom\"] }],\r\n                    overlays: getEndpointOverlays(false),\r\n                    dropOptions: { hoverClass: \"hover\", activeClass: \"active\" }\r\n                };\r\n                // #endregion\r\n\r\n                // make a DataSource with Endpoints, called by the datasource-Directive (which uses a $timeout)\r\n                $scope.makeDataSource = function(dataSource, element) {\r\n                    // suspend drawing and initialise\r\n                \t$scope.jsPlumbInstance.batch(function () {\r\n\r\n                \t\t// make DataSources draggable. Must happen before makeSource()!\r\n                \t\tif (!$scope.readOnly) {\r\n                \t\t\t$scope.jsPlumbInstance.draggable(element, {\r\n                \t\t\t\tgrid: [20, 20],\r\n                \t\t\t\tdrag: $scope.dataSourceDrag\r\n                \t\t\t});\r\n                \t\t}\r\n\r\n                        // Add Out- and In-Endpoints from Definition\r\n                        var dataSourceDefinition = dataSource.Definition();\r\n                        if (dataSourceDefinition !== null) {\r\n                            // Add Out-Endpoints\r\n                            angular.forEach(dataSourceDefinition.Out, function(name) {\r\n                                addEndpoint(element, name, false);\r\n                            });\r\n                            // Add In-Endpoints\r\n                            angular.forEach(dataSourceDefinition.In, function(name) {\r\n                                addEndpoint(element, name, true);\r\n                            });\r\n                            // make the DataSource a Target for new Endpoints (if .In is an Array)\r\n                            if (dataSourceDefinition.In) {\r\n                                var targetEndpointUnlimited = targetEndpoint;\r\n                                targetEndpointUnlimited.maxConnections = -1;\r\n                                $scope.jsPlumbInstance.makeTarget(element, targetEndpointUnlimited);\r\n                            }\r\n\r\n                            $scope.jsPlumbInstance.makeSource(element, sourceEndpoint, { filter: \".ep .glyphicon\" });\r\n                        }\r\n\r\n                        \r\n                    });\r\n\r\n                    $scope.dataSourcesCount++;\r\n                };\r\n\r\n                // Add a jsPlumb Endpoint to an Element\r\n                var addEndpoint = function(element, name, isIn) {\r\n                    if (!element.length) {\r\n                        $log.error({ message: \"Element not found\", selector: element.selector });\r\n                        return;\r\n                    }\r\n                    console.log(element);\r\n\r\n                    var dataSource = $scope.findDataSourceOfElement(element[0]);\r\n\r\n                    var uuid = element[0].id + (isIn ? \"_in_\" : \"_out_\") + name;\r\n                    // old - using jQuery - var uuid = element.attr(\"id\") + (isIn ? \"_in_\" : \"_out_\") + name;\r\n                    var params = {\r\n                        uuid: uuid,\r\n                        enabled: !dataSource.ReadOnly || dataSource.EntityGuid == \"Out\" // Endpoints on Out-DataSource must be always enabled\r\n                    };\r\n                    var endPoint = $scope.jsPlumbInstance.addEndpoint(element, (isIn ? targetEndpoint : sourceEndpoint), params);\r\n                    endPoint.getOverlay(\"endpointLabel\").setLabel(name);\r\n                };\r\n\r\n                // Initialize jsPlumb Connections once after all DataSources were created in the DOM\r\n                $scope.connectionsInitialized = false;\r\n                $scope.$on(\"ngRepeatFinished\", function() {\r\n                    if ($scope.connectionsInitialized) return;\r\n\r\n                    // suspend drawing and initialise\r\n                    $scope.jsPlumbInstance.batch(function() {\r\n                        initWirings($scope.pipelineData.Pipeline.StreamWiring);\r\n                    });\r\n                    $scope.repaint(); // repaint so continuous connections are aligned correctly\r\n\r\n                    $scope.connectionsInitialized = true;\r\n                });\r\n\r\n\r\n                var initWirings = function(streamWiring) {\r\n                    angular.forEach(streamWiring, function(wire) {\r\n                        // read connections from Pipeline\r\n                        var sourceElementId = $scope.dataSourceIdPrefix + wire.From;\r\n                        var fromUuid = sourceElementId + \"_out_\" + wire.Out;\r\n                        var targetElementId = $scope.dataSourceIdPrefix + wire.To;\r\n                        var toUuid = targetElementId + \"_in_\" + wire.In;\r\n\r\n                        // Ensure In- and Out-Endpoint exist\r\n                        if (!$scope.jsPlumbInstance.getEndpoint(fromUuid))\r\n                            addEndpoint(jsPlumb.getSelector(\"#\" + sourceElementId), wire.Out, false);\r\n                        if (!$scope.jsPlumbInstance.getEndpoint(toUuid))\r\n                            addEndpoint(jsPlumb.getSelector(\"#\" + targetElementId), wire.In, true);\r\n\r\n                        try {\r\n                            $scope.jsPlumbInstance.connect({ uuids: [fromUuid, toUuid] });\r\n                        } catch (e) {\r\n                            $log.error({ message: \"Connection failed\", from: fromUuid, to: toUuid });\r\n                        }\r\n                    });\r\n\r\n                    // $scope.jsPlumbInstance.getConnections\r\n\r\n                };\r\n\r\n                // Init a new Pipeline with DataSources and Wirings from Configuration\r\n                var initNewPipeline = function () {\r\n                    var templateForNew = eavConfig.pipelineDesigner.defaultPipeline.dataSources;\r\n                    angular.forEach(templateForNew, function(dataSource) {\r\n                        $scope.addDataSource(dataSource.partAssemblyAndType, dataSource.visualDesignerData, false, dataSource.entityGuid);\r\n                    });\r\n\r\n                    // Wait until all DataSources were created\r\n                    var initWiringsListener = $scope.$on(\"ngRepeatFinished\", function() {\r\n                        $scope.connectionsInitialized = false;\r\n                        initWirings(eavConfig.pipelineDesigner.defaultPipeline.streamWiring);\r\n                        $scope.connectionsInitialized = true;\r\n\r\n                        initWiringsListener(); // unbind the Listener\r\n                    });\r\n                };\r\n\r\n                // Add new DataSource\r\n                $scope.addDataSource = function(partAssemblyAndType, visualDesignerData, autoSave, entityGuid) {\r\n                    if (!partAssemblyAndType) {\r\n                        partAssemblyAndType = $scope.addDataSourceType.PartAssemblyAndType;\r\n                        $scope.addDataSourceType = null;\r\n                    }\r\n                    if (!visualDesignerData)\r\n                        visualDesignerData = { Top: 100, Left: 100 };\r\n\r\n                    var newDataSource = {\r\n                        VisualDesignerData: visualDesignerData,\r\n                        Name: $filter(\"typename\")(partAssemblyAndType, \"className\"),\r\n                        Description: \"\",\r\n                        PartAssemblyAndType: partAssemblyAndType,\r\n                        EntityGuid: entityGuid || \"unsaved\" + ($scope.dataSourcesCount + 1)\r\n                    };\r\n                    // Extend it with a Property to it's Definition\r\n                    newDataSource = angular.extend(newDataSource, pipelineService.getNewDataSource($scope.pipelineData, newDataSource));\r\n\r\n                    $scope.pipelineData.DataSources.push(newDataSource);\r\n\r\n                    if (autoSave !== false)\r\n                        $scope.savePipeline();\r\n                };\r\n\r\n                // Delete a DataSource\r\n                $scope.remove = function(index) {\r\n                    var dataSource = $scope.pipelineData.DataSources[index];\r\n                    if (!confirm(\"Delete DataSource \\\"\" + (dataSource.Name || \"(unnamed)\") + \"\\\"?\")) return;\r\n                    var elementId = $scope.dataSourceIdPrefix + dataSource.EntityGuid;\r\n                    $scope.jsPlumbInstance.selectEndpoints({ element: elementId }).remove();\r\n                    $scope.pipelineData.DataSources.splice(index, 1);\r\n                };\r\n\r\n                // Edit name of a DataSource\r\n                $scope.editName = function(dataSource) {\r\n                    if (dataSource.ReadOnly) return;\r\n\r\n                    var newName = prompt(\"Rename DataSource\", dataSource.Name);\r\n                    if (newName && newName.trim())\r\n                        dataSource.Name = newName.trim();\r\n                };\r\n\r\n                // Edit Description of a DataSource\r\n                $scope.editDescription = function(dataSource) {\r\n                    if (dataSource.ReadOnly) return;\r\n\r\n                    var newDescription = prompt(\"Edit Description\", dataSource.Description);\r\n                    if (newDescription && newDescription.trim())\r\n                        dataSource.Description = newDescription.trim();\r\n                };\r\n\r\n                // Update DataSource Position on Drag\r\n                $scope.dataSourceDrag = function(draggedWrapper) {\r\n                    var offset = getElementOffset(draggedWrapper.el);\r\n                    var dataSource = $scope.findDataSourceOfElement(draggedWrapper.el);\r\n                    $scope.$apply(function() {\r\n                        dataSource.VisualDesignerData.Top = Math.round(offset.top);\r\n                        dataSource.VisualDesignerData.Left = Math.round(offset.left);\r\n                    });\r\n                };\r\n\r\n                // Configure a DataSource\r\n                $scope.configureDataSource = function(dataSource) {\r\n                    if (dataSource.ReadOnly) return;\r\n\r\n                    // Ensure dataSource Entity is saved\r\n                    if (!dataSourceIsPersisted(dataSource)) {\r\n                        $scope.savePipeline();\r\n                        return;\r\n                    }\r\n\r\n                    pipelineService.editDataSourcePart(dataSource);\r\n\r\n                };\r\n\r\n                // Test wether a DataSource is persisted on the Server\r\n                var dataSourceIsPersisted = function(dataSource) {\r\n                    return dataSource.EntityGuid.indexOf(\"unsaved\") === -1;\r\n                };\r\n\r\n                // Show/Hide Endpoint Overlays\r\n                $scope.showEndpointOverlays = true;\r\n                $scope.toggleEndpointOverlays = function() {\r\n                    $scope.showEndpointOverlays = !$scope.showEndpointOverlays;\r\n\r\n                    var endpoints = $scope.jsPlumbInstance.selectEndpoints();\r\n                    if ($scope.showEndpointOverlays)\r\n                        endpoints.showOverlays();\r\n                    else\r\n                        endpoints.hideOverlays();\r\n                };\r\n\r\n                // Edit Pipeline Entity\r\n                $scope.editPipelineEntity = function() {\r\n                    // save Pipeline, then open Edit Dialog\r\n                    $scope.savePipeline().then(function() {\r\n                        vm.saveShortcut.unbind();\r\n                        eavAdminDialogs.openEditItems([{ EntityId: $scope.PipelineEntityId }], function() {\r\n                            pipelineService.getPipeline($scope.PipelineEntityId)\r\n                                .then(pipelineSaved)\r\n                                .then(vm.saveShortcut.rebind);\r\n                        });\r\n\r\n                    });\r\n                };\r\n\r\n                // Sync jsPlumb Connections and StreamsOut to the pipelineData-Object\r\n                var syncPipelineData = function() {\r\n                    var connectionInfos = [];\r\n                    angular.forEach($scope.jsPlumbInstance.getAllConnections(), function(connection) {\r\n                        connectionInfos.push({\r\n                            From: connection.sourceId.substr($scope.dataSourceIdPrefix.length),\r\n                            Out: connection.endpoints[0].getOverlay(\"endpointLabel\").label,\r\n                            To: connection.targetId.substr($scope.dataSourceIdPrefix.length),\r\n                            In: connection.endpoints[1].getOverlay(\"endpointLabel\").label\r\n                        });\r\n                    });\r\n                    $scope.pipelineData.Pipeline.StreamWiring = connectionInfos;\r\n\r\n                    var streamsOut = [];\r\n                    $scope.jsPlumbInstance.selectEndpoints({ target: $scope.dataSourceIdPrefix + \"Out\" }).each(function(endpoint) {\r\n                        streamsOut.push(endpoint.getOverlay(\"endpointLabel\").label);\r\n                    });\r\n                    $scope.pipelineData.Pipeline.StreamsOut = streamsOut.join(\",\");\r\n                };\r\n\r\n                // #region Save Pipeline\r\n                // Save Pipeline\r\n                // returns a Promise about the saving state\r\n                vm.savePipeline = $scope.savePipeline = function (successHandler) {\r\n                    var waitMsg = toastr.info(\"This shouldn't take long\", \"Saving...\");\r\n                    $scope.readOnly = true;\r\n\r\n                    syncPipelineData();\r\n\r\n                    var deferred = $q.defer();\r\n\r\n                    if (typeof successHandler == \"undefined\") // set default success Handler\r\n                        successHandler = pipelineSaved;\r\n\r\n                    pipelineService.savePipeline($scope.pipelineData.Pipeline, $scope.pipelineData.DataSources).then(successHandler, function(reason) {\r\n                        toastr.error(reason, \"Save Pipeline failed\");\r\n                        $scope.readOnly = false;\r\n                        deferred.reject();\r\n                    }).then(function() {\r\n                        deferred.resolve();\r\n                    });\r\n\r\n                    return deferred.promise;\r\n                };\r\n\r\n                // Handle Pipeline Saved, success contains the updated Pipeline Data\r\n                var pipelineSaved = function(success) {\r\n                    // Update PipelineData with data retrieved from the Server\r\n                    $scope.pipelineData.Pipeline = success.Pipeline;\r\n                    $scope.PipelineEntityId = success.Pipeline.EntityId /*EntityId*/;\r\n                    $location.search(\"PipelineId\", success.Pipeline.EntityId /*EntityId*/);\r\n                    $scope.readOnly = !success.Pipeline.AllowEdit;\r\n                    $scope.pipelineData.DataSources = success.DataSources;\r\n                    pipelineService.postProcessDataSources($scope.pipelineData);\r\n\r\n                    toastr.clear();\r\n                    toastr.success(\"Pipeline \" + success.Pipeline.EntityId + \" saved and loaded\", \"Saved\", { autoDismiss: true });\r\n\r\n                    // Reset jsPlumb, re-Init Connections\r\n                    $scope.jsPlumbInstance.reset();\r\n                    $scope.connectionsInitialized = false;\r\n                };\r\n                // #endregion\r\n\r\n                // Repaint jsPlumb\r\n                $scope.repaint = function() {\r\n                    $scope.jsPlumbInstance.repaintEverything();\r\n                };\r\n\r\n                // Show/Hide Debug info\r\n                $scope.toogleDebug = function() {\r\n                    $scope.debug = !$scope.debug;\r\n                };\r\n\r\n                // Query the Pipeline\r\n                $scope.queryPipeline = function() {\r\n                    var query = function() {\r\n                        // Query pipelineService for the result...\r\n                        toastr.info(\"Running Query ...\");\r\n\r\n                        pipelineService.queryPipeline($scope.PipelineEntityId).then(function(success) {\r\n                            // Show Result in a UI-Dialog\r\n                            toastr.clear();\r\n\r\n                            var resolve = eavAdminDialogs.CreateResolve({ testParams: $scope.pipelineData.Pipeline.TestParameters, result: success });\r\n                            eavAdminDialogs.OpenModal(\"pipelines/query-stats.html\", \"QueryStats as vm\", \"lg\", resolve);\r\n\r\n                            $timeout(function() {\r\n                                showEntityCountOnStreams(success);\r\n                            });\r\n                            $log.debug(success);\r\n                        }, function(reason) {\r\n                            toastr.error(reason, \"Query failed\");\r\n                        });\r\n                    };\r\n\r\n\r\n                    var showEntityCountOnStreams = function(result) {\r\n                        angular.forEach(result.Streams, function(stream) {\r\n                            // Find jsPlumb Connection for the current Stream\r\n                            var sourceElementId = $scope.dataSourceIdPrefix + stream.Source;\r\n                            var targetElementId = $scope.dataSourceIdPrefix + stream.Target;\r\n                            if (stream.Target === \"00000000-0000-0000-0000-000000000000\")\r\n                                targetElementId = $scope.dataSourceIdPrefix + \"Out\";\r\n\r\n                            var fromUuid = sourceElementId + \"_out_\" + stream.SourceOut;\r\n                            var toUuid = targetElementId + \"_in_\" + stream.TargetIn;\r\n\r\n                            var sourceEndpoint = $scope.jsPlumbInstance.getEndpoint(fromUuid);\r\n                            var streamFound = false;\r\n                            if (sourceEndpoint) {\r\n                                angular.forEach(sourceEndpoint.connections, function(connection) {\r\n                                    if (connection.endpoints[1].getUuid() === toUuid) {\r\n                                        // when connection found, update it's label with the Entities-Count\r\n                                        connection.setLabel({\r\n                                            label: stream.Count.toString(),\r\n                                            cssClass: \"streamEntitiesCount\"\r\n                                        });\r\n                                        streamFound = true;\r\n                                        return;\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            if (!streamFound)\r\n                                $log.error(\"Stream not found\", stream, sourceEndpoint);\r\n                        });\r\n                    };\r\n\r\n                    // Ensure the Pipeline is saved\r\n                    $scope.savePipeline().then(query);\r\n                };\r\n\r\n                // Clone the Pipeline\r\n                $scope.clonePipeline = function() {\r\n                    if (!confirm(\"Clone Pipeline \" + $scope.PipelineEntityId + \"?\")) return;\r\n\r\n                    // Clone and get new PipelineEntityId\r\n                    var clone = function() {\r\n                        return pipelineService.clonePipeline($scope.PipelineEntityId);\r\n                    };\r\n                    // Get the new Pipeline (Pipeline and DataSources)\r\n                    var getClonePipeline = function(success) {\r\n                        return pipelineService.getPipeline(success.EntityId /*EntityId*/);\r\n                    };\r\n\r\n                    // Save, clone, get clone, load clone\r\n                    $scope.savePipeline(null).then(clone).then(getClonePipeline).then(pipelineSaved);\r\n                };\r\n            }]);\r\n})();\n// Config and Controller for the Pipeline Management UI\r\nangular.module(\"PipelineManagement\", [\r\n    \"EavServices\",\r\n    \"EavConfiguration\",\r\n    \"eavNgSvcs\",\r\n    \"EavAdminUi\"\r\n]).\r\n\tcontroller(\"PipelineManagement\", [\"$modalInstance\", \"appId\", \"pipelineService\", \"debugState\", \"eavAdminDialogs\", \"eavConfig\", function ($modalInstance, appId, pipelineService, debugState, eavAdminDialogs, eavConfig) {\r\n\t    var vm = this;\r\n        vm.debug = debugState;\r\n        vm.appId = appId;\r\n\r\n\t    pipelineService.setAppId(appId);\r\n\r\n        // 2016-02-18 2dm - probably not needed\r\n\t    // pipelineService.initContentTypes();\r\n\r\n\t    // 2016-01-14 2dm - commenting out completely, as the getPipelineUrl is probably not used any more\r\n\t    // Make URL-Provider available to the scope\r\n\t    // vm.getPipelineUrl = pipelineService.getPipelineUrl;\r\n\r\n\t    // Refresh List of Pipelines\r\n\t    vm.refresh = function () {\r\n\t        vm.pipelines = pipelineService.getPipelines(appId);\r\n\t    };\r\n\t    vm.refresh();\r\n\r\n\t    // Delete a Pipeline\r\n        vm.delete = function(pipeline) {\r\n            if (!confirm(\"Delete Pipeline \\\"\" + pipeline.Name + \"\\\" (\" + pipeline.Id + \")?\"))\r\n                return;\r\n\r\n            pipelineService.deletePipeline(pipeline.Id).then(function() {\r\n                vm.refresh();\r\n            }, function(reason) {\r\n                alert(reason);\r\n            });\r\n        };\r\n\r\n\t    // Clone a Pipeline\r\n        vm.clone = function(pipeline) {\r\n            pipelineService.clonePipeline(pipeline.Id).then(function() {\r\n                vm.refresh();\r\n            }, function(reason) {\r\n                alert(reason);\r\n            });\r\n        };\r\n\r\n        vm.permissions = function (item) {\r\n            return eavAdminDialogs.openPermissionsForGuid(appId, item.Guid);\r\n        };\r\n\r\n        vm.add = function add() {\r\n            var items = [{\r\n                    ContentTypeName: \"DataPipeline\",\r\n                    Prefill: { TestParameters: eavConfig.pipelineDesigner.testParameters }\r\n                }];\r\n            eavAdminDialogs.openEditItems(items, vm.refresh);\r\n        };\r\n\r\n        vm.edit = function edit(item) {\r\n            eavAdminDialogs.openItemEditWithEntityId(item.Id, vm.refresh);\r\n        }; \r\n\r\n        vm.design = function design(item) {\r\n            return eavAdminDialogs.editPipeline(vm.appId, item.Id, vm.refresh);\r\n        };\r\n        vm.liveEval = function admin() {\r\n            var inp = prompt(\"This is for very advanced operations. Only use this if you know what you're doing. \\n\\n Enter admin commands:\");\r\n            if (inp)\r\n                eval(inp); // jshint ignore:line\r\n        };\r\n        vm.close = function () { $modalInstance.dismiss(\"cancel\"); };\r\n    }]);\n/*jshint laxbreak:true */\r\n(function() {\r\n\r\n    angular.module(\"PipelineDesigner\")\r\n        .controller(\"QueryStats\", [\"testParams\", \"result\", \"$modalInstance\", function (testParams, result, $modalInstance) {\r\n                var vm = this;\r\n                var success = result;\r\n                vm.testParameters = testParams.split(\"\\n\");\r\n                vm.timeUsed = success.QueryTimer.Milliseconds;\r\n                vm.ticksUsed = success.QueryTimer.Ticks;\r\n                vm.result = success.Query;\r\n\r\n                vm.sources = success.Sources;\r\n                vm.streams = success.Streams;\r\n\r\n                vm.connections = \"todo\";\r\n\r\n\r\n                vm.close = function () {\r\n                    $modalInstance.dismiss(\"cancel\");\r\n                };\r\n\r\n            }]\r\n        );\r\n})();\n// Init the main eav services module\r\nangular.module(\"EavServices\", [\r\n    \"ng\",                   // Angular for $http etc.\r\n    \"EavConfiguration\",     // global configuration\r\n    \"pascalprecht.translate\",\r\n    \"ngResource\",           // only needed for the pipeline-service, maybe not necessary any more?\r\n    \"ngAnimate\",\r\n    \"toastr\"\r\n]);\n\r\nangular.module(\"EavServices\")\r\n    .factory(\"contentItemsSvc\", [\"$http\", \"entitiesSvc\", \"metadataSvc\", \"svcCreator\", function($http, entitiesSvc, metadataSvc, svcCreator) {\r\n            return function createContentItemsSvc(appId, contentType) {\r\n                var svc = {};\r\n                svc.contentType = contentType;\r\n\r\n                svc.appId = appId;\r\n\r\n                svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                    return $http.get(\"eav/entities/GetAllOfTypeForAdmin\", { params: { appId: svc.appId, contentType: svc.contentType } });\r\n                }));\r\n                \r\n                // delete, then reload\r\n                svc.delete = function del(id, tryForce) {\r\n                    return entitiesSvc.delete(svc.contentType, id, tryForce); // for now must work with get :( - delete doesn't work well in dnn\r\n                        //.then(svc.liveListReload, null);\r\n                //});\r\n                };\r\n\r\n                // todo: should use the ContentTypeService instead\r\n                svc.getColumns = function getColumns() {\r\n                    return $http.get(\"eav/contenttype/getfields/\", { params: { \"appid\": svc.appId, \"staticName\": svc.contentType } });\r\n                };\r\n\r\n                return svc;\r\n            };\r\n        }]\r\n    );\n\r\nangular.module(\"EavServices\")\r\n    .factory(\"contentTypeSvc\", [\"$http\", \"eavConfig\", \"svcCreator\", function ($http, eavConfig, svcCreator) {\r\n        return function appSpecificContentTypeSvc(appId, scope) {\r\n            var svc = {};\r\n            svc.scope = scope || eavConfig.contentType.defaultScope;\r\n            svc.appId = appId;\r\n\r\n            svc.retrieveContentTypes = function typeListRetrieve() {\r\n                return $http.get(\"eav/contenttype/get/\", { params: { \"appid\": svc.appId, \"scope\": svc.scope } });\r\n            };\r\n\r\n            svc = angular.extend(svc, svcCreator.implementLiveList(svc.retrieveContentTypes));\r\n\r\n            svc.getDetails = function getDetails(contentTypeName) {\r\n                return $http.get(\"eav/contenttype/GetSingle\", { params: { \"appid\": svc.appId, \"contentTypeStaticName\": contentTypeName } });\r\n            };\r\n\r\n            svc.newItem = function newItem() {\r\n                return {\r\n                    StaticName: \"\",\r\n                    Name: \"\",\r\n                    Description: \"\",\r\n                    Scope: eavConfig.contentType.defaultScope\r\n                };\r\n            };\r\n\r\n            svc.save = function save(item) {\r\n                return $http.post(\"eav/contenttype/save/\", item, { params: { appid: svc.appId } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            svc.delete = function del(item) {\r\n                return $http.get(\"eav/contenttype/delete\", { params: { appid: svc.appId, staticName: item.StaticName } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            svc.setScope = function setScope(newScope) {\r\n                svc.scope = newScope;\r\n                svc.liveListReload();\r\n            };\r\n\r\n            svc.createGhost = function createGhost(sourceStaticName) {\r\n                return $http.get(\"eav/contenttype/createghost\", { params: { appid: svc.appId, sourceStaticName: sourceStaticName } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n            return svc;\r\n        };\r\n\r\n    }]);\n\r\nangular.module(\"EavServices\")\r\n    .factory(\"contentTypeFieldSvc\", [\"$http\", \"eavConfig\", \"svcCreator\", \"$filter\", function($http, eavConfig, svcCreator, $filter) {\r\n        return function createFieldsSvc(appId, contentType) {\r\n            // start with a basic service which implement the live-list functionality\r\n            var svc = {};\r\n            svc.appId = appId;\r\n            svc.contentType = contentType;\r\n\r\n            svc.typeListRetrieve = function typeListRetrieve() {\r\n                return $http.get(\"eav/contenttype/datatypes/\", { params: { \"appid\": svc.appId } });\r\n            };\r\n\r\n            svc._inputTypesList = [];\r\n            svc.getInputTypesList = function getInputTpes() {\r\n                if (svc._inputTypesList.length > 0)\r\n                    return svc._inputTypesList;\r\n                $http.get(\"eav/contenttype/inputtypes/\", { params: { \"appid\": svc.appId } })\r\n                    .then(function(result) {\r\n                        function addToList(value, key) {\r\n                            var item = {\r\n                                dataType: value.Type.substring(0, value.Type.indexOf(\"-\")),\r\n                                inputType: value.Type,\r\n                                label: value.Label,\r\n                                description: value.Description\r\n                            };\r\n                            svc._inputTypesList.push(item);\r\n                        }\r\n\r\n                        angular.forEach(result.data, addToList);\r\n\r\n                        svc._inputTypesList = $filter(\"orderBy\")(svc._inputTypesList, [\"dataType\", \"inputType\"]);\r\n                    });\r\n                return svc._inputTypesList;\r\n            };\r\n\r\n\t        svc.getFields = function getFields() {\r\n\t            return $http.get(\"eav/contenttype/getfields\", { params: { \"appid\": svc.appId, \"staticName\": svc.contentType.StaticName } })\r\n\t            .then(function(result) {\r\n\t                // merge the settings into one, with correct priority sequence\r\n\t                if (result.data ) {\r\n\t                    for (var i = 0; i < result.data.length; i++) {\r\n\t                        var fld = result.data[i];\r\n\t                        if(!fld.Metadata)\r\n                                continue;\r\n\t                        var md = fld.Metadata;\r\n\t                        var allMd = md.All;\r\n\t                        var typeMd = md[fld.Type];\r\n\t                        var inputMd = md[fld.InputType];\r\n\t                        md.merged = angular.merge({}, allMd, typeMd, inputMd);\r\n\t                    }\r\n\t                }\r\n\t                    return result;\r\n\t                });\r\n\t        };\r\n\r\n            svc = angular.extend(svc, svcCreator.implementLiveList(svc.getFields));\r\n\r\n            svc.types = svcCreator.implementLiveList(svc.typeListRetrieve);\r\n\r\n\r\n            //svc.moveUp = function moveUp(item) {\r\n            //    return $http.get(\"eav/contenttype/reorder\", { params: { appid: svc.appId, contentTypeId: svc.contentType.Id, attributeId: item.Id, direction: \"up\" } })\r\n            //        .then(svc.liveListReload);\r\n            //};\r\n            //svc.moveDown = function moveDown(item) {\r\n            //    return $http.get(\"eav/contenttype/reorder\", { params: { appid: svc.appId, contentTypeId: svc.contentType.Id, attributeId: item.Id, direction: \"down\" } })\r\n            //        .then(svc.liveListReload);\r\n            //};\r\n            svc.reOrder = function reOrder(idArray) {\r\n                console.log(idArray);\r\n                return $http.get(\"eav/contenttype/reorder\", { params: { appid: svc.appId, contentTypeId: svc.contentType.Id, newSortOrder: JSON.stringify(idArray) } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            svc.delete = function del(item) {\r\n                return $http.get(\"eav/contenttype/delete\", { params: { appid: svc.appId, contentTypeId: svc.contentType.Id, attributeId: item.Id } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            svc.addMany = function add(items, count) {\r\n                return $http.get(\"eav/contenttype/addfield/\", { params: items[count] })\r\n                    .then(function() {\r\n                        if (items.length == ++count)\r\n                            svc.liveListReload();\r\n                        else\r\n                            svc.addMany(items, count);\r\n                    });\r\n            };\r\n\r\n            svc.add = function addOne(item) {\r\n                return $http.get(\"eav/contenttype/addfield/\", { params: item })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            svc.newItemCount = 0;\r\n            svc.newItem = function newItem() {\r\n                return {\r\n                    AppId: svc.appId,\r\n                    ContentTypeId: svc.contentType.Id,\r\n                    Id: 0,\r\n                    Type: \"String\",\r\n                    InputType: \"string-default\",\r\n                    StaticName: \"\",\r\n                    IsTitle: svc.liveList().length === 0,\r\n                    SortOrder: svc.liveList().length + svc.newItemCount++\r\n                };\r\n            };\r\n\r\n\r\n            svc.delete = function del(item) {\r\n                if (item.IsTitle)\r\n                    throw \"Can't delete Title\";\r\n                return $http.get(\"eav/contenttype/deletefield\", { params: { appid: svc.appId, contentTypeId: svc.contentType.Id, attributeId: item.Id } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            svc.updateInputType = function updateInputType(item) {\r\n                return $http.get(\"eav/contenttype/updateinputtype\", { params: { appid: svc.appId, attributeId: item.Id, field: item.StaticName, inputType: item.InputType } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n\r\n            svc.setTitle = function setTitle(item) {\r\n                return $http.get(\"eav/contenttype/setTitle\", { params: { appid: svc.appId, contentTypeId: svc.contentType.Id, attributeId: item.Id } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n            svc.rename = function rename(item, newName) {\r\n                return $http.get(\"eav/contenttype/rename\", { params: { appid: svc.appId, contentTypeId: svc.contentType.Id, attributeId: item.Id, newName: newName } })\r\n                    .then(svc.liveListReload);\r\n            };\r\n\r\n\r\n            return svc;\r\n        };\r\n    }]);\n/* \r\n * \r\n * Simple service which takes care of ctrl+S keyboard shortcuts. \r\n * use it as a service for your controller, then add a line like \r\n         function activate() {\r\n            // add ctrl+s to save\r\n            ctrlS.bind(function() { vm.save(false); });\r\n        }\r\n\r\n */\r\n\r\nangular.module(\"EavServices\")\r\n    .factory(\"ctrlS\", [\"$window\", function ($window) {\r\n\r\n        // Create a capture Ctrl+S and execute action-object\r\n        function createSave(action) {\r\n            var save = {\r\n                _event: null,\r\n                _action: null,\r\n                _isbound: false,\r\n\r\n                // this will be called on each keydown, will check if it was a ctrl+S\r\n                detectCtrlSAndExcecute: function(e) {\r\n                    if (e.keyCode === 83 && (navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey)) {\r\n                        if (save._action === null)\r\n                            return console.log(\"can't do anything on ctrl+S, no action registered\");\r\n                        e.preventDefault();\r\n                        save._action();\r\n                    }\r\n                },\r\n\r\n                bind: function bind(action) {\r\n                    save._action = action;\r\n                    save._isbound = true;\r\n                    save._event = $window.addEventListener(\"keydown\", save.detectCtrlSAndExcecute, false);\r\n\r\n                },\r\n\r\n                unbind: function unbind() {\r\n                    $window.removeEventListener(\"keydown\", save.detectCtrlSAndExcecute);\r\n                    save._isbound = false;\r\n                },\r\n\r\n                // re-attach Ctrl+S if it had already been attached previously\r\n                rebind: function rebind() {\r\n                    if (save._action === null)\r\n                        throw \"can't rebind, as it was never initially bound\";\r\n                    if (!save._isbound)\r\n                        throw \"can't rebind, as it's still bound\";\r\n                    save.bind(save._action);\r\n                }\r\n            };\r\n\r\n            save.bind(action);\r\n\r\n            return save;\r\n        }\r\n\r\n        return createSave;\r\n    }]);\n/* shared debugState = advancedMode\r\n * \r\n * vm.debug -> shows if in debug mode - bind ng-ifs to this\r\n * vm.maybeEnableDebug - a method which checks for ctrl+shift-click and if yes, changes debug state\r\n *\r\n * How to use\r\n * 1. add uiDebug to your controller dependencies like:    contentImportController(appId, ..., debugState, $modalInstance, $filter)\r\n * 2. add a line after creating your vm-object like:       vm.debug = debugState;\r\n * 3. add a click event as far out as possible on html:    <div ng-click=\"vm.debug.autoEnableAsNeeded($event)\">\r\n * 4. wrap your hidden stuff in an ng-if:                  <div ng-if=\"vm.debug.on\">\r\n *\r\n * Note that if you're using it in a directive you'll use $scope instead of vm, so the binding is different.\r\n * For example, instead of <div ng-if=\"vm.debug.on\"> you would write <div ng-if=\"debug.on\">\r\n */\r\n\r\nangular.module(\"EavServices\")\r\n    .factory(\"debugState\", [\"$translate\", \"toastr\", function ($translate, toastr) {\r\n        var svc = {\r\n            on: false\r\n        };\r\n\r\n        svc.toggle = function toggle() {\r\n            svc.on = !svc.on;\r\n            toastr.clear(svc.toast);\r\n            svc.toast = toastr.info($translate.instant(\"AdvancedMode.Info.Turn\" + (svc.on ? \"On\" : \"Off\")), { timeOut: 3000 });\r\n        };\r\n\r\n        svc.autoEnableAsNeeded = function (e) {\r\n            e = window.event || e;\r\n            var ctrlPressed = (navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey);//evt.ctrlKey;\r\n            if (ctrlPressed && !e.alreadySwitchedDebugState) {\r\n                svc.toggle();\r\n                e.alreadySwitchedDebugState = true;\r\n            }\r\n        };\r\n\r\n        return svc;\r\n    }]);\n// This service adds CSS classes to body when something is dragged onto the page\r\nangular.module(\"EavServices\")\r\n    .factory(\"dragClass\", function () {\r\n\r\n        document.addEventListener(\"dragover\", function() {\r\n            if(this === document)\r\n                document.body.classList.add(\"eav-dragging\");\r\n        });\r\n        document.addEventListener(\"dragleave\", function() {\r\n            if(this === document)\r\n                document.body.classList.remove(\"eav-dragging\");\r\n        });\r\n\r\n        return {};\r\n\r\n    });\r\n\n/*  this file contains a service to handle \r\n * How it works\r\n * This service tries to open a modal dialog if it can, otherwise a new window returning a promise to allow\r\n * ...refresh when the window close. \r\n * \r\n * In most cases there is a nice command to open something, like openItemEditWithEntityId(id, callback)\r\n * ...and there is also a more advanced version where you could specify more closely what you wanted\r\n * ...usually ending with an X, so like openItemEditWithEntityIdX(resolve, callbacks)\r\n * \r\n * the simple callback is 1 function (usually to refresh the main list), the complex callbacks have the following structure\r\n * 1. .success (optional)\r\n * 2. .error (optional) \r\n * 3. .notify (optional)\r\n * 4. .close (optional) --> this one is attached to all events if no primary handler is defined \r\n *  \r\n * How to use\r\n * 1. you must already include all js files in your main app - so the controllers you'll need must be preloaded\r\n * 2. Your main app must also  declare the other apps as dependencies, so angular.module('yourname', ['dialog 1', 'diolag 2'])\r\n * 3. your main app must also need this ['EavAdminUI']\r\n * 4. your controller must require eavAdminDialogs\r\n * 5. Then you can call such a dialog\r\n */\r\n\r\n\r\n// Todo\r\n// 1. Import / Export\r\n// 2. Pipeline Designer\r\n\r\n// var contentItemsModule = $eavOnlyHelpers.urlParams.get(\"oldgrid\") ? \"ContentItemsApp\" : \"ContentItemsAppAgnostic\";\r\n\r\nangular.module(\"EavAdminUi\", [\"ng\",\r\n    \"ui.bootstrap\",         // for the $modal etc.\r\n    \"EavServices\",\r\n    \"eavTemplates\",         // Provides all cached templates\r\n    \"PermissionsApp\",       // Permissions dialogs to manage permissions\r\n    \"ContentItemsAppAgnostic\", // contentItemsModule,      // Content-items dialog - not working atm?\r\n    \"PipelineManagement\",   // Manage pipelines\r\n    \"ContentImportApp\",\r\n    \"ContentExportApp\",\r\n    \"HistoryApp\",            // the item-history app\r\n\r\n    // big todo: currently removed dependency to eavEditentity (much faster) but it actually does...\r\n    // ...need it to initialize this class, so ATM this only works in a system where the other dependency\r\n    // is defined. very not clean :( \r\n    // but much faster for now\r\n    // the correct clean up would be to create an edit-dialogs class or something (todo)\r\n\t// \"eavEditEntity\"\t\t\t// the edit-app\r\n])\r\n    .factory(\"eavAdminDialogs\", [\"$modal\", \"eavConfig\", \"$window\", \"entitiesSvc\", \"contentTypeSvc\", \"appId\", function ($modal, eavConfig, $window,\r\n        // these are needed just for simple access to some dialogs\r\n        entitiesSvc,    // warning: this only works ATM when called in 2sxc, because it needs the eavEditEntity dependency\r\n        contentTypeSvc,\r\n        appId) {\r\n            /*jshint laxbreak:true */\r\n\r\n            var svc = {};\r\n\r\n            //#region List of Content Items dialogs\r\n            svc.openContentItems = function oci(appId, staticName, itemId, closeCallback) {\r\n            \tvar resolve = svc.CreateResolve({ appId: appId, contentType: staticName, contentTypeId: itemId });\r\n            \treturn svc.OpenModal(\"content-items/content-items-agnostic.html\", \"ContentItemsList as vm\", \"fullscreen\", resolve, closeCallback);\r\n            };\r\n            //#endregion\r\n\r\n            //#region content import export\r\n            svc.openContentImport = function ocimp(appId, staticName, closeCallback) {\r\n                var resolve = svc.CreateResolve({ appId: appId, contentType: staticName });\r\n                return svc.OpenModal(\"content-import-export/content-import.html\", \"ContentImport as vm\", \"lg\", resolve, closeCallback);\r\n            };\r\n\r\n            svc.openContentExport = function ocexp(appId, staticName, closeCallback) {\r\n                var resolve = svc.CreateResolve({ appId: appId, contentType: staticName });\r\n                return svc.OpenModal(\"content-import-export/content-export.html\", \"ContentExport as vm\", \"lg\", resolve, closeCallback);\r\n            };\r\n\r\n            //#endregion\r\n\r\n            //#region ContentType dialogs\r\n\r\n            svc.openContentTypeEdit = function octe(item, closeCallback) {\r\n                var resolve = svc.CreateResolve({ item: item });\r\n                return svc.OpenModal(\"content-types/content-types-edit.html\", \"Edit as vm\", \"\", resolve, closeCallback);\r\n            };\r\n\r\n            svc.openContentTypeFields = function octf(item, closeCallback) {\r\n                    var resolve = svc.CreateResolve({ contentType: item });\r\n                    return svc.OpenModal(\"content-types/content-types-fields.html\", \"FieldList as vm\", \"xlg\", resolve, closeCallback);\r\n            };\r\n\r\n            // this one assumes we have a content-item, but must first retrieve content-type-infos\r\n            svc.openContentTypeFieldsOfItems = function octf(item, closeCallback) {\r\n                return entitiesSvc.getManyForEditing(appId, item)\r\n                    .then(function(result) {\r\n                        var ctName = result.data[0].Header.ContentTypeName;\r\n                        var svcForThis = contentTypeSvc(appId); // note: won't specify scope to fallback\r\n                        return svcForThis.getDetails(ctName).then(function(result2) {\r\n                            return svc.openContentTypeFields(result2.data, closeCallback);\r\n                        });\r\n                    });\r\n            };\r\n\r\n\r\n            //#endregion\r\n        \r\n            //#region Item - new, edit\r\n            svc.openItemNew = function oin(contentTypeName, closeCallback) {\r\n                return svc.openEditItems([{ ContentTypeName: contentTypeName }], closeCallback);\r\n            };\r\n\r\n            svc.openItemEditWithEntityId = function oie(entityId, closeCallback) {\r\n                return svc.openEditItems([{ EntityId: entityId }], closeCallback);\r\n            };\r\n\r\n            svc.openEditItems = function oel(items, closeCallback) {\r\n                var resolve = svc.CreateResolve({ items: items });\r\n                return svc.OpenModal(\"form/main-form.html\", \"EditEntityWrapperCtrl as vm\", \"ent-edit\", resolve, closeCallback);\r\n            };\r\n\r\n            svc.openItemHistory = function ioh(entityId, closeCallback) {\r\n                return svc.OpenModal(\"content-items/history.html\", \"History as vm\", \"lg\",\r\n                    svc.CreateResolve({ entityId: entityId }),\r\n                    closeCallback);\r\n            };\r\n            //#endregion\r\n\r\n            //#region Metadata - mainly new\r\n            svc.openMetadataNew = function omdn(appId, targetType, targetId, metadataType, closeCallback) {\r\n                var metadata = {};\r\n                switch (targetType) {\r\n                    case \"entity\":\r\n                        metadata.Key = targetId;\r\n                        metadata.KeyType = \"guid\";\r\n                        metadata.TargetType = eavConfig.metadataOfEntity;\r\n                        break;\r\n                    case \"attribute\":\r\n                        metadata.Key = targetId;\r\n                        metadata.KeyType = \"number\";\r\n                        metadata.TargetType = eavConfig.metadataOfAttribute;\r\n                        break;\r\n                    default: throw \"targetType unknown, only accepts entity or attribute for now\";\r\n                }\r\n                var items = [{\r\n                    ContentTypeName: metadataType,\r\n                    Metadata: metadata\r\n                }];\r\n\r\n                svc.openEditItems(items, closeCallback);\r\n            };\r\n            //#endregion\r\n\r\n            //#region Permissions Dialog\r\n            svc.openPermissionsForGuid = function opfg(appId, targetGuid, closeCallback) {\r\n                var resolve = svc.CreateResolve({ appId: appId, targetGuid: targetGuid });\r\n                return svc.OpenModal(\"permissions/permissions.html\", \"PermissionList as vm\", \"lg\", resolve, closeCallback);\r\n            };\r\n            //#endregion\r\n\r\n            //#region Pipeline Designer\r\n            svc.editPipeline = function ep(appId, pipelineId, closeCallback) {\r\n                var url = svc.derivedUrl({\r\n                    dialog: \"pipeline-designer\",\r\n                    pipelineId: pipelineId\r\n                });\r\n                $window.open(url);\r\n                return;\r\n            };\r\n            //#endregion\r\n\r\n        //#region GenerateUrlBasedOnCurrent\r\n            svc.derivedUrl = function derivedUrl(varsToReplace) {\r\n                var url = window.location.href;\r\n                for (var prop in varsToReplace)\r\n                    if (varsToReplace.hasOwnProperty(prop))\r\n                        url = svc.replaceOrAddOneParam(url, prop, varsToReplace[prop]);\r\n\r\n                return url;\r\n                //url = url\r\n                //    .replace(new RegExp(\"appid=[0-9]*\", \"i\"), \"appid=\" + item.Id) // note: sometimes it doesn't have an appid, so it's [0-9]* instead of [0-9]+\r\n                //    .replace(/approot=[^&]*/, \"approot=\" + item.AppRoot + \"/\")\r\n                //    .replace(\"dialog=zone\", \"dialog=app\");\r\n            };\r\n\r\n            svc.replaceOrAddOneParam = function replaceOneParam(original, param, value) {\r\n                var rule = new RegExp(\"(\" + param + \"=).*?(&)\", \"i\");\r\n                var newText = rule.test(original)\r\n                    ? original.replace(rule, \"$1\" + value + \"$2\")\r\n                    : original + \"&\" + param + \"=\" + value;\r\n                return newText;\r\n            };\r\n        //#endregion\r\n\r\n\r\n        //#region Internal helpers\r\n            svc._attachCallbacks = function attachCallbacks(promise, callbacks) {\r\n                if (typeof (callbacks) === \"undefined\")\r\n                    return null;\r\n                if (typeof (callbacks) === \"function\") // if it's only one callback, use it for all close-cases\r\n                    callbacks = { close: callbacks };\r\n                return promise.result.then(callbacks.success || callbacks.close, callbacks.error || callbacks.close, callbacks.notify || callbacks.close);\r\n            };\r\n\r\n        // Will open a modal window. Has various specials, like\r\n        // 1. If the templateUrl begins with \"~/\" - this will be re-mapped to the ng-app root. Only use this for not-inline stuff\r\n        // 2. The controller can be written as \"something as vm\" and this will be split and configured corectly\r\n            svc.OpenModal = function openModal(templateUrl, controller, size, resolveValues, callbacks) {\r\n                var foundAs = controller.indexOf(\" as \");\r\n                var contAs = foundAs > 0 ?\r\n                    controller.substring(foundAs + 4)\r\n                    : null;\r\n                if (foundAs > 0)\r\n                    controller = controller.substring(0, foundAs);\r\n\r\n                var modalInstance = $modal.open({\r\n                    animation: true,\r\n                    templateUrl: templateUrl,\r\n                    controller: controller,\r\n                    controllerAs: contAs,\r\n                    size: size,\r\n                    resolve: resolveValues\r\n                });\r\n\r\n                return svc._attachCallbacks(modalInstance, callbacks);\r\n            };\r\n\r\n        /// This will create a resolve-object containing return function()... for each property in the array\r\n            svc.CreateResolve = function createResolve() {\r\n                var fns = {}, list = arguments[0];\r\n                for (var prop in list) \r\n                    if (list.hasOwnProperty(prop))\r\n                        fns[prop] = svc._create1Resolve(list[prop]);\r\n                return fns;\r\n            };\r\n\r\n            svc._create1Resolve = function (value) {\r\n                return function () { return value; };\r\n            };\r\n        //#endregion\r\n\r\n\r\n        return svc;\r\n    }])\r\n\r\n;\n/*  this file contains various eav-angular services\r\n *  1. the basic configuration enforcing html5 mode\r\n */\r\n\r\nangular.module(\"eavNgSvcs\", [\"ng\"])\r\n\r\n    /// Config to ensure that $location can work and give url-parameters\r\n    .config([\"$locationProvider\", function ($locationProvider) {\r\n            $locationProvider.html5Mode({\r\n                enabled: true,\r\n                requireBase: false\r\n            });\r\n        } ])\r\n\r\n\r\n;\r\n\n\r\n/* File Type Services\r\n * Helps check if something is an image (then the UI usually wants a thumbnail)\r\n * ...or if it has an icon in the font-library - then it can provide the class name for the icon\r\n */\r\nangular.module(\"EavServices\").service(\"fileType\", function () {\r\n    var svc = {};\r\n    svc.iconPrefix = \"icon-\";\r\n    svc.defaultIcon = \"file\";\r\n    svc.checkImgRegEx = /(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*\\.(?:jpg|jpeg|gif|png))(?:\\?([^#]*))?(?:#(.*))?/i;\r\n    svc.extensions = {\r\n        doc: \"file-word\",\r\n        docx: \"file-word\",\r\n        xls: \"file-excel\",\r\n        xlsx: \"file-excel\",\r\n        ppt: \"file-powerpoint\",\r\n        pptx: \"file-powerpoint\",\r\n        pdf: \"file-pdf\",\r\n        mp3: \"file-audio\",\r\n        avi: \"file-video\",\r\n        mpg: \"file-video\",\r\n        mpeg: \"file-video\",\r\n        mov: \"file-video\",\r\n        mp4: \"file-video\",\r\n        zip: \"file-archive\",\r\n        rar: \"file-archive\",\r\n        txt: \"file-text\",\r\n        html: \"file-code\",\r\n        css: \"file-code\",\r\n        xml: \"file-code\",\r\n        xsl: \"file-code\",\r\n        vcf: \"user\"\r\n    };\r\n\r\n    svc.getExtension = function(filename) {\r\n        return filename.substr(filename.lastIndexOf(\".\") + 1).toLowerCase();\r\n    };\r\n\r\n    svc.getIconClass = function getClass(filename) {\r\n        return svc.iconPrefix + (svc.extensions[svc.getExtension(filename)] || svc.defaultIcon);\r\n    };\r\n    \r\n    svc.isKnownType = function(filename) {\r\n        return svc.extensions.indexOf[svc.getExtension(filename)] !== -1;\r\n    };\r\n\r\n    svc.isImage = function(filename) {\r\n        return svc.checkImgRegEx.test(filename);\r\n    };\r\n\r\n    // not used yet, so commented out\r\n    //svc.type = function(url) {\r\n    //    if (svc.isImage(url))\r\n    //        return \"image\";\r\n    //    return \"file\";\r\n    //};\r\n\r\n    return svc;\r\n});\n\r\nangular.module(\"EavServices\")\r\n    .factory(\"historySvc\", [\"$http\", \"svcCreator\", function($http, svcCreator) { \r\n        //var eavConf = eavConfig;\r\n\r\n        // Construct a service for this specific targetGuid\r\n        return function createSvc(appId, entityId) {\r\n            var svc = {\r\n                appId: appId,\r\n                entityId: entityId\r\n            };\r\n\r\n            // When we get the list, reverse-number the results to give it a nice version number\r\n            svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                return $http.get(\"eav/entities/history\", { params: { \"appId\": svc.appId, \"entityId\": svc.entityId } })\r\n                .then(function(result) {\r\n                    var list = result.data;\r\n                        for (var i = 0; i < list.length; i++)\r\n                            list[i].VirtualVersion = list.length - i;\r\n                        return result;\r\n                    });\r\n            }));\r\n\r\n            svc.getVersionDetails = function getVersionDetails(changeId) {\r\n                return $http.get(\"eav/entities/historydetails\", { params: { \"appId\": svc.appId, \"entityId\": svc.entityId, \"changeId\": changeId } });\r\n            };\r\n\r\n            return svc;\r\n        };\r\n    }]);\n/* The main component for language inclusion\r\n * Ensure the dependencies work, that the url-schema is prepared etc.\r\n * \r\n */\r\n\r\n(function () {\r\n    angular.module(\"EavServices\")\r\n        .config([\"$translateProvider\", \"languages\", \"$translatePartialLoaderProvider\", function($translateProvider, languages, $translatePartialLoaderProvider) {\r\n            $translateProvider\r\n                .preferredLanguage(languages.currentLanguage.split(\"-\")[0])\r\n                .useSanitizeValueStrategy(\"escapeParameters\") // this is very important to allow html in the JSON files\r\n                .fallbackLanguage(languages.fallbackLanguage)\r\n                .useLoader(\"$translatePartialLoader\", {\r\n                    urlTemplate: languages.i18nRoot + \"{part}-{lang}.js\"\r\n                })\r\n                .useLoaderCache(true); // should cache json\r\n            $translatePartialLoaderProvider // these parts are always required\r\n                .addPart(\"admin\")\r\n                .addPart(\"edit\");\r\n        }])\r\n\r\n        // ensure that adding parts will load the missing files\r\n        .run([\"$rootScope\", \"$translate\", function($rootScope, $translate) {\r\n            $rootScope.$on(\"$translatePartialLoaderStructureChanged\", function() {\r\n                $translate.refresh();\r\n            });\r\n        }]);\r\n})();\n// By default, eav-controls assume that all their parameters (appId, etc.) are instantiated by the bootstrapper\r\n// but the \"root\" component must get it from the url\r\n// Since different objects could be the root object (this depends on the initial loader), the root-one must have\r\n// a connection to the Url, but only when it is the root\r\n// So the trick is to just include this file - which will provide values for the important attribute\r\n//\r\n// As of now, it only supplies\r\n// * appId\r\n(function () {\r\n    angular.module(\"InitParametersFromUrl\", [])\r\n        //#region properties\r\n        .factory(\"appId\", function () {\r\n            return getParameterByName(\"appId\");\r\n        })\r\n        .factory(\"zoneId\", function () {\r\n            return getParameterByName(\"zoneId\");\r\n        })\r\n        .factory(\"entityId\", function () {\r\n            return getParameterByName(\"entityid\");\r\n        })\r\n        .factory(\"contentTypeName\", function () {\r\n            return getParameterByName(\"contenttypename\");\r\n        })\r\n\r\n        .factory(\"pipelineId\", function () {\r\n            return getParameterByName(\"pipelineId\");\r\n        })\r\n        .factory(\"dialog\", function () {\r\n            return getParameterByName(\"dialog\");\r\n        })\r\n        //#endregion\r\n        //#region helpers / dummy objects\r\n        // This is a dummy object, because it's needed for dialogs\r\n        .factory(\"$modalInstance\", function () {\r\n            return null;\r\n        })\r\n    //#endregion\r\n    ;\r\n\r\n    function getParameterByName(name) {\r\n        if (window.$2sxc)\r\n            return window.$2sxc.urlParams.get(name);\r\n        return getParameterByNameDuplicate(name);\r\n    }\r\n\r\n    // this is a duplicate fn of the 2sxc-version, should only be used if 2sxc doesn't exist\r\n    function getParameterByNameDuplicate(name) {\r\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\r\n        var searchRx = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\", \"i\");\r\n        var results = searchRx.exec(location.search);\r\n\r\n        if (results === null) {\r\n            var hashRx = new RegExp(\"[#&]\" + name + \"=([^&#]*)\", \"i\");\r\n            results = hashRx.exec(location.hash);\r\n        }\r\n\r\n        // if nothing found, try normal URL because DNN places parameters in /key/value notation\r\n        if (results === null) {\r\n            // Otherwise try parts of the URL\r\n            var matches = window.location.pathname.match(new RegExp(\"/\" + name + \"/([^/]+)\", \"i\"));\r\n\r\n            // Check if we found anything, if we do find it, we must reverse the results so we get the \"last\" one in case there are multiple hits\r\n            if (matches !== null && matches.length > 1)\r\n                results = matches.reverse()[0];\r\n        } else\r\n            results = results[1];\r\n\r\n        return results === null ? \"\" : decodeURIComponent(results.replace(/\\+/g, \" \"));\r\n    }\r\n}());\n/*\r\n * Cleans up all kinds of texts containing non-latin characters like umlauts or romanian characters etc.\r\n * \r\n * based on http://stackoverflow.com/questions/286921/efficiently-replace-all-accented-characters-in-a-string\r\n * \r\n */\r\n\r\nangular.module(\"EavServices\")\r\n    .factory(\"latinizeText\", function() {\r\n        return function(input) {\r\n            var latinMap = { \"Á\": \"A\", \"Ă\": \"A\", \"Ắ\": \"A\", \"Ặ\": \"A\", \"Ằ\": \"A\", \"Ẳ\": \"A\", \"Ẵ\": \"A\", \"Ǎ\": \"A\", \"Â\": \"A\", \"Ấ\": \"A\", \"Ậ\": \"A\", \"Ầ\": \"A\", \"Ẩ\": \"A\", \"Ẫ\": \"A\", \"Ä\": \"Ae\", \"Ǟ\": \"A\", \"Ȧ\": \"A\", \"Ǡ\": \"A\", \"Ạ\": \"A\", \"Ȁ\": \"A\", \"À\": \"A\", \"Ả\": \"A\", \"Ȃ\": \"A\", \"Ā\": \"A\", \"Ą\": \"A\", \"Å\": \"A\", \"Ǻ\": \"A\", \"Ḁ\": \"A\", \"Ⱥ\": \"A\", \"Ã\": \"A\", \"Ꜳ\": \"AA\", \"Æ\": \"AE\", \"Ǽ\": \"AE\", \"Ǣ\": \"AE\", \"Ꜵ\": \"AO\", \"Ꜷ\": \"AU\", \"Ꜹ\": \"AV\", \"Ꜻ\": \"AV\", \"Ꜽ\": \"AY\", \"Ḃ\": \"B\", \"Ḅ\": \"B\", \"Ɓ\": \"B\", \"Ḇ\": \"B\", \"Ƀ\": \"B\", \"Ƃ\": \"B\", \"Ć\": \"C\", \"Č\": \"C\", \"Ç\": \"C\", \"Ḉ\": \"C\", \"Ĉ\": \"C\", \"Ċ\": \"C\", \"Ƈ\": \"C\", \"Ȼ\": \"C\", \"Ď\": \"D\", \"Ḑ\": \"D\", \"Ḓ\": \"D\", \"Ḋ\": \"D\", \"Ḍ\": \"D\", \"Ɗ\": \"D\", \"Ḏ\": \"D\", \"ǲ\": \"D\", \"ǅ\": \"D\", \"Đ\": \"D\", \"Ƌ\": \"D\", \"Ǳ\": \"DZ\", \"Ǆ\": \"DZ\", \"É\": \"E\", \"Ĕ\": \"E\", \"Ě\": \"E\", \"Ȩ\": \"E\", \"Ḝ\": \"E\", \"Ê\": \"E\", \"Ế\": \"E\", \"Ệ\": \"E\", \"Ề\": \"E\", \"Ể\": \"E\", \"Ễ\": \"E\", \"Ḙ\": \"E\", \"Ë\": \"E\", \"Ė\": \"E\", \"Ẹ\": \"E\", \"Ȅ\": \"E\", \"È\": \"E\", \"Ẻ\": \"E\", \"Ȇ\": \"E\", \"Ē\": \"E\", \"Ḗ\": \"E\", \"Ḕ\": \"E\", \"Ę\": \"E\", \"Ɇ\": \"E\", \"Ẽ\": \"E\", \"Ḛ\": \"E\", \"Ꝫ\": \"ET\", \"Ḟ\": \"F\", \"Ƒ\": \"F\", \"Ǵ\": \"G\", \"Ğ\": \"G\", \"Ǧ\": \"G\", \"Ģ\": \"G\", \"Ĝ\": \"G\", \"Ġ\": \"G\", \"Ɠ\": \"G\", \"Ḡ\": \"G\", \"Ǥ\": \"G\", \"Ḫ\": \"H\", \"Ȟ\": \"H\", \"Ḩ\": \"H\", \"Ĥ\": \"H\", \"Ⱨ\": \"H\", \"Ḧ\": \"H\", \"Ḣ\": \"H\", \"Ḥ\": \"H\", \"Ħ\": \"H\", \"Í\": \"I\", \"Ĭ\": \"I\", \"Ǐ\": \"I\", \"Î\": \"I\", \"Ï\": \"I\", \"Ḯ\": \"I\", \"İ\": \"I\", \"Ị\": \"I\", \"Ȉ\": \"I\", \"Ì\": \"I\", \"Ỉ\": \"I\", \"Ȋ\": \"I\", \"Ī\": \"I\", \"Į\": \"I\", \"Ɨ\": \"I\", \"Ĩ\": \"I\", \"Ḭ\": \"I\", \"Ꝺ\": \"D\", \"Ꝼ\": \"F\", \"Ᵹ\": \"G\", \"Ꞃ\": \"R\", \"Ꞅ\": \"S\", \"Ꞇ\": \"T\", \"Ꝭ\": \"IS\", \"Ĵ\": \"J\", \"Ɉ\": \"J\", \"Ḱ\": \"K\", \"Ǩ\": \"K\", \"Ķ\": \"K\", \"Ⱪ\": \"K\", \"Ꝃ\": \"K\", \"Ḳ\": \"K\", \"Ƙ\": \"K\", \"Ḵ\": \"K\", \"Ꝁ\": \"K\", \"Ꝅ\": \"K\", \"Ĺ\": \"L\", \"Ƚ\": \"L\", \"Ľ\": \"L\", \"Ļ\": \"L\", \"Ḽ\": \"L\", \"Ḷ\": \"L\", \"Ḹ\": \"L\", \"Ⱡ\": \"L\", \"Ꝉ\": \"L\", \"Ḻ\": \"L\", \"Ŀ\": \"L\", \"Ɫ\": \"L\", \"ǈ\": \"L\", \"Ł\": \"L\", \"Ǉ\": \"LJ\", \"Ḿ\": \"M\", \"Ṁ\": \"M\", \"Ṃ\": \"M\", \"Ɱ\": \"M\", \"Ń\": \"N\", \"Ň\": \"N\", \"Ņ\": \"N\", \"Ṋ\": \"N\", \"Ṅ\": \"N\", \"Ṇ\": \"N\", \"Ǹ\": \"N\", \"Ɲ\": \"N\", \"Ṉ\": \"N\", \"Ƞ\": \"N\", \"ǋ\": \"N\", \"Ñ\": \"N\", \"Ǌ\": \"NJ\", \"Ó\": \"O\", \"Ŏ\": \"O\", \"Ǒ\": \"O\", \"Ô\": \"O\", \"Ố\": \"O\", \"Ộ\": \"O\", \"Ồ\": \"O\", \"Ổ\": \"O\", \"Ỗ\": \"O\", \"Öe\": \"O\", \"Ȫ\": \"O\", \"Ȯ\": \"O\", \"Ȱ\": \"O\", \"Ọ\": \"O\", \"Ő\": \"O\", \"Ȍ\": \"O\", \"Ò\": \"O\", \"Ỏ\": \"O\", \"Ơ\": \"O\", \"Ớ\": \"O\", \"Ợ\": \"O\", \"Ờ\": \"O\", \"Ở\": \"O\", \"Ỡ\": \"O\", \"Ȏ\": \"O\", \"Ꝋ\": \"O\", \"Ꝍ\": \"O\", \"Ō\": \"O\", \"Ṓ\": \"O\", \"Ṑ\": \"O\", \"Ɵ\": \"O\", \"Ǫ\": \"O\", \"Ǭ\": \"O\", \"Ø\": \"O\", \"Ǿ\": \"O\", \"Õ\": \"O\", \"Ṍ\": \"O\", \"Ṏ\": \"O\", \"Ȭ\": \"O\", \"Ƣ\": \"OI\", \"Ꝏ\": \"OO\", \"Ɛ\": \"E\", \"Ɔ\": \"O\", \"Ȣ\": \"OU\", \"Ṕ\": \"P\", \"Ṗ\": \"P\", \"Ꝓ\": \"P\", \"Ƥ\": \"P\", \"Ꝕ\": \"P\", \"Ᵽ\": \"P\", \"Ꝑ\": \"P\", \"Ꝙ\": \"Q\", \"Ꝗ\": \"Q\", \"Ŕ\": \"R\", \"Ř\": \"R\", \"Ŗ\": \"R\", \"Ṙ\": \"R\", \"Ṛ\": \"R\", \"Ṝ\": \"R\", \"Ȑ\": \"R\", \"Ȓ\": \"R\", \"Ṟ\": \"R\", \"Ɍ\": \"R\", \"Ɽ\": \"R\", \"Ꜿ\": \"C\", \"Ǝ\": \"E\", \"Ś\": \"S\", \"Ṥ\": \"S\", \"Š\": \"S\", \"Ṧ\": \"S\", \"Ş\": \"S\", \"Ŝ\": \"S\", \"Ș\": \"S\", \"Ṡ\": \"S\", \"Ṣ\": \"S\", \"Ṩ\": \"S\", \"Ť\": \"T\", \"Ţ\": \"T\", \"Ṱ\": \"T\", \"Ț\": \"T\", \"Ⱦ\": \"T\", \"Ṫ\": \"T\", \"Ṭ\": \"T\", \"Ƭ\": \"T\", \"Ṯ\": \"T\", \"Ʈ\": \"T\", \"Ŧ\": \"T\", \"Ɐ\": \"A\", \"Ꞁ\": \"L\", \"Ɯ\": \"M\", \"Ʌ\": \"V\", \"Ꜩ\": \"TZ\", \"Ú\": \"U\", \"Ŭ\": \"U\", \"Ǔ\": \"U\", \"Û\": \"U\", \"Ṷ\": \"U\", \"Ü\": \"Ue\", \"Ǘ\": \"U\", \"Ǚ\": \"U\", \"Ǜ\": \"U\", \"Ǖ\": \"U\", \"Ṳ\": \"U\", \"Ụ\": \"U\", \"Ű\": \"U\", \"Ȕ\": \"U\", \"Ù\": \"U\", \"Ủ\": \"U\", \"Ư\": \"U\", \"Ứ\": \"U\", \"Ự\": \"U\", \"Ừ\": \"U\", \"Ử\": \"U\", \"Ữ\": \"U\", \"Ȗ\": \"U\", \"Ū\": \"U\", \"Ṻ\": \"U\", \"Ų\": \"U\", \"Ů\": \"U\", \"Ũ\": \"U\", \"Ṹ\": \"U\", \"Ṵ\": \"U\", \"Ꝟ\": \"V\", \"Ṿ\": \"V\", \"Ʋ\": \"V\", \"Ṽ\": \"V\", \"Ꝡ\": \"VY\", \"Ẃ\": \"W\", \"Ŵ\": \"W\", \"Ẅ\": \"W\", \"Ẇ\": \"W\", \"Ẉ\": \"W\", \"Ẁ\": \"W\", \"Ⱳ\": \"W\", \"Ẍ\": \"X\", \"Ẋ\": \"X\", \"Ý\": \"Y\", \"Ŷ\": \"Y\", \"Ÿ\": \"Y\", \"Ẏ\": \"Y\", \"Ỵ\": \"Y\", \"Ỳ\": \"Y\", \"Ƴ\": \"Y\", \"Ỷ\": \"Y\", \"Ỿ\": \"Y\", \"Ȳ\": \"Y\", \"Ɏ\": \"Y\", \"Ỹ\": \"Y\", \"Ź\": \"Z\", \"Ž\": \"Z\", \"Ẑ\": \"Z\", \"Ⱬ\": \"Z\", \"Ż\": \"Z\", \"Ẓ\": \"Z\", \"Ȥ\": \"Z\", \"Ẕ\": \"Z\", \"Ƶ\": \"Z\", \"Ĳ\": \"IJ\", \"Œ\": \"OE\", \"ᴀ\": \"A\", \"ᴁ\": \"AE\", \"ʙ\": \"B\", \"ᴃ\": \"B\", \"ᴄ\": \"C\", \"ᴅ\": \"D\", \"ᴇ\": \"E\", \"ꜰ\": \"F\", \"ɢ\": \"G\", \"ʛ\": \"G\", \"ʜ\": \"H\", \"ɪ\": \"I\", \"ʁ\": \"R\", \"ᴊ\": \"J\", \"ᴋ\": \"K\", \"ʟ\": \"L\", \"ᴌ\": \"L\", \"ᴍ\": \"M\", \"ɴ\": \"N\", \"ᴏ\": \"O\", \"ɶ\": \"OE\", \"ᴐ\": \"O\", \"ᴕ\": \"OU\", \"ᴘ\": \"P\", \"ʀ\": \"R\", \"ᴎ\": \"N\", \"ᴙ\": \"R\", \"ꜱ\": \"S\", \"ᴛ\": \"T\", \"ⱻ\": \"E\", \"ᴚ\": \"R\", \"ᴜ\": \"U\", \"ᴠ\": \"V\", \"ᴡ\": \"W\", \"ʏ\": \"Y\", \"ᴢ\": \"Z\", \"á\": \"a\", \"ă\": \"a\", \"ắ\": \"a\", \"ặ\": \"a\", \"ằ\": \"a\", \"ẳ\": \"a\", \"ẵ\": \"a\", \"ǎ\": \"a\", \"â\": \"a\", \"ấ\": \"a\", \"ậ\": \"a\", \"ầ\": \"a\", \"ẩ\": \"a\", \"ẫ\": \"a\", \"ä\": \"ae\", \"ǟ\": \"a\", \"ȧ\": \"a\", \"ǡ\": \"a\", \"ạ\": \"a\", \"ȁ\": \"a\", \"à\": \"a\", \"ả\": \"a\", \"ȃ\": \"a\", \"ā\": \"a\", \"ą\": \"a\", \"ᶏ\": \"a\", \"ẚ\": \"a\", \"å\": \"a\", \"ǻ\": \"a\", \"ḁ\": \"a\", \"ⱥ\": \"a\", \"ã\": \"a\", \"ꜳ\": \"aa\", \"æ\": \"ae\", \"ǽ\": \"ae\", \"ǣ\": \"ae\", \"ꜵ\": \"ao\", \"ꜷ\": \"au\", \"ꜹ\": \"av\", \"ꜻ\": \"av\", \"ꜽ\": \"ay\", \"ḃ\": \"b\", \"ḅ\": \"b\", \"ɓ\": \"b\", \"ḇ\": \"b\", \"ᵬ\": \"b\", \"ᶀ\": \"b\", \"ƀ\": \"b\", \"ƃ\": \"b\", \"ɵ\": \"o\", \"ć\": \"c\", \"č\": \"c\", \"ç\": \"c\", \"ḉ\": \"c\", \"ĉ\": \"c\", \"ɕ\": \"c\", \"ċ\": \"c\", \"ƈ\": \"c\", \"ȼ\": \"c\", \"ď\": \"d\", \"ḑ\": \"d\", \"ḓ\": \"d\", \"ȡ\": \"d\", \"ḋ\": \"d\", \"ḍ\": \"d\", \"ɗ\": \"d\", \"ᶑ\": \"d\", \"ḏ\": \"d\", \"ᵭ\": \"d\", \"ᶁ\": \"d\", \"đ\": \"d\", \"ɖ\": \"d\", \"ƌ\": \"d\", \"ı\": \"i\", \"ȷ\": \"j\", \"ɟ\": \"j\", \"ʄ\": \"j\", \"ǳ\": \"dz\", \"ǆ\": \"dz\", \"é\": \"e\", \"ĕ\": \"e\", \"ě\": \"e\", \"ȩ\": \"e\", \"ḝ\": \"e\", \"ê\": \"e\", \"ế\": \"e\", \"ệ\": \"e\", \"ề\": \"e\", \"ể\": \"e\", \"ễ\": \"e\", \"ḙ\": \"e\", \"ë\": \"e\", \"ė\": \"e\", \"ẹ\": \"e\", \"ȅ\": \"e\", \"è\": \"e\", \"ẻ\": \"e\", \"ȇ\": \"e\", \"ē\": \"e\", \"ḗ\": \"e\", \"ḕ\": \"e\", \"ⱸ\": \"e\", \"ę\": \"e\", \"ᶒ\": \"e\", \"ɇ\": \"e\", \"ẽ\": \"e\", \"ḛ\": \"e\", \"ꝫ\": \"et\", \"ḟ\": \"f\", \"ƒ\": \"f\", \"ᵮ\": \"f\", \"ᶂ\": \"f\", \"ǵ\": \"g\", \"ğ\": \"g\", \"ǧ\": \"g\", \"ģ\": \"g\", \"ĝ\": \"g\", \"ġ\": \"g\", \"ɠ\": \"g\", \"ḡ\": \"g\", \"ᶃ\": \"g\", \"ǥ\": \"g\", \"ḫ\": \"h\", \"ȟ\": \"h\", \"ḩ\": \"h\", \"ĥ\": \"h\", \"ⱨ\": \"h\", \"ḧ\": \"h\", \"ḣ\": \"h\", \"ḥ\": \"h\", \"ɦ\": \"h\", \"ẖ\": \"h\", \"ħ\": \"h\", \"ƕ\": \"hv\", \"í\": \"i\", \"ĭ\": \"i\", \"ǐ\": \"i\", \"î\": \"i\", \"ï\": \"i\", \"ḯ\": \"i\", \"ị\": \"i\", \"ȉ\": \"i\", \"ì\": \"i\", \"ỉ\": \"i\", \"ȋ\": \"i\", \"ī\": \"i\", \"į\": \"i\", \"ᶖ\": \"i\", \"ɨ\": \"i\", \"ĩ\": \"i\", \"ḭ\": \"i\", \"ꝺ\": \"d\", \"ꝼ\": \"f\", \"ᵹ\": \"g\", \"ꞃ\": \"r\", \"ꞅ\": \"s\", \"ꞇ\": \"t\", \"ꝭ\": \"is\", \"ǰ\": \"j\", \"ĵ\": \"j\", \"ʝ\": \"j\", \"ɉ\": \"j\", \"ḱ\": \"k\", \"ǩ\": \"k\", \"ķ\": \"k\", \"ⱪ\": \"k\", \"ꝃ\": \"k\", \"ḳ\": \"k\", \"ƙ\": \"k\", \"ḵ\": \"k\", \"ᶄ\": \"k\", \"ꝁ\": \"k\", \"ꝅ\": \"k\", \"ĺ\": \"l\", \"ƚ\": \"l\", \"ɬ\": \"l\", \"ľ\": \"l\", \"ļ\": \"l\", \"ḽ\": \"l\", \"ȴ\": \"l\", \"ḷ\": \"l\", \"ḹ\": \"l\", \"ⱡ\": \"l\", \"ꝉ\": \"l\", \"ḻ\": \"l\", \"ŀ\": \"l\", \"ɫ\": \"l\", \"ᶅ\": \"l\", \"ɭ\": \"l\", \"ł\": \"l\", \"ǉ\": \"lj\", \"ſ\": \"s\", \"ẜ\": \"s\", \"ẛ\": \"s\", \"ẝ\": \"s\", \"ḿ\": \"m\", \"ṁ\": \"m\", \"ṃ\": \"m\", \"ɱ\": \"m\", \"ᵯ\": \"m\", \"ᶆ\": \"m\", \"ń\": \"n\", \"ň\": \"n\", \"ņ\": \"n\", \"ṋ\": \"n\", \"ȵ\": \"n\", \"ṅ\": \"n\", \"ṇ\": \"n\", \"ǹ\": \"n\", \"ɲ\": \"n\", \"ṉ\": \"n\", \"ƞ\": \"n\", \"ᵰ\": \"n\", \"ᶇ\": \"n\", \"ɳ\": \"n\", \"ñ\": \"n\", \"ǌ\": \"nj\", \"ó\": \"o\", \"ŏ\": \"o\", \"ǒ\": \"o\", \"ô\": \"o\", \"ố\": \"o\", \"ộ\": \"o\", \"ồ\": \"o\", \"ổ\": \"o\", \"ỗ\": \"o\", \"ö\": \"oe\", \"ȫ\": \"o\", \"ȯ\": \"o\", \"ȱ\": \"o\", \"ọ\": \"o\", \"ő\": \"o\", \"ȍ\": \"o\", \"ò\": \"o\", \"ỏ\": \"o\", \"ơ\": \"o\", \"ớ\": \"o\", \"ợ\": \"o\", \"ờ\": \"o\", \"ở\": \"o\", \"ỡ\": \"o\", \"ȏ\": \"o\", \"ꝋ\": \"o\", \"ꝍ\": \"o\", \"ⱺ\": \"o\", \"ō\": \"o\", \"ṓ\": \"o\", \"ṑ\": \"o\", \"ǫ\": \"o\", \"ǭ\": \"o\", \"ø\": \"o\", \"ǿ\": \"o\", \"õ\": \"o\", \"ṍ\": \"o\", \"ṏ\": \"o\", \"ȭ\": \"o\", \"ƣ\": \"oi\", \"ꝏ\": \"oo\", \"ɛ\": \"e\", \"ᶓ\": \"e\", \"ɔ\": \"o\", \"ᶗ\": \"o\", \"ȣ\": \"ou\", \"ṕ\": \"p\", \"ṗ\": \"p\", \"ꝓ\": \"p\", \"ƥ\": \"p\", \"ᵱ\": \"p\", \"ᶈ\": \"p\", \"ꝕ\": \"p\", \"ᵽ\": \"p\", \"ꝑ\": \"p\", \"ꝙ\": \"q\", \"ʠ\": \"q\", \"ɋ\": \"q\", \"ꝗ\": \"q\", \"ŕ\": \"r\", \"ř\": \"r\", \"ŗ\": \"r\", \"ṙ\": \"r\", \"ṛ\": \"r\", \"ṝ\": \"r\", \"ȑ\": \"r\", \"ɾ\": \"r\", \"ᵳ\": \"r\", \"ȓ\": \"r\", \"ṟ\": \"r\", \"ɼ\": \"r\", \"ᵲ\": \"r\", \"ᶉ\": \"r\", \"ɍ\": \"r\", \"ɽ\": \"r\", \"ↄ\": \"c\", \"ꜿ\": \"c\", \"ɘ\": \"e\", \"ɿ\": \"r\", \"ß\": \"ss\", \"ś\": \"s\", \"ṥ\": \"s\", \"š\": \"s\", \"ṧ\": \"s\", \"ş\": \"s\", \"ŝ\": \"s\", \"ș\": \"s\", \"ṡ\": \"s\", \"ṣ\": \"s\", \"ṩ\": \"s\", \"ʂ\": \"s\", \"ᵴ\": \"s\", \"ᶊ\": \"s\", \"ȿ\": \"s\", \"ɡ\": \"g\", \"ᴑ\": \"o\", \"ᴓ\": \"o\", \"ᴝ\": \"u\", \"ť\": \"t\", \"ţ\": \"t\", \"ṱ\": \"t\", \"ț\": \"t\", \"ȶ\": \"t\", \"ẗ\": \"t\", \"ⱦ\": \"t\", \"ṫ\": \"t\", \"ṭ\": \"t\", \"ƭ\": \"t\", \"ṯ\": \"t\", \"ᵵ\": \"t\", \"ƫ\": \"t\", \"ʈ\": \"t\", \"ŧ\": \"t\", \"ᵺ\": \"th\", \"ɐ\": \"a\", \"ᴂ\": \"ae\", \"ǝ\": \"e\", \"ᵷ\": \"g\", \"ɥ\": \"h\", \"ʮ\": \"h\", \"ʯ\": \"h\", \"ᴉ\": \"i\", \"ʞ\": \"k\", \"ꞁ\": \"l\", \"ɯ\": \"m\", \"ɰ\": \"m\", \"ᴔ\": \"oe\", \"ɹ\": \"r\", \"ɻ\": \"r\", \"ɺ\": \"r\", \"ⱹ\": \"r\", \"ʇ\": \"t\", \"ʌ\": \"v\", \"ʍ\": \"w\", \"ʎ\": \"y\", \"ꜩ\": \"tz\", \"ú\": \"u\", \"ŭ\": \"u\", \"ǔ\": \"u\", \"û\": \"u\", \"ṷ\": \"u\", \"ü\": \"ue\", \"ǘ\": \"u\", \"ǚ\": \"u\", \"ǜ\": \"u\", \"ǖ\": \"u\", \"ṳ\": \"u\", \"ụ\": \"u\", \"ű\": \"u\", \"ȕ\": \"u\", \"ù\": \"u\", \"ủ\": \"u\", \"ư\": \"u\", \"ứ\": \"u\", \"ự\": \"u\", \"ừ\": \"u\", \"ử\": \"u\", \"ữ\": \"u\", \"ȗ\": \"u\", \"ū\": \"u\", \"ṻ\": \"u\", \"ų\": \"u\", \"ᶙ\": \"u\", \"ů\": \"u\", \"ũ\": \"u\", \"ṹ\": \"u\", \"ṵ\": \"u\", \"ᵫ\": \"ue\", \"ꝸ\": \"um\", \"ⱴ\": \"v\", \"ꝟ\": \"v\", \"ṿ\": \"v\", \"ʋ\": \"v\", \"ᶌ\": \"v\", \"ⱱ\": \"v\", \"ṽ\": \"v\", \"ꝡ\": \"vy\", \"ẃ\": \"w\", \"ŵ\": \"w\", \"ẅ\": \"w\", \"ẇ\": \"w\", \"ẉ\": \"w\", \"ẁ\": \"w\", \"ⱳ\": \"w\", \"ẘ\": \"w\", \"ẍ\": \"x\", \"ẋ\": \"x\", \"ᶍ\": \"x\", \"ý\": \"y\", \"ŷ\": \"y\", \"ÿ\": \"y\", \"ẏ\": \"y\", \"ỵ\": \"y\", \"ỳ\": \"y\", \"ƴ\": \"y\", \"ỷ\": \"y\", \"ỿ\": \"y\", \"ȳ\": \"y\", \"ẙ\": \"y\", \"ɏ\": \"y\", \"ỹ\": \"y\", \"ź\": \"z\", \"ž\": \"z\", \"ẑ\": \"z\", \"ʑ\": \"z\", \"ⱬ\": \"z\", \"ż\": \"z\", \"ẓ\": \"z\", \"ȥ\": \"z\", \"ẕ\": \"z\", \"ᵶ\": \"z\", \"ᶎ\": \"z\", \"ʐ\": \"z\", \"ƶ\": \"z\", \"ɀ\": \"z\", \"ﬀ\": \"ff\", \"ﬃ\": \"ffi\", \"ﬄ\": \"ffl\", \"ﬁ\": \"fi\", \"ﬂ\": \"fl\", \"ĳ\": \"ij\", \"œ\": \"oe\", \"ﬆ\": \"st\", \"ₐ\": \"a\", \"ₑ\": \"e\", \"ᵢ\": \"i\", \"ⱼ\": \"j\", \"ₒ\": \"o\", \"ᵣ\": \"r\", \"ᵤ\": \"u\", \"ᵥ\": \"v\", \"ₓ\": \"x\" };\r\n            return input.replace(/[^A-Za-z0-9\\[\\] ]/g, function(a) { return latinMap[a] || a; });\r\n        };\r\n    });\r\n\n// metadata\r\n// retrieves metadata for an entity or an attribute\r\n\r\nangular.module(\"EavServices\")\r\n    /// Management actions which are rather advanced metadata kind of actions\r\n    .factory(\"metadataSvc\", [\"$http\", \"appId\", function($http, appId) {\r\n        var svc = {};\r\n\r\n        // Find all items assigned to a GUID\r\n        svc.getMetadata = function getMetadata(assignedToId, keyGuid, contentTypeName) {\r\n            return $http.get(\"eav/metadata/getassignedentities\", {\r\n                params: {\r\n                    appId: appId,\r\n                    assignmentObjectTypeId: assignedToId,\r\n                    keyType: \"guid\",\r\n                    key: keyGuid,\r\n                    contentType: contentTypeName\r\n                }\r\n            });\r\n        };\r\n        return svc;\r\n    }]);\n\r\nangular.module(\"EavServices\")\r\n    .factory(\"permissionsSvc\", [\"$http\", \"eavConfig\", \"entitiesSvc\", \"metadataSvc\", \"svcCreator\", \"contentTypeSvc\", function($http, eavConfig, entitiesSvc, metadataSvc, svcCreator, contentTypeSvc) {\r\n        var eavConf = eavConfig;\r\n\r\n        // Construct a service for this specific targetGuid\r\n        return function createSvc(appId, permissionTargetGuid) {\r\n            var svc = {\r\n                PermissionTargetGuid: permissionTargetGuid,\r\n                ctName: \"PermissionConfiguration\",\r\n                ctId: 0,\r\n                EntityAssignment: eavConf.metadataOfEntity,\r\n                ctSvc: contentTypeSvc(appId)\r\n            };\r\n\r\n            svc = angular.extend(svc, svcCreator.implementLiveList(function getAll() {\r\n                // todo: refactor this - get out of the eavmanagemnetsvc\r\n                return metadataSvc.getMetadata(svc.EntityAssignment, svc.PermissionTargetGuid, svc.ctName).then(svc.updateLiveAll);\r\n            }));\r\n\r\n            // 2016-02-14 2dm commented out, don't think the ctId is ever used...\r\n            // Get ID of this content-type \r\n            svc.ctSvc.getDetails(svc.ctName).then(function (result) {\r\n                svc.ctId = result.data.Id; // 2016-02-14 previously AttributeSetId;\r\n            });\r\n\r\n            // delete, then reload\r\n            svc.delete = function del(id) {\r\n                return entitiesSvc.delete(svc.ctName, id)\r\n                    .then(svc.liveListReload);\r\n            };\r\n            return svc;\r\n        };\r\n    }]);\n// PipelineService provides an interface to the Server Backend storing Pipelines and their Pipeline Parts\r\n\r\nangular.module(\"EavServices\")\r\n    .factory(\"pipelineService\", [\"$resource\", \"$q\", \"$filter\", \"eavConfig\", \"$http\", \"contentTypeSvc\", \"metadataSvc\", \"eavAdminDialogs\", function ($resource, $q, $filter, eavConfig, $http, contentTypeSvc, metadataSvc, eavAdminDialogs) {\r\n        \"use strict\";\r\n        var svc = {};\r\n        // Web API Service\r\n        svc.pipelineResource = $resource(\"eav/PipelineDesigner/:action\");\r\n        svc.entitiesResource = $resource(\"eav/Entities/:action\");\r\n\r\n        // 2016-02-18 2dm - not needed?\r\n        // svc.dataPipelineAttributeSetId = 0;\r\n        svc.appId = 0;\r\n\r\n        // Get the Definition of a DataSource\r\n        svc.getDataSourceDefinitionProperty = function (model, dataSource) {\r\n        \tvar definition = $filter(\"filter\")(model.InstalledDataSources, function (d) { return d.PartAssemblyAndType == dataSource.PartAssemblyAndType; })[0];\r\n        \tif (!definition)\r\n        \t\tthrow \"DataSource Definition not found: \" + dataSource.PartAssemblyAndType;\r\n        \treturn definition;\r\n        };\r\n\r\n        // todo refactor: why do we have 2 methods with same name?\r\n        // Extend Pipeline-Model retrieved from the Server\r\n        var postProcessDataSources = function(model) {\r\n            // Append Out-DataSource for the UI\r\n            model.DataSources.push({\r\n                Name: eavConfig.pipelineDesigner.outDataSource.name,\r\n                Description: eavConfig.pipelineDesigner.outDataSource.description,\r\n                EntityGuid: \"Out\",\r\n                PartAssemblyAndType: eavConfig.pipelineDesigner.outDataSource.className,\r\n                VisualDesignerData: eavConfig.pipelineDesigner.outDataSource.visualDesignerData,\r\n                ReadOnly: true\r\n            });\r\n\r\n            // Extend each DataSource with Definition-Property and ReadOnly Status\r\n            angular.forEach(model.DataSources, function(dataSource) {\r\n                dataSource.Definition = function() { return svc.getDataSourceDefinitionProperty(model, dataSource); };\r\n                dataSource.ReadOnly = dataSource.ReadOnly || !model.Pipeline.AllowEdit;\r\n            });\r\n        };\r\n\r\n        angular.extend(svc, { \r\n            \r\n            // get a Pipeline with Pipeline Info with Pipeline Parts and Installed DataSources\r\n            getPipeline: function(pipelineEntityId) {\r\n                var deferred = $q.defer();\r\n\r\n                var getPipeline = svc.pipelineResource.get({ action: \"GetPipeline\", id: pipelineEntityId, appId: svc.appId });\r\n                var getInstalledDataSources = svc.pipelineResource.query({ action: \"GetInstalledDataSources\" });\r\n\r\n                // Join and modify retrieved Data\r\n                $q.all([getPipeline.$promise, getInstalledDataSources.$promise]).then(function(results) {\r\n                    var model = JSON.parse(angular.toJson(results[0])); // workaround to remove AngularJS Promise from the result-Objects\r\n                    model.InstalledDataSources = JSON.parse(angular.toJson(results[1]));\r\n\r\n                    // Init new Pipeline Object\r\n                    if (!pipelineEntityId) {\r\n                        model.Pipeline = {\r\n                            AllowEdit: \"True\"\r\n                        };\r\n                    }\r\n\r\n                    // Add Out-DataSource for the UI\r\n                    model.InstalledDataSources.push({\r\n                        PartAssemblyAndType: eavConfig.pipelineDesigner.outDataSource.className,\r\n                        ClassName: eavConfig.pipelineDesigner.outDataSource.className,\r\n                        In: eavConfig.pipelineDesigner.outDataSource.in,\r\n                        Out: null,\r\n                        allowNew: false\r\n                    });\r\n\r\n                    postProcessDataSources(model);\r\n\r\n                    deferred.resolve(model);\r\n                }, function(reason) {\r\n                    deferred.reject(reason);\r\n                });\r\n\r\n                return deferred.promise;\r\n            },\r\n            // Ensure Model has all DataSources and they're linked to their Definition-Object\r\n            postProcessDataSources: function(model) {\r\n                // stop Post-Process if the model already contains the Out-DataSource\r\n                if ($filter(\"filter\")(model.DataSources, function(d) { return d.EntityGuid == \"Out\"; })[0])\r\n                    return;\r\n\r\n                postProcessDataSources(model);\r\n            },\r\n            // Get a JSON for a DataSource with Definition-Property\r\n            getNewDataSource: function(model, dataSourceBase) {\r\n                return {\r\n                    Definition: function() { return svc.getDataSourceDefinitionProperty(model, dataSourceBase); }\r\n                };\r\n            },\r\n            // Save whole Pipline\r\n            savePipeline: function(pipeline, dataSources) {\r\n                if (!svc.appId)\r\n                    return $q.reject(\"appId must be set to save a Pipeline\");\r\n\r\n                // Remove some Properties from the DataSource before Saving\r\n                var dataSourcesPrepared = [];\r\n                angular.forEach(dataSources, function(dataSource) {\r\n                    var dataSourceClone = angular.copy(dataSource);\r\n                    delete dataSourceClone.ReadOnly;\r\n                    dataSourcesPrepared.push(dataSourceClone);\r\n                });\r\n\r\n                return svc.pipelineResource.save({\r\n                    action: \"SavePipeline\",\r\n                    appId: svc.appId,\r\n                    Id: pipeline.EntityId /*id later EntityId */\r\n                }, { pipeline: pipeline, dataSources: dataSourcesPrepared }).$promise;\r\n            },\r\n            // clone a whole Pipeline\r\n            clonePipeline: function(pipelineEntityId) {\r\n                return svc.pipelineResource.get({ action: \"ClonePipeline\", appId: svc.appId, Id: pipelineEntityId }).$promise;\r\n            },\r\n\r\n\r\n            // Get the URL to configure a DataSource\r\n            editDataSourcePart: function(dataSource) {\r\n                var dataSourceFullName = $filter(\"typename\")(dataSource.PartAssemblyAndType, \"classFullName\");\r\n                var contentTypeName = \"|Config \" + dataSourceFullName; // todo refactor centralize\r\n                var assignmentObjectTypeId = 4; // todo refactor centralize\r\n                var keyGuid = dataSource.EntityGuid;\r\n\r\n                // Query for existing Entity\r\n                metadataSvc.getMetadata(assignmentObjectTypeId, keyGuid, contentTypeName).then(function (result) { \r\n                    var success = result.data;\r\n                    if (success.length) // Edit existing Entity\r\n                        eavAdminDialogs.openItemEditWithEntityId(success[0].Id);\r\n                    else { // Create new Entity\r\n                        var items = [{\r\n                                ContentTypeName: contentTypeName,\r\n                                Metadata: {\r\n                                    TargetType: assignmentObjectTypeId,\r\n                                    KeyType: \"guid\",\r\n                                    Key: keyGuid\r\n                                }}];\r\n                        eavAdminDialogs.openEditItems(items);\r\n                    }\r\n                });\r\n            }\r\n\r\n        });\r\n\r\n        angular.extend(svc, {\r\n            // Query the Data of a Pipeline\r\n            queryPipeline: function (id) {\r\n                return svc.pipelineResource.get({ action: \"QueryPipeline\", appId: svc.appId, id: id }).$promise;\r\n            },\r\n            // set appId and init some dynamic configurations\r\n            setAppId: function (newAppId) {\r\n                svc.appId = newAppId;\r\n            },\r\n\r\n            // 2016-01-14 2dm - commenting out completely, as the getPipelineUrl is probably not used any more\r\n            // Init some Content Types, currently only used for getPipelineUrl('new', ...)\r\n            //initContentTypes: function initContentTypes() {\r\n            //    return contentTypeSvc(svc.appId).getDetails(\"DataPipeline\").then(function (result) {\r\n            //        svc.dataPipelineAttributeSetId = result.data.Id; // 2016-02-14 previously AttributeSetId;\r\n            //    });\r\n            //},\r\n\r\n\r\n            // Get all Pipelines of current App\r\n            getPipelines: function () {\r\n                return svc.entitiesResource.query({ action: \"GetEntities\", appId: svc.appId, contentType: \"DataPipeline\" });\r\n            },\r\n            // Delete a Pipeline on current App\r\n            deletePipeline: function (id) {\r\n                return svc.pipelineResource.get({ action: \"DeletePipeline\", appId: svc.appId, id: id }).$promise;\r\n            }\r\n        });\r\n\r\n        return svc;\r\n    }]);\n/*  this file contains the svcCreator - a helper to quickly create services\r\n */\r\n\r\nangular.module(\"EavServices\")\r\n    // This is a helper-factory to create services which manage one live list\r\n    // check examples with the permissions-service or the content-type-service how we use it\r\n    .factory(\"svcCreator\", [\"toastr\", \"$translate\", \"$timeout\", function (toastr, $translate, $timeout) {\r\n        var creator = {};\r\n\r\n        // construct a object which has liveListCache, liveListReload(), liveListReset(),  \r\n        creator.implementLiveList = function (getLiveList, disableToastr) {\r\n            var t = {};\r\n            t.disableToastr = !!disableToastr;\r\n            t.liveListCache = [];                   // this is the cached list\r\n            t.liveListCache.isLoaded = false;\r\n\r\n            t.liveList = function getAllLive() {\r\n                if (t.liveListCache.length === 0)\r\n                    t.liveListReload();\r\n                return t.liveListCache;\r\n            };\r\n\r\n            // use a promise-result to re-fill the live list of all items, return the promise again\r\n            t._liveListUpdateWithResult = function updateLiveAll(result) {\r\n                if (t.msg.isOpened)\r\n                    toastr.clear(t.msg);\r\n                else {\r\n                    $timeout(300).then(function() {\r\n                            toastr.clear(t.msg);\r\n                        }\r\n                    );\r\n                }\r\n                t.liveListCache.length = 0; // clear\r\n                for (var i = 0; i < result.data.length; i++)\r\n                    t.liveListCache.push(result.data[i]);\r\n                t.liveListCache.isLoaded = true;\r\n                return result;\r\n            };\r\n\r\n            t.liveListSourceRead = getLiveList;\r\n\r\n            t.liveListReload = function getAll() {\r\n                // show loading - must use the promise-mode because this may be used early before the language has arrived\r\n                $translate(\"General.Messages.Loading\").then(function(msg) {\r\n                    t.msg = toastr.info(msg);\r\n                });\r\n                return t.liveListSourceRead()\r\n                    .then(t._liveListUpdateWithResult);\r\n            };\r\n\r\n            t.liveListReset = function resetList() {\r\n                t.liveListCache = [];\r\n            };\r\n\r\n            return t;\r\n        };\r\n        return creator;\r\n\r\n    }])\r\n\r\n;\n\r\nangular.module(\"EavServices\")\r\n    // the config is important to ensure our toaster has a common setup\r\n    .config([\"toastrConfig\", function(toastrConfig) {\r\n        angular.extend(toastrConfig, {\r\n            autoDismiss: false,\r\n            containerId: \"toast-container\",\r\n            maxOpened: 5, // def is 0    \r\n            newestOnTop: true,\r\n            positionClass: \"toast-top-right\",\r\n            preventDuplicates: false,\r\n            preventOpenDuplicates: false,\r\n            target: \"body\"\r\n        });\r\n    }])\r\n\r\n    .factory(\"toastrWithHttpErrorHandling\", [\"toastr\", function (toastr) {\r\n        toastr.originalError = toastr.error;\r\n        toastr.error = function errorWithHttpErrorDisplay(messageOrHttpError, title, optionsOverride) {\r\n            var message;\r\n            // test whether bodyOrError is an Error from Web API\r\n            if (messageOrHttpError && messageOrHttpError.data && messageOrHttpError.data.Message) {\r\n                message = messageOrHttpError.data.Message;\r\n                if (messageOrHttpError.data.ExceptionMessage)\r\n                    message += \"\\n\" + messageOrHttpError.data.ExceptionMessage;\r\n            } else\r\n                message = messageOrHttpError;\r\n\r\n            toastr.originalError(message, title, optionsOverride);\r\n        };\r\n        return toastr;\r\n    }])\r\n\r\n    \r\n    .factory(\"saveToastr\", [\"toastr\", \"$translate\", function (toastr, $translate) {\r\n        function saveWithToaster(promise) {\r\n            // todo: replace all this with a single-line calling the promise-toaster below...\r\n            // ? return saveWithToaster(promise, \"Message.Saving\", \"Message.Saved\", \"Message.ErrorWhileSaving\", null, 3000, null);\r\n                var saving = toastr.info($translate.instant(\"Message.Saving\"));\r\n                return promise.then(function(result) {\r\n                    toastr.clear(saving);\r\n                    toastr.success($translate.instant(\"Message.Saved\"), { timeOut: 3000 });\r\n                    return result;\r\n                }, function errorWhileSaving(result) {\r\n                    toastr.clear(saving);\r\n                    toastr.error($translate.instant(\"Message.ErrorWhileSaving\"));\r\n                    return result;\r\n                });\r\n            }\r\n\r\n            return saveWithToaster;\r\n    }])\r\n\r\n    .factory(\"promiseToastr\", [\"toastrWithHttpErrorHandling\", \"$translate\", function (toastrWithHttpErrorHandling, $translate) {\r\n        function saveWithToaster(promise, keyInfo, keyOk, keyError, durInfo, durOk, durError) {\r\n            var toastr = toastrWithHttpErrorHandling;\r\n            var saving = toastr.info($translate.instant(keyInfo));\r\n            return promise.then(function (result) {\r\n                toastr.clear(saving);\r\n                toastr.success($translate.instant(keyOk), { timeOut: durOk || 1000 });\r\n                return result;\r\n            }, function errorWhileSaving(result) {\r\n                toastr.clear(saving);\r\n                toastr.error(result, $translate.instant(keyError));\r\n                return result;\r\n            });\r\n        }\r\n\r\n        return saveWithToaster;\r\n    }])\r\n;\nangular.module(\"eavTemplates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"content-import-export/content-export.html\",\"\\r\\n<div class=\\\"modal-header\\\">\\r\\n    <button class=\\\"btn btn-default btn-square btn-subtle pull-right\\\" type=\\\"button\\\" icon=\\\"remove\\\" ng-click=\\\"vm.close()\\\"></button>\\r\\n    <h3 class=\\\"modal-title\\\" translate=\\\"Content.Export.Title\\\">cc</h3>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <div translate=\\\"Content.Export.Help\\\"></div>\\r\\n    <formly-form form=\\\"vm.form\\\" model=\\\"vm.formValues\\\" fields=\\\"vm.formFields\\\">\\r\\n    </formly-form>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary pull-left\\\" ng-click=\\\"vm.exportContent()\\\" translate=\\\"Content.Export.Commands.Export\\\"></button>\\r\\n</div>\");\n$templateCache.put(\"content-import-export/content-import.html\",\"<div ng-click=\\\"vm.debug.autoEnableAsNeeded($event)\\\">\\r\\n    <!-- HEADER -->\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"btn btn-default btn-square btn-subtle pull-right\\\" type=\\\"button\\\" icon=\\\"remove\\\" ng-click=\\\"vm.close()\\\"></button>\\r\\n        <h3 class=\\\"modal-title\\\"><span  translate=\\\"Content.Import.Title\\\"></span> <span ng-show=\\\"vm.viewStateSelected > 0\\\" translate=\\\"Content.Import.TitleSteps\\\" translate-values=\\\"{step: vm.viewStateSelected}\\\"></span></h3>\\r\\n    </div>\\r\\n    <!-- END HEADER -->\\r\\n\\r\\n    <div ng-switch=\\\"vm.viewStateSelected\\\">\\r\\n\\r\\n        <!-- FORM -->\\r\\n        <div ng-switch-when=\\\"1\\\">\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div translate=\\\"Content.Import.Help\\\"></div>\\r\\n                <formly-form form=\\\"vm.form\\\" model=\\\"vm.formValues\\\" fields=\\\"vm.formFields\\\"></formly-form>\\r\\n                <div class=\\\"text-warning\\\" translate=\\\"Content.Import.Messages.BackupContentBefore\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary pull-left\\\" ng-click=\\\"vm.evaluateContent()\\\" ng-disabled=\\\"!vm.formValues.File || !vm.formValues.File.filename\\\" translate=\\\"Content.Import.Commands.Preview\\\"></button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- END FORM -->\\r\\n\\r\\n\\r\\n        <!-- WAITING -->\\r\\n        <div ng-switch-when=\\\"0\\\">\\r\\n            <div class=\\\"modal-body\\\"> {{\\'Content.Import.Messages.WaitingForResponse\\' | translate}}\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- END WAITING -->\\r\\n\\r\\n\\r\\n        <!-- EVALUATION RESULT -->\\r\\n        <div ng-switch-when=\\\"2\\\">\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <!-- DETAILS / STATISTICS -->\\r\\n                <div ng-if=\\\"vm.evaluationResult.Succeeded\\\">\\r\\n                    <h4 translate=\\\"Content.Import.Evaluation.Detail.Title\\\" translate-values=\\\"{filename: vm.formValues.File.filename}\\\"></h4>\\r\\n                    <h5 translate=\\\"Content.Import.Evaluation.Detail.File.Title\\\"></h5>\\r\\n                    <ul>\\r\\n                        <li translate=\\\"Content.Import.Evaluation.Detail.File.ElementCount\\\" translate-values=\\\"{count: vm.evaluationResult.Detail.DocumentElementsCount}\\\"></li>\\r\\n                        <li translate=\\\"Content.Import.Evaluation.Detail.File.LanguageCount\\\" translate-values=\\\"{count: vm.evaluationResult.Detail.LanguagesInDocumentCount}\\\"></li>\\r\\n                        <li translate=\\\"Content.Import.Evaluation.Detail.File.Attributes\\\" translate-values=\\\"{count: vm.evaluationResult.Detail.AttributeNamesInDocument.length, attributes: vm.evaluationResult.Detail.AttributeNamesInDocument.join(\\', \\')}\\\"></li>\\r\\n                    </ul>\\r\\n                    <h5 translate=\\\"Content.Import.Evaluation.Detail.Entities.Title\\\"></h5>\\r\\n                    <ul>\\r\\n                        <li translate=\\\"Content.Import.Evaluation.Detail.Entities.Create\\\" translate-values=\\\"{count: vm.evaluationResult.Detail.AmountOfEntitiesCreated}\\\"></li>\\r\\n                        <li translate=\\\"Content.Import.Evaluation.Detail.Entities.Update\\\" translate-values=\\\"{count: vm.evaluationResult.Detail.AmountOfEntitiesUpdated}\\\"></li>\\r\\n                        <li translate=\\\"Content.Import.Evaluation.Detail.Entities.Delete\\\" translate-values=\\\"{count: vm.evaluationResult.Detail.AmountOfEntitiesDeleted}\\\"></li>\\r\\n                        <li translate=\\\"Content.Import.Evaluation.Detail.Entities.AttributesIgnored\\\" translate-values=\\\"{count: vm.evaluationResult.Detail.AttributeNamesNotImported.length, attributes: vm.evaluationResult.Detail.AttributeNamesNotImported.join(\\', \\')}\\\"></li>\\r\\n                    </ul>\\r\\n                    <div class=\\\"text-warning\\\" translate=\\\"Content.Import.Messages.ImportCanTakeSomeTime\\\"></div>\\r\\n                </div>\\r\\n                <!-- END DETAILS / STATISTICS -->\\r\\n                <!-- ERRORS -->\\r\\n                <div ng-if=\\\"!vm.evaluationResult.Succeeded\\\">\\r\\n                    <h4 translate=\\\"Content.Import.Evaluation.Error.Title\\\" translate-values=\\\"{filename: vm.formValues.File.filename}\\\"></h4>\\r\\n                    <ul>\\r\\n                        <li ng-repeat=\\\"error in vm.evaluationResult.Detail\\\">\\r\\n                            <div><span translate=\\\"Content.Import.Evaluation.Error.Codes.{{error.ErrorCode}}\\\"></span></div>\\r\\n                            <div ng-if=\\\"error.ErrorDetail\\\"><i translate=\\\"Content.Import.Evaluation.Error.Detail\\\" translate-values=\\\"{detail: error.ErrorDetail}\\\"></i>\\r\\n                            </div>\\r\\n                            <div ng-if=\\\"error.LineNumber\\\"><i translate=Content.Import.Evaluation.Error.LineNumber\\\" translate-values=\\\"{number: error.LineNumber}\\\"></i>\\r\\n                            </div>\\r\\n                            <div ng-if=\\\"error.LineDetail\\\"><i translate=\\\"Content.Import.Evaluation.Error.LineDetail\\\" translate-values=\\\"{detail: error.LineDetail}\\\"></i>\\r\\n                            </div>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n                <!-- END ERRORS -->\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn pull-left\\\" ng-click=\\\"vm.back()\\\" icon=\\\"arrow-left\\\"></button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default pull-left\\\" ng-click=\\\"vm.importContent()\\\" translate=\\\"Content.Import.Commands.Import\\\" ng-disabled=\\\"!vm.evaluationResult.Succeeded\\\"></button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- END EVALUATION RESULT -->\\r\\n\\r\\n\\r\\n        <!-- IMPORT RESULT -->\\r\\n        <div ng-switch-when=\\\"3\\\">\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <span ng-show=\\\"vm.importResult.Succeeded\\\" translate=\\\"Content.Import.Messages.ImportSucceeded\\\"></span>\\r\\n                <span ng-hide=\\\"vm.importResult.Succeeded\\\" translate=\\\"Content.Import.Messages.ImportFailed\\\"></span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- END IMPORT RESULT -->\\r\\n\\r\\n        <div ng-if=\\\"vm.debug.on\\\">\\r\\n            <h3>Debug infos</h3>\\r\\n            <pre>{{vm.formValues | json}}</pre>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"content-items/content-edit.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default btn-subtle\\\" ng-click=\\\"vm.history()\\\">\\r\\n        <span class=\\\"glyphicon glyphicon-time\\\"> history / todo </span>\\r\\n    </button>\\r\\n    <h3 class=\\\"modal-title\\\">Edit / New Content</h3>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal-body\\\">\\r\\n    this is where the edit appears. Would edit entity {{vm.entityId}} or add a {{vm.contentType}} - depending on the mode: {{vm.mode}}\\r\\n    <h3>Use cases</h3>\\r\\n    <ol>\\r\\n        <li>Edit an existing entity with ID</li>\\r\\n        <li>Create a new entity of a certaint content-type, just save and done (like from a \\\"new\\\" button without content-group)</li>\\r\\n        <li>Create a new entity of a certain type and assign it to a metadata thing (guid, int, string)</li>\\r\\n\\r\\n        <li>Create a new entity and put it into a content-group at the right place</li>\\r\\n        <li>Edit content-group: item + presentation </li>\\r\\n        <li>Edit multiple IDs/or new/mix: Edit multiple items with IDs</li>\\r\\n    </ol>\\r\\n\\r\\n    init of 1 edit\\r\\n    - entity-id in storage\\r\\n    - new-type + optional: assignment-id + assignment-type\\r\\n\\r\\n    - array of the above\\r\\n    --- [{id 17}, {type: \\\"person\\\"}, {type: person, asstype: 4, target: 0205}]\\r\\n\\r\\n    - content-group\\r\\n</div>\\r\\n\");\n$templateCache.put(\"content-items/content-items-agnostic.html\",\"<div ng-click=\\\"vm.debug.autoEnableAsNeeded($event)\\\" class=\\\"content-items-agnostic\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"btn btn-default btn-square btn-subtle pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"><i icon=\\\"remove\\\"></i></button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"Content.Manage.Title\\\"></h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-square\\\" ng-click=\\\"vm.add()\\\"><i icon=\\\"plus\\\"></i></button>\\r\\n\t    <button ng-if=\\\"vm.debug.on\\\" type=\\\"button\\\" class=\\\"btn btn-warning btn-square\\\" ng-click=\\\"vm.refresh()\\\"><i icon=\\\"repeat\\\"></i></button>\\r\\n\\r\\n\t\t<div ag-grid=\\\"vm.gridOptions\\\" class=\\\"ag-grid-wrapper\\\"></div>\\r\\n\t    \\r\\n        <show-debug-availability class=\\\"pull-right\\\" ></show-debug-availability>\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"content-items/content-items.html\",\"<div ng-click=\\\"vm.debug.autoEnableAsNeeded($event)\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"btn btn-default btn-square btn-subtle pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"><i icon=\\\"remove\\\"></i></button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"Content.Manage.Title\\\"></h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-square\\\" ng-click=\\\"vm.add()\\\"><i icon=\\\"plus\\\"></i></button>\\r\\n        <button ng-if=\\\"vm.debug.on\\\" type=\\\"button\\\" class=\\\"btn btn-warning btn-square\\\" ng-click=\\\"vm.refresh()\\\"><i icon=\\\"repeat\\\"></i></button>\\r\\n\\r\\n        <div style=\\\"overflow: auto\\\">\\r\\n            <table class=\\\"table table-hover table-manage-eav\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th translate=\\\"Content.Manage.Table.Id\\\" class=\\\"col-id\\\"></th>\\r\\n                    <th translate=\\\"Content.Manage.Table.Status\\\" style=\\\"width: 60px\\\"></th>\\r\\n                    <th translate=\\\"Content.Manage.Table.Title\\\" style=\\\"width: 200px\\\"></th>\\r\\n                    <th translate=\\\"Content.Manage.Table.Actions\\\" class=\\\"mini-btn-2\\\"></th>\\r\\n                    <th ng-repeat=\\\"col in vm.dynamicColumns\\\" style=\\\"width: 10%\\\">{{col.StaticName}}</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                <tr ng-repeat=\\\"item in vm.items | orderBy: [\\'Id\\',\\'-IsPublished\\'] \\\" class=\\\"clickable-row\\\" ng-click=\\\"vm.edit(item)\\\">\\r\\n                    <td class=\\\"text-nowrap clickable\\\" style=\\\"text-align: right\\\">\\r\\n                        <span tooltip=\\\"Id: {{item.Id}}\\r\\nRepoId: {{item.RepositoryId}}\\r\\nGuid: {{item.Guid}}\\\">{{item.Id}}</span>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-nowrap\\\">\\r\\n                        <span class=\\\"glyphicon\\\" ng-class=\\\"{\\'glyphicon-eye-open\\': item.IsPublished, \\'glyphicon-eye-close\\' : !item.IsPublished}\\\" tooltip=\\\"{{ \\'Content.Publish.\\' + (item.IsPublished ? \\'PnV\\': item.Published ? \\'DoP\\' : \\'D\\') | translate }}\\\"></span>\\r\\n                        <span icon=\\\"{{ item.Draft ? \\'link\\' : item.Published ? \\'link\\' : \\'\\' }}\\\" tooltip=\\\"{{ (item.Draft ? \\'Content.Publish.HD\\' :\\'\\') | translate:\\'{ id: item.Draft.RepositoryId}\\' }}\\r\\n{{ (item.Published ? \\'Content.Publish.HP\\' :\\'\\') | translate }} #{{ item.Published.RepositoryId }}\\\"></span>\\r\\n                        <span ng-if=\\\"item.Metadata\\\" tooltip=\\\"Metadata for type {{ item.Metadata.TargetType}}, id {{ item.Metadata.KeyNumber }}{{ item.Metadata.KeyString }}{{ item.Metadata.KeyGuid }}\\\" icon=\\\"tag\\\"></span>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-nowrap clickable\\\">\\r\\n                        <div class=\\\"hide-overflow-text\\\" style=\\\"height: 20px; width: 200px\\\" tooltip=\\\"{{item.Title}}\\\">\\r\\n                            {{item.Title}}{{ (!item.Title ? \\'Content.Manage.NoTitle\\':\\'\\') | translate }}\\r\\n                        </div>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-nowrap\\\" stop-event=\\\"click\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-click=\\\"vm.openDuplicate(item)\\\" tooltip=\\\"{{ \\'General.Buttons.Copy\\' | translate }}\\\"><i icon=\\\"duplicate\\\"></i></button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-click=\\\"vm.tryToDelete(item)\\\" tooltip=\\\"{{ \\'General.Buttons.Delete\\' | translate }}\\\"><i icon=\\\"remove\\\"></i> </button>\\r\\n                    </td>\\r\\n                    <td ng-repeat=\\\"col in vm.dynamicColumns\\\" width=\\\"10%\\\">\\r\\n                        <div style=\\\"height: 20px; max-width: 300px;\\\" class=\\\"hide-overflow-text\\\" tooltip=\\\"{{item[col.StaticName]}}\\\">{{item[col.StaticName].toString().substring(0,25)}}</div>\\r\\n                    </td>\\r\\n\\r\\n                </tr>\\r\\n                <tr ng-if=\\\"!vm.items.length\\\">\\r\\n                    <td colspan=\\\"100\\\" translate=\\\"General.Messages.NothingFound\\\"></td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <show-debug-availability class=\\\"pull-right\\\" ></show-debug-availability>\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"content-items/history-details.html\",\"<div>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"btn btn-default btn-subtle btn-square pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\"></span>\\r\\n        </button>\\r\\n        <h3 class=\\\"modal-title\\\">History Details {{vm.ChangeId}} of {{vm.entityId}}</h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <h1>todo</h1>\\r\\n        <table class=\\\"table table-striped table-hover\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th>Field</th>\\r\\n                <th>Language</th>\\r\\n                <th>Value</th>\\r\\n                <th>SharedWith</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr ng-repeat=\\\"item in vm.items | orderBy:SysCreatedDate:reverse\\\">\\r\\n                <td>{{item.Field}}</td>\\r\\n                <td>{{item.Language}}</td>\\r\\n                <td>{{item.Value}}</td>\\r\\n                <td>{{item.SharedWith}}</td>\\r\\n\\r\\n            </tr>\\r\\n            <tr ng-if=\\\"!vm.items.length\\\">\\r\\n                <td colspan=\\\"100\\\">No History</td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n\\r\\n        <button class=\\\"btn btn-primary pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.restore()\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-ok\\\">todo restore</span>\\r\\n        </button>    </div>\\r\\n\\r\\n</div>\");\n$templateCache.put(\"content-items/history.html\",\"<div>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"btn btn-default btn-square btn-subtle pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\"></span>\\r\\n        </button>\\r\\n        <h3 class=\\\"modal-title\\\">{{ \\\"Content.History.Title\\\" | translate:\\'{ id:vm.entityId }\\' }}History of {{vm.entityId}}</h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <table class=\\\"table table-striped table-hover\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th translate=\\\"Content.History.Table.Id\\\"></th>\\r\\n                <th translate=\\\"Content.History.Table.When\\\"></th>\\r\\n                <th translate=\\\"Content.History.Table.User\\\"></th>\\r\\n                <th translate=\\\"Content.History.Table.Action\\\"></th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr ng-repeat=\\\"item in vm.items | orderBy:SysCreatedDate:reverse\\\">\\r\\n                <td><span tooltip=\\\"ChangeId: {{item.ChangeId}}\\\">{{item.VirtualVersion}}</span></td>\\r\\n                <td>{{item.SysCreatedDate.replace(\\\"T\\\", \\\" \\\")}}</td>\\r\\n                <td>{{item.User}}</td>\\r\\n                <td>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-xs\\\" ng-click=\\\"vm.details(item)\\\">\\r\\n                        <span class=\\\"glyphicon glyphicon-search\\\"></span>\\r\\n                    </button>\\r\\n                </td>\\r\\n            </tr>\\r\\n                <tr ng-if=\\\"!vm.items.length\\\">\\r\\n                    <td colspan=\\\"100\\\" translate=\\\"General.Messages.NothingFound\\\"></td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n\\r\\n</div>\");\n$templateCache.put(\"content-types/content-types-edit.html\",\"<div ng-click=\\\"vm.debug.autoEnableAsNeeded($event)\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"btn btn-default btn-square btn-subtle pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"><i icon=\\\"remove\\\"></i></button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"ContentTypeEdit.Title\\\"></h3>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        {{ \\\"ContentTypeEdit.Name\\\" | translate }}: <br />\\r\\n        <input ng-model=\\\"vm.item.Name\\\" class=\\\"input-lg\\\" />\\r\\n        <br />\\r\\n        {{ \\\"ContentTypeEdit.Description\\\" | translate }}: <br />\\r\\n        <input ng-model=\\\"vm.item.Description\\\" class=\\\"input-lg\\\"/><br/>\\r\\n\\r\\n        <div>\\r\\n            {{ \\\"ContentTypeEdit.Scope\\\" | translate }}: <br />\\r\\n            <span ng-if=\\\"vm.debug.on\\\">\\r\\n                <div class=\\\"alert alert-danger\\\">the scope should almost never be changed - <a href=\\\"http://2sxc.org/help?tag=scope\\\" _target=\\\"_blank\\\">see help</a></div>\\r\\n            </span>\\r\\n            <input ng-disabled=\\\"!vm.debug.on\\\" ng-model=\\\"vm.item.Scope\\\" class=\\\"input-lg\\\" />\\r\\n        </div>\\r\\n\\r\\n        <div ng-if=\\\"vm.debug.on\\\" class=\\\"alert-danger\\\">\\r\\n            <h3>Static Name</h3>\\r\\n            <input type=\\\"checkbox\\\" class=\\\"input-lg\\\" ng-model=\\\"vm.item.ChangeStaticName\\\"/> Really edit StaticName??? - this is usually a very bad idea\\r\\n            <br/>\\r\\n            <input ng-model=\\\"vm.item.NewStaticName\\\" ng-disabled=\\\"!vm.item.ChangeStaticName\\\" class=\\\"input-lg\\\"/>\\r\\n        </div>\\r\\n        <div ng-if=\\\"vm.debug.on\\\" class=\\\"alert-danger\\\">\\r\\n            <h3>Shared Content Type (Ghost)</h3>\\r\\n            <div>Note: this can\\'t be edited in the UI, for now if you really know what you\\'re doing, do it in the DB</div>\\r\\n            <div>Uses Type Definition of: {{vm.item.SharedDefId}}</div> \\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button class=\\\"btn btn-primary btn-square pull-left btn-lg\\\" type=\\\"button\\\" ng-click=\\\"vm.ok()\\\"><i icon=\\\"ok\\\"></i></button>\\r\\n        <show-debug-availability class=\\\"pull-right\\\" style=\\\"margin-top: 20px;\\\"></show-debug-availability>\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"content-types/content-types-field-edit.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button icon=\\\"remove\\\" class=\\\"btn btn-default btn-square btn-subtle pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"></button>\\r\\n    <h3 class=\\\"modal-title\\\" translate=\\\"Fields.TitleEdit\\\"></h3>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <table class=\\\"table table-hover table-manage-eav\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n            <th translate=\\\"Fields.Table.Name\\\" style=\\\"width: 33%\\\"></th>\\r\\n            <th translate=\\\"Fields.Table.DataType\\\" style=\\\"width: 33%\\\">Data Type</th>\\r\\n            <th translate=\\\"Fields.Table.InputType\\\" style=\\\"width: 33%\\\">Input Type</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr ng-repeat=\\\"item in vm.items\\\">\\r\\n            <td>\\r\\n                <input ng-model=\\\"item.StaticName\\\" ng-required=\\\"true\\\" class=\\\"input-lg\\\" style=\\\"width: 100%\\\" disabled=\\\"disabled\\\"/>\\r\\n            </td>\\r\\n            <td>\\r\\n                <input ng-model=\\\"item.Type\\\" disabled=\\\"disabled\\\" class=\\\"input-lg\\\" style=\\\"width: 100%\\\"/>\\r\\n            </td>\\r\\n            <td>\\r\\n                <select class=\\\"input-lg\\\" ng-model=\\\"item.InputType\\\" style=\\\"width: 100%\\\"\\r\\n                        tooltip=\\\"{{ (vm.allInputTypes | filter: { inputType: item.InputType})[0].description }}\\\"\\r\\n                        ng-options=\\\"o.inputType as o.label for o in vm.allInputTypes | filter: {dataType: item.Type.toLowerCase() } \\\">\\r\\n                </select>\\r\\n\\r\\n            </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button icon=\\\"ok\\\" class=\\\"btn btn-lg btn-primary btn-square pull-left\\\" type=\\\"button\\\" ng-click=\\\"vm.ok()\\\"></button>\\r\\n</div>\");\n$templateCache.put(\"content-types/content-types-fields-add.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button icon=\\\"remove\\\" class=\\\"btn btn-default btn-square btn-subtle pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"></button>\\r\\n    <h3 class=\\\"modal-title\\\" translate=\\\"Fields.TitleEdit\\\"></h3>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <table class=\\\"table table-hover table-manage-eav\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n            <th translate=\\\"Fields.Table.Name\\\" style=\\\"width: 33%\\\"></th>\\r\\n            <th translate=\\\"Fields.Table.DataType\\\" style=\\\"width: 33%\\\">Data Type</th>\\r\\n            <th translate=\\\"Fields.Table.InputType\\\" style=\\\"width: 33%\\\">Input Type</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr ng-repeat=\\\"item in vm.items\\\">\\r\\n            <td>\\r\\n                <input ng-model=\\\"item.StaticName\\\" ng-required=\\\"true\\\" class=\\\"input-lg\\\" style=\\\"width: 100%\\\"/>\\r\\n            </td>\\r\\n            <td>\\r\\n                <select class=\\\"input-lg\\\" ng-model=\\\"item.Type\\\" style=\\\"width: 100%\\\"\\r\\n                        tooltip=\\\"{{ \\'DataType.\\' + item.Type + \\'.Explanation\\' | translate }}\\\"\\r\\n                        ng-options=\\\"o as \\'DataType.\\' + o + \\'.Choice\\' | translate for o in vm.types | orderBy: \\'toString()\\' \\\"\\r\\n                        ng-change=\\\"vm.resetSubTypes(item)\\\">\\r\\n                    <option>-- select --</option>\\r\\n                </select>\\r\\n            </td>\\r\\n            <td>\\r\\n                <select class=\\\"input-lg\\\" ng-model=\\\"item.InputType\\\" style=\\\"width: 100%\\\"\\r\\n                        tooltip=\\\"{{ (vm.allInputTypes | filter: { inputType: item.InputType})[0].description }}\\\"\\r\\n                        ng-options=\\\"o.inputType as o.label for o in vm.allInputTypes | filter: {dataType: item.Type.toLowerCase() } \\\">\\r\\n                </select>\\r\\n\\r\\n            </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button icon=\\\"ok\\\" class=\\\"btn btn-lg btn-primary btn-square pull-left\\\" type=\\\"button\\\" ng-click=\\\"vm.ok()\\\"></button>\\r\\n</div>\");\n$templateCache.put(\"content-types/content-types-fields.html\",\"<div>\\r\\n\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"btn btn-default btn-subtle btn-square pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"><i icon=\\\"remove\\\"></i></button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"Fields.Title\\\"></h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <button icon=\\\"plus\\\" ng-click=\\\"vm.add()\\\" class=\\\"btn btn-primary btn-square\\\"></button>\\r\\n\\r\\n        <!-- Table of content types for editing -->\\r\\n        <table ui-tree=\\\"vm.treeOptions\\\" data-drag-enabled=\\\"vm.dragEnabled\\\" ui-tree-nodes ng-model=\\\"vm.items\\\" class=\\\"table table-hover table-manage-eav\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th class=\\\"mini-btn-1\\\"></th>\\r\\n                    <th translate=\\\"Fields.Table.Title\\\" class=\\\"mini-btn-1\\\"></th>\\r\\n                    <th translate=\\\"Fields.Table.Name\\\" style=\\\"width: 35%\\\"></th>\\r\\n                    <th translate=\\\"Fields.Table.DataType\\\" style=\\\"width: 20%\\\"></th>\\r\\n                    <th translate=\\\"Fields.Table.InputType\\\" style=\\\"width: 20%\\\"></th>\\r\\n                    <th translate=\\\"Fields.Table.Label\\\" style=\\\"width: 30%\\\"></th>\\r\\n                    <th translate=\\\"Fields.Table.Notes\\\" style=\\\"width: 50%\\\"></th>\\r\\n                    <!--<th translate=\\\"Fields.Table.Sort\\\" class=\\\"mini-btn-2\\\"></th>-->\\r\\n                    <th translate=\\\"Fields.Table.Action\\\" class=\\\"mini-btn-2\\\"></th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr ng-repeat=\\\"item in vm.items track by $id(item)\\\" ui-tree-node class=\\\"clickable-row\\\" ng-click=\\\"vm.createOrEditMetadata(item, item.Type)\\\">\\r\\n                    <td ui-tree-handle><i class=\\\"glyphicon glyphicon-sort\\\"></i></td>\\r\\n                    <td stop-event=\\\"click\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-style=\\\"(item.IsTitle ? \\'\\' : \\'color: transparent !important\\')\\\" ng-click=\\\"vm.setTitle(item)\\\">\\r\\n                            <i icon=\\\"{{item.IsTitle ? \\'star\\' : \\'star-empty\\'}}\\\"></i>\\r\\n                        </button>\\r\\n                    </td>\\r\\n                    <td class=\\\"clickable\\\"><span tooltip=\\\"{{ \\'Id: \\' + item.Id}}\\\">{{item.StaticName}}</span></td>\\r\\n                    <td class=\\\"text-nowrap clickable\\\">\\r\\n                        {{item.Type}}\\r\\n                    </td>\\r\\n                    <td class=\\\"text-nowrap InputType\\\" stop-event=\\\"click\\\">\\r\\n                        <span class=\\\"clickable\\\" tooltip=\\\"{{ vm.inputTypeTooltip(item.InputType) }}\\\" ng-click=\\\"vm.edit(item)\\\">\\r\\n                            <i icon=\\\"pencil\\\"></i>\\r\\n                            {{item.InputType.substring(item.InputType.indexOf(\\'-\\') + 1, 100)}}\\r\\n                        </span>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-nowrap clickable\\\">\\r\\n                        {{item.Metadata.All.Name}}\\r\\n                    </td>\\r\\n                    <!--<td>-</td>-->\\r\\n                    <td class=\\\"text-nowrap clickable\\\">\\r\\n                        <div class=\\\"hide-overflow-text\\\">\\r\\n                            {{item.Metadata.All.Notes}}\\r\\n                        </div>\\r\\n                    </td>\\r\\n\\r\\n                    <!--<td class=\\\"text-nowrap\\\" stop-event=\\\"click\\\">\\r\\n                        <button icon=\\\"arrow-up\\\" type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-disabled=\\\"$first\\\" ng-click=\\\"vm.moveUp(item)\\\"></button>\\r\\n                        <button icon=\\\"arrow-down\\\" type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-disabled=\\\"$last\\\" ng-click=\\\"vm.moveDown(item)\\\"></button>\\r\\n                    </td>-->\\r\\n                    <td stop-event=\\\"click\\\">\\r\\n                        <button icon=\\\"cog\\\" type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-click=\\\"vm.rename(item)\\\"></button>\\r\\n                        <button icon=\\\"remove\\\" type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-click=\\\"vm.tryToDelete(item)\\\"></button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr ng-if=\\\"!vm.items.length\\\">\\r\\n                    <td colspan=\\\"100\\\" translate=\\\"General.Messages.NothingFound\\\"></td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n\\r\\n        <!--Ordered  {{vm.orderList()}} Test-->\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\");\n$templateCache.put(\"content-types/content-types.html\",\"<div ng-controller=\\\"List as vm\\\" ng-click=\\\"vm.debug.autoEnableAsNeeded($event)\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"ContentTypes.Title\\\"></h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <!-- Buttons on top -->\\r\\n        <button title=\\\"{{ \\'General.Buttons.Add\\' | translate }}\\\" type=\\\"button\\\" class=\\\"btn btn-primary btn-square\\\" ng-click=\\\"vm.edit()\\\"><i icon=\\\"plus\\\"></i></button>\\r\\n\\r\\n\\r\\n        <span class=\\\"btn-group\\\" ng-if=\\\"vm.debug.on\\\">\\r\\n            <button title=\\\"{{ \\'General.Buttons.Refresh\\' | translate }}\\\" type=\\\"button\\\" class=\\\"btn btn-warning btn-square\\\" ng-click=\\\"vm.refresh()\\\"><i icon=\\\"repeat\\\"></i></button>\\r\\n            <button title=\\\"todo\\\" type=\\\"button\\\" class=\\\"btn btn-warning btn-icon\\\" ng-click=\\\"vm.createGhost()\\\"><i class=\\\"eav-icon-ghost\\\"></i></button>\\r\\n            <button title=\\\"{{ \\'ContentTypes.Buttons.ChangeScope\\' | translate }}\\\" type=\\\"button\\\" class=\\\"btn btn-warning btn-square\\\" ng-click=\\\"vm.changeScope()\\\"><i icon=\\\"record\\\"></i></button>\\r\\n            <button title=\\\"{{ \\'General.Buttons.System\\' | translate }}\\\" type=\\\"button\\\" class=\\\"btn btn-warning btn-square\\\" ng-click=\\\"vm.liveEval()\\\"><i icon=\\\"flash\\\"></i></button>\\r\\n        </span>\\r\\n        <!-- Table of content types for editing -->\\r\\n        <table class=\\\"table table-hover\\\" style=\\\"table-layout: fixed; width: 100%\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <!--<th translate=\\\"ContentTypes.TypesTable.Items\\\" class=\\\"col-id\\\"></th>-->\\r\\n                <th translate=\\\"ContentTypes.TypesTable.Name\\\" style=\\\"width: 50%\\\"></th>\\r\\n                <th class=\\\"mini-btn-1\\\"></th>\\r\\n                <th translate=\\\"ContentTypes.TypesTable.Description\\\" style=\\\"width: 50%\\\"></th>\\r\\n                <th translate=\\\"ContentTypes.TypesTable.Fields\\\" class=\\\"mini-btn-2\\\"></th>\\r\\n                <th translate=\\\"ContentTypes.TypesTable.Actions\\\" class=\\\"mini-btn-5\\\"></th>\\r\\n                <th class=\\\"mini-btn-1\\\"> </th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr ng-if=\\\"vm.items.isLoaded\\\" ng-repeat=\\\"item in vm.items | orderBy:\\'Name\\'\\\" class=\\\"clickable-row\\\" ng-click=\\\"vm.editItems(item)\\\">\\r\\n                <!--<td style=\\\"text-align: center\\\" class=\\\"clickable\\\"> {{item.Items}} </td>-->\\r\\n                <td class=\\\"clickable\\\">\\r\\n                    <span class=\\\"text-nowrap hide-overflow-text\\\" style=\\\"max-width: 400px\\\" tooltip=\\\"{{item.Label}} ({{item.Name}})\\\">{{item.Label}} <span ng-if=\\\"item.Name != item.Label\\\">({{item.Name}})</span></span>\\r\\n                </td>\\r\\n                <td class=\\\"clickable\\\" style=\\\"text-align: right\\\">\\r\\n                    <div class=\\\"badge pull-right badge-primary hover-pair\\\" stop-event=\\\"click\\\" ng-click=\\\"vm.addItem(item.StaticName)\\\"><span class=\\\"hover-default\\\">{{item.Items}}</span><span class=\\\"hover-hover icon-plus\\\"></span></div></td>\\r\\n                <td class=\\\"clickable\\\">\\r\\n                    <div class=\\\"text-nowrap hide-overflow-text\\\" style=\\\"max-width: 500px\\\" tooltip=\\\"{{item.Description}}\\\">{{item.Description}}</div>\\r\\n                </td>\\r\\n                <td stop-event=\\\"click\\\">\\r\\n                    <button ng-if=\\\"!item.UsesSharedDef\\\" type=\\\"button\\\" class=\\\"btn btn-xs\\\" style=\\\"width: 60px\\\" ng-click=\\\"vm.editFields(item)\\\">\\r\\n                        <i class=\\\"eav-icon-fields\\\"></i>&nbsp;<span style=\\\"width: 22px; text-align: right\\\">{{item.Fields}}</span>\\r\\n                    </button>\\r\\n                    <button ng-if=\\\"item.UsesSharedDef\\\" tooltip=\\\"{{ \\'ContentTypes.Messages.SharedDefinition\\' | translate:item }}\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-xs\\\" style=\\\"width: 60px\\\">\\r\\n                        <i class=\\\"eav-icon-ghost\\\"></i>&nbsp;<span style=\\\"width: 22px; text-align: right\\\">{{item.Fields}}</span>\\r\\n                    </button>\\r\\n                </td>\\r\\n\\r\\n                <td class=\\\"text-nowrap\\\" stop-event=\\\"click\\\">\\r\\n                    <span class=\\\"btn-group\\\">\\r\\n                        <button tooltip=\\\"{{ \\'General.Buttons.Rename\\' | translate }} - {{  \\'ContentTypes.Messages.Type\\' + (item.UsesSharedDef ? \\'Shared\\' : \\'Own\\')  | translate:item }}\\\" type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-click=\\\"vm.edit(item)\\\">\\r\\n                            <i icon=\\\"heart{{ (item.UsesSharedDef ? \\'-empty\\' : \\'\\') }}\\\"></i>\\r\\n                        </button>\\r\\n                        <button tooltip=\\\"{{ \\'General.Buttons.Metadata\\' | translate }}\\\" type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-click=\\\"vm.createOrEditMetadata(item)\\\">\\r\\n                            <i class=\\\"eav-icon-tag\\\"></i>\\r\\n                        </button>\\r\\n                        <button tooltip=\\\"{{ \\'ContentTypes.Buttons.Export\\' | translate }}\\\" type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-click=\\\"vm.openExport(item)\\\">\\r\\n                            <i icon=\\\"export\\\"></i>\\r\\n                        </button>\\r\\n                        <button tooltip=\\\"{{ \\'ContentTypes.Buttons.Import\\' | translate }}\\\" type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-click=\\\"vm.openImport(item)\\\">\\r\\n                            <i icon=\\\"import\\\"></i>\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-click=\\\"vm.permissions(item)\\\" ng-if=\\\"vm.isGuid(item.StaticName)\\\">\\r\\n                            <i icon=\\\"user\\\"></i>\\r\\n                        </button>\\r\\n                    </span>\\r\\n                </td>\\r\\n                <td stop-event=\\\"click\\\">\\r\\n                    <button icon=\\\"remove\\\" type=\\\"button\\\" class=\\\"btn btn-xs\\\" ng-click=\\\"vm.tryToDelete(item)\\\"></button>\\r\\n                </td>\\r\\n            </tr>\\r\\n            <tr ng-if=\\\"!vm.items.length\\\">\\r\\n                <td colspan=\\\"100\\\">{{ \\'General.Messages.Loading\\' | translate }} / {{ \\'General.Messages.NothingFound\\' | translate }}</td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <show-debug-availability class=\\\"pull-right\\\"></show-debug-availability>\\r\\n    </div>\\r\\n    <div ng-if=\\\"vm.debug.on\\\">\\r\\n\\r\\n        <h3>Notes / Debug / ToDo</h3>\\r\\n        <ol>\\r\\n            <li>get validators to work on all dialogs</li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"permissions/permissions.html\",\"    <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"btn btn-default btn-square pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"><i icon=\\\"remove\\\"></i></button>\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"Permissions.Title\\\"></h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primar btn-square\\\" ng-click=\\\"vm.add()\\\"><i icon=\\\"plus\\\"></i></button>\\r\\n        <button ng-if=\\\"vm.debug.on\\\" type=\\\"button\\\" class=\\\"btn btn-square\\\" ng-click=\\\"vm.refresh()\\\"><i icon=\\\"repeat\\\"></i></button>\\r\\n\\r\\n        <table class=\\\"table table-striped table-hover table-manage-eav\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th translate=\\\"Permissions.Table.Id\\\" style=\\\"width: 60px\\\"></th>\\r\\n                <th translate=\\\"Permissions.Table.Name\\\" style=\\\"width: 33%\\\"></th>\\r\\n                <th translate=\\\"Permissions.Table.Condition\\\" style=\\\"width: 33%\\\"></th>\\r\\n                <th translate=\\\"Permissions.Table.Grant\\\" style=\\\"width: 33%\\\"></th>\\r\\n                <th translate=\\\"Permissions.Table.Actions\\\" style=\\\"width: 40px\\\"></th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr ng-repeat=\\\"item in vm.items | orderBy:\\'Title\\'\\\" class=\\\"clickable-row\\\" ng-click=\\\"vm.edit(item)\\\">\\r\\n                <td class=\\\"clickable\\\">{{item.Id}}</td>\\r\\n                <td class=\\\"clickable\\\">{{item.Title}}</td>\\r\\n                <td class=\\\"clickable\\\">{{item.Condition}}</td>\\r\\n                <td class=\\\"clickable\\\">{{item.Grant}}</td>\\r\\n                <td class=\\\"text-nowrap\\\" stop-event=\\\"click\\\">\\r\\n                    <button icon=\\\"remove\\\" type=\\\"button\\\" class=\\\"btn btn-xs btn-square\\\" ng-click=\\\"vm.tryToDelete(item)\\\"></button>\\r\\n                </td>\\r\\n            </tr>\\r\\n            <tr ng-if=\\\"!vm.items.length\\\">\\r\\n                <td colspan=\\\"100\\\" translate=\\\"General.Messages.NothingFound\\\"></td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\");\n$templateCache.put(\"pipelines/pipeline-designer.html\",\"<div class=\\\"ng-cloak\\\">\\r\\n    <div ng-controller=\\\"PipelineDesignerController as vm\\\" ng-click=\\\"vm.debug.autoEnableAsNeeded($event)\\\">\\r\\n        <div id=\\\"pipelineContainer\\\">\\r\\n            <div ng-repeat=\\\"dataSource in pipelineData.DataSources\\\"\\r\\n                 datasource\\r\\n                 guid=\\\"{{dataSource.EntityGuid}}\\\"\\r\\n                 id=\\\"dataSource_{{dataSource.EntityGuid}}\\\"\\r\\n                 class=\\\"dataSource\\\"\\r\\n                 ng-attr-style=\\\"top: {{dataSource.VisualDesignerData.Top}}px; left: {{dataSource.VisualDesignerData.Left}}px\\\">\\r\\n                <div class=\\\"configure\\\" ng-click=\\\"configureDataSource(dataSource)\\\" title=\\\"Configure this DataSource\\\" ng-if=\\\"!dataSource.ReadOnly\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-list-alt\\\"></span>\\r\\n                </div>\\r\\n                <div class=\\\"name\\\" title=\\\"Click to edit the Name\\\" ng-click=\\\"editName(dataSource)\\\">{{dataSource.Name || \\'(unnamed)\\'}}</div><br />\\r\\n                <div class=\\\"description\\\" title=\\\"Click to edit the Description\\\" ng-click=\\\"editDescription(dataSource)\\\">{{dataSource.Description || \\'(no description)\\'}}</div><br />\\r\\n                <div class=\\\"typename\\\" ng-attr-title=\\\"{{dataSource.PartAssemblyAndType}}\\\">Type: {{dataSource.PartAssemblyAndType | typename: \\'className\\'}}</div>\\r\\n                <div class=\\\"ep\\\" title=\\\"Drag a new Out-Connection from here\\\" ng-if=\\\"!dataSource.ReadOnly\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-plus-sign\\\"></span>\\r\\n                </div>\\r\\n                <div class=\\\"delete glyphicon glyphicon-remove\\\" title=\\\"Delete this DataSource\\\" ng-click=\\\"remove($index)\\\" ng-if=\\\"!dataSource.ReadOnly\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"actions panel panel-default\\\">\\r\\n            <div class=\\\"panel-heading\\\">\\r\\n                <span class=\\\"pull-left\\\">Actions</span>\\r\\n                <a href=\\\"http://2sxc.org/help\\\" class=\\\"btn btn-info btn-xs pull-right\\\" target=\\\"_blank\\\"><span class=\\\"glyphicon glyphicon-question-sign\\\"></span> Help</a>\\r\\n            </div>\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" title=\\\"Query the Data of this Pipeline\\\" ng-click=\\\"queryPipeline()\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-play\\\"></span> Query\\r\\n                </button>\\r\\n\\r\\n                <select class=\\\"form-control\\\" ng-model=\\\"addDataSourceType\\\" ng-disabled=\\\"readOnly\\\" ng-change=\\\"addDataSource()\\\" ng-options=\\\"d.ClassName for d in pipelineData.InstalledDataSources | filter: {allowNew: \\'!false\\'} | orderBy: \\'ClassName\\'\\\">\\r\\n                    <option value=\\\"\\\">-- Add DataSource --</option>\\r\\n                </select>\\r\\n                <!--<button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" title=\\\"Clone this Pipeline with all DataSources and Configurations\\\" ng-click=\\\"clonePipeline()\\\" ng-disabled=\\\"!PipelineEntityId\\\"><span class=\\\"glyphicon glyphicon-share-alt\\\"></span> Clone</button>-->\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default btn-block\\\" ng-click=\\\"editPipelineEntity()\\\"><span class=\\\"glyphicon glyphicon-pencil\\\"></span> Test Parameters</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" ng-disabled=\\\"readOnly\\\" ng-click=\\\"savePipeline()\\\">\\r\\n                    <span icon=\\\"ok\\\"></span> Save\\r\\n                </button>\\r\\n                <br/>\\r\\n                <br/>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info btn-xs\\\" ng-click=\\\"toggleEndpointOverlays()\\\"><span class=\\\"glyphicon glyphicon-info-sign\\\"></span> {{showEndpointOverlays ? \\'Hide\\' : \\'Show\\' }} Overlays</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info btn-xs\\\" ng-click=\\\"repaint()\\\"><span class=\\\"glyphicon glyphicon-repeat\\\"></span> Repaint</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info btn-xs\\\" ng-if=\\\"vm.debug.on\\\" ng-click=\\\"toogleDebug()\\\"><span class=\\\"glyphicon glyphicon-info-sign\\\"></span> {{debug ? \\'Hide\\' : \\'Show\\'}} Debug Info</button>\\r\\n\\r\\n                <show-debug-availability class=\\\"pull-right\\\"></show-debug-availability>\\r\\n            </div>\\r\\n        </div>\\r\\n        <toaster-container></toaster-container>\\r\\n        <pre ng-if=\\\"debug\\\">{{pipelineData | json}}</pre>\\r\\n    </div>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"pipelines/pipelines.html\",\"<div ng-click=\\\"vm.debug.autoEnableAsNeeded($event)\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h3 class=\\\"modal-title\\\" translate=\\\"Pipeline.Manage.Title\\\"></h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body ng-cloak\\\">\\r\\n        <div translate=\\\"Pipeline.Manage.Intro\\\"></div>\\r\\n        <div>\\r\\n            <button icon=\\\"plus\\\" type=\\\"button\\\" class=\\\"btn btn-primary btn-square\\\" ng-click=\\\"vm.add()\\\"></button>\\r\\n            <span class=\\\"btn-group\\\" ng-if=\\\"vm.debug.on\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-square\\\" ng-click=\\\"vm.refresh()\\\"><i icon=\\\"repeat\\\"></i></button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-square\\\" ng-click=\\\"vm.liveEval()\\\"><i icon=\\\"flash\\\"></i></button>\\r\\n            </span>\\r\\n            <table class=\\\"table table-hover table-manage-eav\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th translate=\\\"Pipeline.Manage.Table.Id\\\" class=\\\"col-id\\\"></th>\\r\\n                    <th translate=\\\"Pipeline.Manage.Table.Name\\\"></th>\\r\\n                    <th translate=\\\"Pipeline.Manage.Table.Description\\\"></th>\\r\\n                    <th translate=\\\"Pipeline.Manage.Table.Actions\\\" class=\\\"mini-btn-4\\\"></th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                <tr ng-repeat=\\\"pipeline in vm.pipelines | orderBy:\\'Name\\'\\\" class=\\\"clickable-row\\\" ng-click=\\\"vm.design(pipeline)\\\">\\r\\n                    <td class=\\\"clickable\\\">{{pipeline.Id}}</td>\\r\\n                    <td class=\\\"clickable\\\">{{pipeline.Name}}</td>\\r\\n                    <td class=\\\"clickable\\\">{{pipeline.Description}}</td>\\r\\n                    <td class=\\\"text-nowrap mini-btn-4\\\" stop-event=\\'click\\'>\\r\\n                        <span class=\\\"btn-group\\\">\\r\\n                            <button title=\\\"{{ \\'General.Buttons.Edit\\' | translate }}\\\" class=\\\"btn btn-xs\\\" ng-click=\\\"vm.edit(pipeline)\\\"><i icon=\\\"cog\\\"></i></button>\\r\\n                            <button title=\\\"{{ \\'General.Buttons.Copy\\' | translate }}\\\" type=\\\"button\\\" class=\\\"btn btn-xs\\\" ng-click=\\\"vm.clone(pipeline)\\\"><i icon=\\\"duplicate\\\"></i></button>\\r\\n                            <button title=\\\"{{ \\'General.Buttons.Permissions\\' | translate }}\\\" type=\\\"button\\\" class=\\\"btn btn-xs\\\" ng-click=\\\"vm.permissions(pipeline)\\\"><i icon=\\\"user\\\"></i></button>\\r\\n                        </span>\\r\\n                        <button title=\\\"{{ \\'General.Buttons.Delete\\' | translate }}\\\" type=\\\"button\\\" class=\\\"btn btn-xs\\\" ng-click=\\\"vm.delete(pipeline)\\\"><i icon=\\\"remove\\\"></i></button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr ng-if=\\\"!vm.pipelines.length\\\">\\r\\n                    <td colspan=\\\"100\\\" translate=\\\"General.Messages.NothingFound\\\"></td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n        <show-debug-availability class=\\\"pull-right\\\"></show-debug-availability>\\r\\n    </div>\\r\\n\\r\\n</div>\");\n$templateCache.put(\"pipelines/query-stats.html\",\"<div class=\\\"modal-header\\\">\\r\\n    <button icon=\\\"remove\\\" class=\\\"btn pull-right\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\"></button>\\r\\n    <h3 class=\\\"modal-title\\\" translate=\\\"Pipeline.Stats.Title\\\"></h3>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <div translate=\\\"Pipeline.Stats.Intro\\\"></div>\\r\\n\\r\\n    <div>\\r\\n        <h3 translate=\\\"Pipeline.Stats.ParamTitle\\\"></h3>\\r\\n        <div translate=\\\"Pipeline.Stats.ExecutedIn\\\" translate-values=\\\"{ ms: vm.timeUsed, ticks: vm.ticksUsed }\\\"></div>\\r\\n        <div>\\r\\n            <ul>\\r\\n                <li ng-repeat=\\\"param in vm.testParameters\\\">{{param}}</li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n        <h3 translate=\\\"Pipeline.Stats.QueryTitle\\\"></h3>\\r\\n        <pre>{{vm.result | json}}</pre>\\r\\n    </div>\\r\\n    <div>\\r\\n        <h3 translate=\\\"Pipeline.Stats.SourcesAndStreamsTitle\\\"></h3>\\r\\n        <h4 translate=\\\"Pipeline.Stats.Sources.Title\\\"></h4>\\r\\n        <table>\\r\\n            <tr>\\r\\n                <th translate=\\\"Pipeline.Stats.Sources.Guid\\\"></th>\\r\\n                <th translate=\\\"Pipeline.Stats.Sources.Type\\\"></th>\\r\\n                <th translate=\\\"Pipeline.Stats.Sources.Config\\\"></th>\\r\\n            </tr>\\r\\n            <tr ng-repeat=\\\"s in vm.sources\\\">\\r\\n                <td tooltip=\\\"{{s}}\\\"><pre>{{s.Guid.substring(0, 13)}}...</pre></td>\\r\\n                <td>{{s.Type}}</td>\\r\\n                <td tooltip=\\\"{{s.Configuration}}\\\">\\r\\n                    <ol>\\r\\n                        <li ng-repeat=\\\"(key, value) in s.Configuration\\\"><b>{{key}}</b>=<em>{{value}}</em></li>\\r\\n                    </ol>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n\\r\\n        <h4 translate=\\\"Pipeline.Stats.Streams.Title\\\"></h4>\\r\\n        <table>\\r\\n            <tr>\\r\\n                <th translate=\\\"Pipeline.Stats.Streams.Source\\\"></th>\\r\\n                <th translate=\\\"Pipeline.Stats.Streams.Target\\\"></th>\\r\\n                <th translate=\\\"Pipeline.Stats.Streams.Items\\\"></th>\\r\\n                <th translate=\\\"Pipeline.Stats.Streams.Error\\\"></th>\\r\\n            </tr>\\r\\n            <tr ng-repeat=\\\"sr in vm.streams\\\">\\r\\n                <td><pre>{{sr.Source.substring(0, 13) + \\\":\\\" + sr.SourceOut}}</pre></td>\\r\\n                <td><pre>{{sr.Target.substring(0, 13) + \\\":\\\" + sr.TargetIn}}</pre></td>\\r\\n                <td><span>{{sr.Count}}</span></td>\\r\\n                <td><span>{{sr.Error}}</span></td>\\r\\n            </tr>\\r\\n        </table>\\r\\n\\r\\n    </div>\\r\\n</div>\");}]);"],"sourceRoot":"/source/"}