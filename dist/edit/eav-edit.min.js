function enhanceEntity(e){var t=this;return t.enhanceWithCount=function(e){e.count=function(){var e,t=0;for(e in this)this.hasOwnProperty(e)&&"function"!=typeof this[e]&&t++;return t}},t.enhanceVs=function(e){return e.hasLanguage=function(e){return this.Dimensions.hasOwnProperty(e)},e.setLanguage=function(e,t){this.Dimensions[e]=t},e.languageMode=function(e){return this.hasLanguage(e)?this.Dimensions[e]:null},e},t.enhanceAtt=function(e){e.getVsWithLanguage=function(e){for(var t=0;t<this.Values.length;t++)if(this.Values[t].hasLanguage(e))return this.Values[t];return null},e.setLanguageToVs=function(e,t,n){return e.hasLanguage(t)?e.setLanguage(t,n):(this.removeLanguage(t),e.setLanguage(t,n))},e.removeLanguage=function(e){var t=this.getVsWithLanguage(e);null!==t&&(delete t.Dimensions[e],0===Object.keys(t.Dimensions).length&&this.Values.length>0&&this.removeVs(t))},e.removeVs=function(e){for(var t=0;t<this.Values.length;t++)this.Values[t]===e&&this.Values.splice(t,1)},e.addVs=function(e,n,a){var i={};null!==n&&(i[n]=null===a||void 0===a?!1:a);var l={Value:e,Dimensions:i};this.Values.push(t.enhanceVs(l))};for(var n=0;n<e.Values.length;n++)t.enhanceVs(e.Values[n]);return e},t.enhanceEntity=function(e){e.getTitle=function(){e.getAttribute(e.TitleAttributeName)},e.hasAttribute=function(t){return void 0!==e.Attributes[t]},e.getAttribute=function(t){return e.Attributes[t]},e.Attributes.addAttribute=function(n){e.Attributes[n]={Values:[]},t.enhanceAtt(e.Attributes[n])};for(var n in e.Attributes)e.Attributes.hasOwnProperty(n)&&"function"!=typeof e.Attributes[n]&&t.enhanceAtt(e.Attributes[n]);return e},t.enhanceEntity(e)}!function(){"use strict";angular.module("eavCustomFields",["oc.lazyLoad"]).config(["$ocLazyLoadProvider",function(e){e.config({debug:!0})}])}(),function(){"use strict";angular.module("eavEditEntity",["formly","ui.bootstrap","uiSwitch","toastr","ngAnimate","EavServices","eavEditTemplates","eavFieldTemplates","eavCustomFields","oc.lazyLoad"])}(),angular.module("eavFieldTemplates",["formly","formlyBootstrap","ui.bootstrap","eavLocalization","eavEditTemplates","ui.tree","ui.select","ngSanitize"]).constant("defaultFieldWrappers",["eavLabel","float-label","bootstrapHasError","disablevisually","eavLocalization","responsive","collapsible","hiddenIfNeeded"]).constant("fieldWrappersWithPreview",["eavLabel","float-label","bootstrapHasError","disablevisually","eavLocalization","preview-default","responsive","collapsible","hiddenIfNeeded"]).constant("defaultFieldWrappersNoFloat",["eavLabel","bootstrapHasError","disablevisually","eavLocalization","responsive","collapsible","hiddenIfNeeded"]).constant("fieldWrappersNoLabel",["bootstrapHasError","disablevisually","eavLocalization","responsive","no-label-space","collapsible","hiddenIfNeeded"]),angular.module("eavFieldTemplates").config(["formlyConfigProvider","fieldWrappersNoLabel",function(e,t){e.setType({name:"boolean-default",templateUrl:"fields/boolean/boolean-default.html",wrapper:t})}]),angular.module("eavFieldTemplates").config(["formlyConfigProvider","defaultFieldWrappers",function(e,t){e.setType({name:"custom-default",templateUrl:"fields/custom/custom-default.html",wrapper:t})}]),Date.prototype.toJSON=function(){var e=new Date(this);return e.setHours(e.getHours()-e.getTimezoneOffset()/60),e.toISOString()},angular.module("eavFieldTemplates").config(["formlyConfigProvider","defaultFieldWrappers",function(e,t){e.setType({name:"datetime-default",wrapper:t,templateUrl:"fields/datetime/datetime-default.html",defaultOptions:{templateOptions:{datepickerOptions:{}}},controller:["$scope","$locale","$translate",function(e,t,n){e.format=t.DATETIME_FORMATS.mediumDate,e.datepickerPopup={clearText:n.instant("CalendarPopup.ClearButton"),closeText:n.instant("CalendarPopup.CloseButton"),currentText:n.instant("CalendarPopup.CurrentButton")}}],link:function(e,t,n){function a(e){return new Date(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate(),e.getUTCHours(),e.getUTCMinutes(),e.getUTCSeconds())}e.$watch("value",function(t){!t||!t.Value||t.Value instanceof Date||(e.value.Value=a(new Date(t.Value)))})}})}]),angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setType({name:"empty-default",templateUrl:"fields/empty/empty-default.html",wrapper:["fieldGroup"],controller:"FieldTemplate-TitleController"})}]).controller("FieldTemplate-TitleController",["$scope","debugState",function(e,t){e.to.settings.merged||(e.to.settings.merged={}),e.set=function(t){e.to.collapseGroup=t},e.toggle=function(){e.to.collapseGroup=!e.to.collapseGroup},e.to.settings.merged.DefaultCollapsed===!0&&e.set(!0)}]),angular.module("eavFieldTemplates").config(["formlyConfigProvider","defaultFieldWrappers",function(e,t){var n=t.slice(0);n.splice(t.indexOf("eavLocalization"),1),e.setType({name:"entity-default",templateUrl:"fields/entity/entity-default.html",wrapper:n,controller:"FieldTemplate-EntityCtrl"})}]).controller("FieldTemplate-EntityCtrl",["$scope","$http","$filter","$translate","$uibModal","appId","eavAdminDialogs","eavDefaultValueService","fieldMask","$q","$timeout","entitiesSvc","debugState",function(e,t,n,a,i,l,r,o,s,u,c,d,p){function g(){if(e.to.settings.merged||(e.to.settings.merged={}),void 0===e.model[e.options.key]||""===e.model[e.options.key].Values[0].Value){var t=o(e.options);e.model[e.options.key]={Values:[{Value:t,Dimensions:{}}]}}var n=e.model[e.options.key].Values[0].Value;e.chosenEntities=n,e.selectedEntity=null;var a=e.to.settings.merged.EntityType||null;f=s(a,e,e.maybeReload,null),e.availableEntities=[]}function m(){e.form.$setDirty()}var f,v;e.debug=p,e.addEntity=function(t){return null===t?!1:(e.chosenEntities.push(t),e.selectedEntity=null,!0)},e.openNewEntityDialog=function(){function t(t){t&&null!==t.data&&void 0!==t.data&&e.maybeReload(!0).then(function(){e.chosenEntities.push(Object.keys(t.data)[0]),m()})}r.openItemNew(f.resolve(),t)},e.getAvailableEntities=function(){var n=f.resolve(),a=null;try{a=e.to.settings.merged.EnableAddExisting?null:e.model[e.options.key].Values[0].Value}catch(i){}return t.post("eav/EntityPicker/getavailableentities",a,{params:{contentTypeName:n,appId:l}}).then(function(t){e.availableEntities=t.data})},e.maybeReload=function(t){var n=f.resolve();return v!==n||t?(v=n,e.getAvailableEntities()):u.when()},e.getEntityText=function(t){if(null===t)return"empty slot";var i=n("filter")(e.availableEntities,{Value:t});return i.length>0?i[0].Text:a.instant("FieldType.Entity.EntityNotFound")},e.removeSlot=function(t,n){e.chosenEntities.splice(n,1),m()},e.deleteItemInSlot=function(t,a){if(""===e.to.settings.merged.EntityType)return void alert("delete not possible - no type specified in entity field configuration");var i=n("filter")(e.availableEntities,{Value:t}),l=i[0].Id;d.tryDeleteAndAskForce(f.resolve(),l,i[0].Text).then(function(){e.chosenEntities.splice(a,1),e.maybeReload(!0)})},e.edit=function(t,a){if(null===t)return alert("no can do");var i=n("filter")(e.availableEntities,{Value:t}),l=i[0].Id;return r.openItemEditWithEntityId(l,e.getAvailableEntities)},e.insertNull=function(){e.chosenEntities.push(null)},g()}]).directive("entityValidation",[function(){return{restrict:"A",require:"?ngModel",link:function(e,t,n,a){a&&(a.$validators.required=function(t,n){var a;return e.$parent.$parent.to.required?(a=t||n,a&&Array.isArray(a)?a.length>0:!0):!0},e.$watch(function(){return a.$viewValue},function(e){a.$validate()},!0))}}}]),angular.module("eavFieldTemplates").config(["formlyConfigProvider","defaultFieldWrappers",function(e,t){e.setType({name:"number-default",template:'<input type="number" class="form-control input-lg" ng-model="value.Value">{{vm.isGoogleMap}}',wrapper:t,defaultOptions:{ngModelAttrs:{"{{to.settings.merged.Min}}":{value:"min"},"{{to.settings.merged.Max}}":{value:"max"},'{{to.settings.merged.Decimals ? "^[0-9]+(.[0-9]{1," + to.settings.merged.Decimals + "})?$" : null}}':{value:"pattern"}}},controller:"FieldTemplate-NumberCtrl as vm"})}]).controller("FieldTemplate-NumberCtrl",function(){}),angular.module("eavFieldTemplates").config(["formlyConfigProvider","defaultFieldWrappers",function(e,t){e.setType({name:"string-contenttype",templateUrl:"fields/string/string-contenttype.html",wrapper:t,controller:"FieldTemplate-String-ContentType"})}]).controller("FieldTemplate-String-ContentType",["$scope","contentTypeSvc","appId",function(e,t,n){e.to.settings.merged||(e.to.settings.merged={}),e.contentTypes=[];var a=t(n);a.retrieveContentTypes().then(function(t){e.contentTypes=t.data})}]),angular.module("eavFieldTemplates").config(["formlyConfigProvider","defaultFieldWrappers",function(e,t){e.setType({name:"string-default",template:'<div><input class="form-control material" ng-if="!(options.templateOptions.settings.merged.RowCount > 1)" ng-pattern="vm.regexPattern" ng-model="value.Value"><textarea ng-if="options.templateOptions.settings.merged.RowCount > 1" rows="{{options.templateOptions.settings.merged.RowCount}}" class="form-control material" ng-model="value.Value"></textarea></div>',wrapper:t,controller:"FieldTemplate-StringCtrl as vm"})}]).controller("FieldTemplate-StringCtrl",["$scope",function(e){var t=this,n=".*",a=e.options.templateOptions.settings.merged;a&&a.ValidationRegExJavaScript&&(n=a.ValidationRegExJavaScript),t.regexPattern=new RegExp(n,"i"),console.log(e.options.templateOptions)}]),angular.module("eavFieldTemplates").config(["formlyConfigProvider","defaultFieldWrappers",function(e,t){e.setType({name:"string-dropdown",template:'<select class="form-control input-material material" ng-model="value.Value"></select>',wrapper:t,defaultOptions:function(e){function t(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0})}if(e.templateOptions.settings&&e.templateOptions.settings.merged&&e.templateOptions.settings.merged.DropdownValues){var n=e.templateOptions.settings.merged.DropdownValues;n=n.replace(/\r/g,"").split("\n"),n=n.map(function(e,t){var n=e.split(":");return{name:n[0],value:n[1]||""===n[1]?n[1]:n[0]}}),e.templateOptions.options=n}var a=e.templateOptions.ngOptions||"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options";return{ngModelAttrs:t({},a,{value:"ng-options"})}}})}]),angular.module("eavFieldTemplates").config(["formlyConfigProvider","defaultFieldWrappers",function(e,t){e.setType({name:"string-url-path",template:'<div><input class="form-control material" only-simple-url-chars ng-pattern="vm.regexPattern" ng-model="value.Value" ng-blur="vm.finalClean()"></div>',wrapper:t,controller:"FieldTemplate-String-Url-Path-Ctrl as vm"})}]).controller("FieldTemplate-String-Url-Path-Ctrl",["$scope","debugState","stripNonUrlCharacters","fieldMask",function(e,t,n,a){var i=this,l=e.to.settings["string-url-path"],r=l?l.AutoGenerateMask||null:null,o=a(r,e,null,function(e,t){return t.replace("/","-").replace("\\","-")}),s=!0;e.enablePath=s,i.lastAutoCopy="",i.sourcesChangedTryToUpdate=function(){if(!e.value||!e.value.Value||e.value.Value===i.lastAutoCopy){var t=o.resolve(),a=n(t,s,!0);a&&e.value&&(i.lastAutoCopy=a,e.value.Value=a)}};var u=".*",c=e.options.templateOptions.settings.merged;c&&c.ValidationRegExJavaScript&&(u=c.ValidationRegExJavaScript),i.regexPattern=new RegExp(u,"i"),i.finalClean=function(){var t=e.value.Value,a=n(t,s,!0);t!==a&&(e.value.Value=a)},i.activate=function(){angular.forEach(o.fieldList(),function(n,a){e.$watch("model."+n+"._currentValue.Value",function(){t.on&&console.log("url-path: "+n+" changed..."),i.sourcesChangedTryToUpdate(r)})}),e.debug=t,t.on&&console.log(e.options.templateOptions)},i.activate()}]).factory("stripNonUrlCharacters",["latinizeText",function(e){return function(t,n,a){if(!t)return"";var i=n?/[^a-z0-9-_\/]+/gi:/[^a-z0-9-_]+/gi,l=e(t.toLowerCase()),r=l.replace("'s ","s ").replace("\\","/").replace(i,"-").replace(/-+/gi,"-").replace(/\/+/gi,"/").replace(/-*\/-*/gi,"/").replace(a?/^-|-+$/gi:/^-/gi,"");return r}}]).directive("onlySimpleUrlChars",["stripNonUrlCharacters",function(e){return{require:"ngModel",restrict:"A",link:function(t,n,a,i){i.$parsers.push(function(n){if(null===n)return"";var a=e(n,t.enablePath,!1);return a!==n&&(i.$setViewValue(a),i.$render()),a})}}}]),function(){"use strict";var e=angular.module("eavEditEntity");e.controller("EditEntities",["appId","$http","$scope","entitiesSvc","contentTypeSvc","$sce","toastr","saveToastr","$translate","debugState","ctrlS",function(e,t,n,a,i,l,r,o,s,u,c){function d(){h.saveShortcut=c(h.save),h.loadAll(),h.versioningOptions=p()}function p(){if(!n.partOfPage)return{show:!0,hide:!0,branch:!0};var e=$2sxc.urlParams.get("publishing")||"";switch(e){case"":case"DraftOptional":return{show:!0,hide:!0,branch:!0};case"DraftRequired":return{branch:!0,hide:!0};default:throw"invalid versioning requiremenets: "+e.toString()}}function g(){h.saveShortcut.unbind()}function m(e,t){try{var n=e.I18nKey;if(!n)return;var a="ContentTypes."+n+".Metadata";s.refresh().then(function(){var e=a+".Label",n=a+".EditInstructions",i=s.instant(e),r=s.instant(n);i!==e&&(h.items[t].Header.Title=i),r!==n&&(h.itemsHelp[t]=l.trustAsHtml(r))})}catch(i){}}var f=!1,v=f?function(){for(var e=0;e<arguments.length;e++)console.log(arguments[e])}:function(){},h=this;h.debug=u,h.isWorking=0,h.registeredControls=[],h.items=null,h.itemsHelp=[],h.willPublish=!1,h.publishMode="hide",h.enableDraft=!1,h.typeI18n=[];var y=i(e);n.$on("$destroy",function(){g()}),h.registerEditControl=function(e){h.registeredControls.push(e)},h.loadAll=function(){a.getManyForEditing(e,n.itemList).then(function(e){return h.items=e.data,angular.forEach(h.items,function(e,t){!h.items[t].Entity&&h.items[t].Header.ContentTypeName&&(h.items[t].Entity=a.newEntity(h.items[t].Header)),h.items[t].Entity=enhanceEntity(h.items[t].Entity);var n=h.items[t].Header.Group;h.items[t].slotIsUsed=null===n||void 0===n||n.SlotIsEmpty!==!0}),h.willPublish=h.items[0].Entity.IsPublished,h.enableDraft=0!==h.items[0].Header.EntityId,h.publishMode=h.items[0].Entity.IsBranch?"branch":h.items[0].Entity.IsPublished?"show":"hide",h.versioningOptions[h.publishMode]||(h.publishMode=Object.keys(h.versioningOptions)[0]),e}).then(function(e){angular.forEach(h.items,function(e,t){y.getDetails(h.items[t].Header.ContentTypeName).then(function(e){e.data&&(e.data.I18nKey&&(console.log("has i18n"),h.typeI18n[t]="ContentTypes."+e.data.I18nKey),e.data.Metadata&&e.data.Metadata.EditInstructions&&(h.itemsHelp[t]=l.trustAsHtml(e.data.Metadata.EditInstructions)),m(e.data,t))})})})},h.showFormErrors=function(){for(var e=h.formErrors(),t=[],n=s.instant("Message.FieldErrorList"),a=0;a<e.length;a++)if(e[a].required){var i=e[a].required.map(function(e){return{field:e.$name,error:"required"}});t=t.concat(i)}var l=t.map(function(e){var t=e.field.split("_");return n.replace("{form}",t[1]).replace("{field}",t[3]).replace("{error}",e.error)}),o=l.join("<br/>");return r.error(s.instant("Message.CantSaveInvalid").replace("{0}",o),s.instant("Message.Error"),{allowHtml:!0})},h.save=function(t){return h.isValid()?h.isWorking>0?r.error(s.instant("Message.CantSaveProcessing")):(h.isWorking++,o(a.saveMany(e,h.items,n.partOfPage)).then(function(e){n.state.setPristine(),t&&(h.allowCloseWithoutAsking=!0,h.afterSaveEvent(e)),h.enableDraft=!0,h.isWorking--},function(){h.isWorking--}),null):h.showFormErrors()},h.afterSaveEvent=n.afterSaveEvent,h.isValid=function(){var e=!0;return angular.forEach(h.registeredControls,function(t){t.isValid()||(e=!1)}),e},h.formErrors=function(){var e=[];return angular.forEach(h.registeredControls,function(t){t.isValid()||e.push(t.error())}),e},n.state.isDirty=function(){var e=!1;return angular.forEach(h.registeredControls,function(t){t.isDirty()&&(e=!0)}),e},n.state.setPristine=function(){angular.forEach(h.registeredControls,function(e){e.setPristine()})},n.$watch("vm.willPublish",function(){angular.forEach(h.items,function(e,t){h.items[t].Entity.IsPublished=h.willPublish})}),n.$watch("vm.publishMode",function(){var e="show"===h.publishMode,t="branch"===h.publishMode;angular.forEach(h.items,function(n,a){h.items[a].Entity.IsPublished=e,h.items[a].Entity.IsBranch=t})}),h.maybeLeave={save:function(){h.save(!0)},quit:n.close,handleClick:function(e){v("handleClick",e);var t=e.target||e.srcElement;"I"===t.nodeName&&(t=t.parentNode),"save"!==t.id&&"quit"!==t.id||(v("for "+t.id),h.allowCloseWithoutAsking=!0,h.maybeLeave[t.id]())},ask:function(e){if(n.state.isDirty()&&!h.allowCloseWithoutAsking){var t="<div>"+s.instant("Errors.UnsavedChanges")+"<br><button type='button' id='save' class='btn btn-primary' ><i class='eav-icon-ok'></i>"+s.instant("General.Buttons.Save")+"</button> &nbsp;<button type='button' id='quit' class='btn btn-default' ><i class= 'eav-icon-cancel'></i>"+s.instant("General.Buttons.NotSave")+"</button></div>";h.dialog&&h.dialog.isOpened&&r.clear(h.dialog),h.dialog=r.warning(t,{allowHtml:!0,timeOut:3e3,onShown:function(e){e.el[0].onclick=h.maybeLeave.handleClick}}),e.preventDefault()}}},n.$on("modal.closing",h.maybeLeave.ask),h.toggleSlotIsEmpty=function(e){e.Header.Group||(e.Header.Group={}),e.Header.Group.SlotIsEmpty=!e.Header.Group.SlotIsEmpty,e.slotIsUsed=!e.Header.Group.SlotIsEmpty},d()}])}(),function(){"use strict";var e=angular.module("eavEditEntity");e.directive("eavEditEntities",function(){return{templateUrl:"form/edit-many-entities.html",restrict:"E",scope:{itemList:"=",afterSaveEvent:"=",state:"=",close:"=",partOfPage:"=",publishing:"="},controller:"EditEntities",controllerAs:"vm"}})}(),function(){"use strict";var e=angular.module("eavEditEntity");e.controller("EditEntityFormCtrl",["appId","$http","$scope","$rootScope","$translate","formlyConfig","contentTypeFieldSvc","$sce","debugState","customInputTypes","eavConfig","$injector",function(t,n,a,i,l,r,o,s,u,c,d,p){function g(e,t){try{var n=e[0].I18nKey;if(!n)return;var a="ContentTypes."+n+".Attributes.";l.refresh().then(function(){angular.forEach(t,function(e,t){var n=a+e.key,i=n+".Label",r=n+".Description",o=l.instant(i),u=l.instant(r);o!==i&&(e.templateOptions.label=o),u!==r&&(e.templateOptions.description=s.trustAsHtml(u))})})}catch(i){}}var m=this;m.editInDefaultLanguageFirst=function(){return!1},m.control={isValid:function(){return 0===m.formFields.length||m.form&&m.form.$valid},isDirty:function(){return m.form&&m.form.$dirty},setPristine:function(){m.form&&m.form.$setPristine()},error:function(){return m.form.$error}},a.registerEditControl&&a.registerEditControl(m.control),m.model=null,m.entity=a.entity,m.formFields=[];var f=function(){o(t,{StaticName:m.entity.Type.StaticName}).getFields().then(function(e){m.debug=e,angular.forEach(e.data,function(e,t){e.InputType=m.getType(e),d.formly.inputTypeReconfig(e),e.InputTypeConfig&&c.addInputType(e)});var t=c.loadWithPromise();t.then(function(t){m.registerAllFieldsFromReturnedDefinition(e)})})};m.initCustomJavaScript=function(n){var a,i=n.Metadata.merged.CustomJavaScript;if(i){if(i.indexOf("/* compatibility: 1.0 */")<0)return void console.log("found custom js for field '"+n.StaticName+"', but didn't find correct version support; ignore");try{console.log("fyi: will run custom js for "+n.StaticName);var l=new Function(i);a=l()}catch(o){console.log("wasn't able to process the custom javascript for field '"+n.StaticName+"'. tried: "+i)}if(void 0!==a&&null!==a){var s={field:n,formVm:m,formlyConfig:r,appId:t,module:e,$injector:p};if(a&&a.init){console.log("fyi: will init on custom js for "+n.StaticName);try{a.init(s)}catch(o){console.log("init custom js failed with error - will ignore this"),console.log(o)}}}}},m.registerAllFieldsFromReturnedDefinition=function(e){var t=null,n=e.data;angular.forEach(n,function(e,n){void 0===e.Metadata.All&&(e.Metadata.All={}),e.Metadata.All.VisibleInEditUI!==!1&&(e.Metadata.All.VisibleInEditUI=!0),m.initCustomJavaScript(e);var i=e.InputType,l="empty-default"===i;l&&(t=n);var r={key:e.StaticName,type:i,templateOptions:{required:!!e.Metadata.All.Required,label:void 0===e.Metadata.All.Name?e.StaticName:e.Metadata.All.Name,description:s.trustAsHtml(e.Metadata.All.Notes),settings:e.Metadata,header:a.header,canCollapse:null!==t&&!l,fieldGroup:m.formFields[t||0],disabled:e.Metadata.All.Disabled,langReadOnly:!1,onBlur:"to.focused=false",onFocus:"to.focused=true",focused:!1,debug:u.on},className:"type-"+e.Type.toLowerCase()+" input-"+i+" field-"+e.StaticName.toLowerCase(),expressionProperties:{"templateOptions.disabled":"options.templateOptions.disabled"},watcher:[{expression:function(t,n,a){return e.Metadata.All.Disabled||t.templateOptions.header.Group&&t.templateOptions.header.Group.SlotIsEmpty||t.templateOptions.langReadOnly},listener:function(e,t,n,a,i){e.templateOptions.disabled=t}},{expression:function(e,t,n){return e.templateOptions.canCollapse?e.templateOptions.fieldGroup.templateOptions.collapseGroup:null},listener:function(e,t,n,a,i){e.templateOptions.canCollapse&&(e.templateOptions.collapse=t)}}]};m.formFields.push(r)}),g(n,m.formFields)},null!==m.entity&&f(),m.getType=function(e){var t=e,n=t.Type.toLowerCase(),a="";"unknown"!==t.InputType?a=t.InputType:t.Metadata.merged&&t.Metadata.merged.InputType&&(a=t.Metadata.merged.InputType),a&&-1===a.indexOf("-")&&(a=n+"-"+a);var i=a&&d.formly.inputTypeReplacementMap[a];if(!i){var l=r.getType(a),o=t.InputTypeConfig?!!t.InputTypeConfig.Assets:!1;a&&(l||o)||(a=n+"-default"),i=a&&d.formly.inputTypeReplacementMap[a]}return i&&(a=d.formly.inputTypeReplacementMap[a]),a}}])}(),function(){"use strict";angular.module("eavEditEntity").directive("eavEditEntityForm",function(){return{templateUrl:"form/edit-single-entity.html",restrict:"E",scope:{entity:"=",header:"=",registerEditControl:"="},controller:"EditEntityFormCtrl",controllerAs:"vm"}})}(),function(){"use strict";var e=angular.module("eavEditEntity");e.controller("EditEntityWrapperCtrl",["$q","$http","$scope","items","$uibModalInstance","$window","$translate","toastr","partOfPage","publishing",function(e,t,n,a,i,l,r,o,s,u){var c=this;c.partOfPage=s,c.publishing=u,c.itemList=a,c.afterSave=function(e){200===e.status?c.close(e):alert(r.instant("Errors.UnclearError"))},c.state={isDirty:function(){throw r.instant("Errors.InnerControlMustOverride")}},c.close=function(e){i.close(e)},l.addEventListener("beforeunload",function(e){var t=r.instant("Errors.UnsavedChanges");return c.state.isDirty()?((e||window.event).returnValue=t,t):null})}])}(),function(){"use strict";var e=angular.module("eavLocalization",["formly","EavConfiguration"],["formlyConfigProvider",function(e){e.setWrapper([{name:"eavLocalization",templateUrl:"localization/formly-localization-wrapper.html"}])}]);e.directive("eavLanguageSwitcher",function(){return{restrict:"E",templateUrl:"localization/language-switcher.html",controller:["$scope","languages",function(e,t){e.languages=t}],scope:{isDisabled:"=isDisabled"}}}),e.directive("eavLocalizationScopeControl",function(){return{restrict:"E",transclude:!0,template:"",link:function(e,t,n){},controller:["$scope","$filter","$translate","eavDefaultValueService","languages",function(e,t,n,a,i){var l=e,r=i,o=function(){l.model[l.options.key]||l.model.addAttribute(l.options.key);var i=l.model[l.options.key];if(0===i.Values.length){if(r.currentLanguage!=r.defaultLanguage)return;var o=a(l.options),s=r.languages.length>0?r.currentLanguage:null;i.addVs(o,s)}0===Object.keys(i.Values[0].Dimensions).length&&r.languages.length>0&&(i.Values[0].Dimensions[r.defaultLanguage]=!1);var u;if(u=t("filter")(i.Values,function(e,t){return void 0!==e.Dimensions[r.currentLanguage]})[0],void 0===u&&(u=t("filter")(i.Values,function(e,t){return void 0!==e.Dimensions[r.defaultLanguage]})[0]),void 0===u){if(i.Values.length>1)throw n.instant("Errors.DefLangNotFound")+" "+e.options.key;u=i.Values[0]}i._currentValue=u,l.value=i._currentValue;var c=r.currentLanguage==r.defaultLanguage||l.value&&l.value.Dimensions[r.currentLanguage]===!1;l.to.langReadOnly=!c};o(),l.langConf=r,l.$watch("langConf.currentLanguage",function(e,t){void 0!==t&&e!=t&&o()}),l.$watch("model[options.key].Values",function(e,t){o()},!0),l.model[l.options.key]._initCurrentValue=o}]}}),e.directive("eavLocalizationMenu",function(){return{restrict:"E",scope:{fieldModel:"=fieldModel",options:"=options",value:"=value",index:"=index",formModel:"=formModel"},templateUrl:"localization/localization-menu.html",link:function(e,t,n){},controllerAs:"vm",controller:["$scope","languages","$translate",function(e,t,n){var a=this,i=n.instant("LangMenu.UseDefault");n.instant("LangMenu.In");a.fieldModel=e.fieldModel,a.languages=t,a.hasLanguage=function(e){return null!==a.fieldModel.getVsWithLanguage(e)},a.isDefaultLanguage=function(){return t.currentLanguage!=t.defaultLanguage},a.enableTranslate=function(){return null===a.fieldModel.getVsWithLanguage(t.currentLanguage)},a.infoMessage=function(){return 1===Object.keys(e.value.Dimensions).length&&e.value.Dimensions[t.defaultLanguage]===!1?i:1===Object.keys(e.value.Dimensions).length&&e.value.Dimensions[t.currentLanguage]===!1?"":n.instant("LangMenu.In",{languages:Object.keys(e.value.Dimensions).join(", ")})},a.tooltip=function(){var t=[],a=[];angular.forEach(e.value.Dimensions,function(e,n){(e?a:t).push(n)});var i=n.instant("LangMenu.EditableIn",{languages:t.join(", ")});return a.length>0&&(i+=n.instant("LangMenu.AlsoUsedIn",{languages:a.join(", ")})),i},a.actions={toggleTranslate:function(){a.enableTranslate()?a.actions.translate():a.actions.linkDefault()},translate:function(){a.enableTranslate()&&(a.fieldModel.removeLanguage(t.currentLanguage),a.fieldModel.addVs(e.value.Value,t.currentLanguage,!1))},linkDefault:function(){a.fieldModel.removeLanguage(t.currentLanguage)},autoTranslate:function(e){alert(n.instant("LangMenu.NotImplemented"))},copyFrom:function(t){if(e.options.templateOptions.disabled)alert(n.instant("LangMenu.CopyNotPossible"));else{var i=a.fieldModel.getVsWithLanguage(t).Value;null===i||void 0===i?console.log(e.options.key+": Can't copy value from "+t+" because that value does not exist."):e.value.Value=i}},useFrom:function(n){var i=a.fieldModel.getVsWithLanguage(n);null===i||void 0===i?console.log(e.options.key+": Can't use value from "+n+" because that value does not exist."):(a.fieldModel.removeLanguage(t.currentLanguage),i.setLanguage(t.currentLanguage,!0))},shareFrom:function(n){var i=a.fieldModel.getVsWithLanguage(n);null===i||void 0===i?console.log(e.options.key+": Can't share value from "+n+" because that value does not exist."):(a.fieldModel.removeLanguage(t.currentLanguage),i.setLanguage(t.currentLanguage,!1))},all:{translate:function(){l("translate")},linkDefault:function(){l("linkDefault")},copyFrom:function(e){l("copyFrom",e)},useFrom:function(e){l("useFrom",e)},shareFrom:function(e){l("shareFrom",e)}}},void 0===e.formModel.localizationMenus&&(e.formModel.localizationMenus=[]),e.formModel.localizationMenus.push(a.actions);var l=function(t,n){for(var a=0;a<e.formModel.localizationMenus.length;a++)e.formModel.localizationMenus[a][t](n)}}]}}),e.directive("eavTreatTimeUtc",function(){function e(e,t){}function t(e,t,n,a){a[0].$formatters.push(function(e){return e}),a[0].parsers.push(function(e){return e})}var n={restrict:"A",require:["ngModel"],compile:e,link:t};return n})}(),function(){"use strict";angular.module("eavEditEntity").service("customInputTypes",["eavConfig","toastr","formlyConfig","$q","$interval","$ocLazyLoad",function(e,t,n,a,i,l){var r={};return r.inputTypesOnPage={},r.allLoaded=!0,r.assetsToLoad=[],r.addInputType=function(e){var t=e.InputTypeConfig;void 0!==t&&null!==t&&(r.inputTypesOnPage[t.Type]=t,r.addToLoadQueue(t))},r.addToLoadQueue=function(e){if(void 0===e.Assets||null===e.Assets||!e.Assets)return void(e.assetsLoaded=!0);for(var t=e.Assets.split("\n"),n=0;n<t.length;n++){var a=t[n].trim();a.length>5&&r.assetsToLoad.push(r.resolveSpecialPaths(a))}},r.loadWithPromise=function(){return l.load(r.assetsToLoad)},r.resolveSpecialPaths=function(t){return t=t.replace(/\[System:Path\]/i,e.getUrlPrefix("system")).replace(/\[Zone:Path\]/i,e.getUrlPrefix("zone")).replace(/\[App:Path\]/i,e.getUrlPrefix("app"))},r.checkDependencyArrival=function(e){return!!n.getType(e)},r}])}(),function(){"use strict";angular.module("eavEditEntity").service("eavDefaultValueService",function(){return function(e){var t=e,n=t.templateOptions.settings.All.DefaultValue;switch(t.templateOptions.header.Prefill&&t.templateOptions.header.Prefill[t.key]&&(n=t.templateOptions.header.Prefill[t.key]),t.type.split("-")[0]){case"boolean":return void 0!==n&&null!==n?"true"===n.toLowerCase():!1;case"datetime":return void 0!==n&&null!==n&&""!==n?new Date(n):null;case"entity":return void 0===n||null===n||""===n?[]:n.constructor===Array?n:(n.indexOf("{")>-1&&(n=n.replace(/[\{\}]/g,'"')),-1!==n.indexOf(",")&&-1===n.indexOf("[")&&(n="["+n+"]"),0===n.indexOf("[")?JSON.parse(n):[n.replace(/"/g,"")]);case"number":return void 0!==n&&null!==n&&""!==n?Number(n):"";default:return n?n:""}}})}(),function(){"use strict";angular.module("eavEditEntity").factory("entitiesSvc",["$http","appId","toastrWithHttpErrorHandling","promiseToastr","$q","$translate","toastr",function(e,t,n,a,i,l,r){var o={toastr:n};return o.getManyForEditing=function(t,n){return e.post("eav/entities/getmanyforediting",n,{params:{appId:t}})},o.saveMany=function(t,n,a){for(var i=function(e,t){delete e._currentValue},l=angular.copy(n),r=0;r<l.length;r++)angular.forEach(l[r].Entity.Attributes,i);return e.post("eav/entities/savemany",l,{params:{appId:t,partOfPage:a||!1}}).then(function(e){var t=function(t,n){var a=t.Entity;if(!(null!==a.Id&&0!==a.Id||null===a.Guid&&"undefined"==typeof a.Guid&&"00000000-0000-0000-0000-000000000000"===a.Guid)){var i=e.data[a.Guid];t.Entity.Id=i,t.Header.ID=i}};return angular.forEach(n,t),e})},o.tryDeleteAndAskForce=function(e,t,n){var a=i.defer(),s=l.instant("General.Questions.DeleteEntity",{title:n,id:t});return confirm(s)?o["delete"](e,t,!1).then(function(i){if(i.status>=200&&i.status<300)a.resolve(i);else{var s="<div>"+l.instant("General.Questions.ForceDelete",{title:n,id:t})+"<br/><button type='button' id='del' class='btn btn-default' ><i class= 'eav-icon-ok'></i>"+l.instant("General.Buttons.ForceDelete")+"</button></div>";r.warning(s,{allowHtml:!0,timeOut:5e3,onShown:function(n){n.el[0].onclick=function(n){var i=n.target||n.srcElement;"del"===i.id&&o["delete"](e,t,!0).then(a.resolve)}}})}}):a.reject("Delete aborted by user"),a.promise},o["delete"]=function(n,i,l){console.log("try to delete");var r=e.get("eav/entities/delete",{ignoreErrors:!0,params:{contentType:n,id:i,appId:t,force:l}});return a(r,"Message.Deleting","Message.Ok","Message.Error")},o.newEntity=function(e){return{Id:null,Guid:e.Guid,Type:{StaticName:e.ContentTypeName},Attributes:{},IsPublished:!0}},o.save=function(t,n){return e.post("eav/entities/save",n,{params:{appId:t}})},o}])}(),angular.module("eavFieldTemplates").factory("fieldMask",["debugState",function(e){function t(t,n,a,i){function l(){r.fields=r.fieldList(),i&&(r.preClean=i),n&&a&&r.watchAllFields()}var r={mask:t,model:n.model,fields:[],value:void 0,findFields:/\[.*?\]/gi,unwrapField:/[\[\]]/gi};return r.resolve=function(){var e=r.mask;return angular.forEach(r.fields,function(t,n){var a=r.model.hasOwnProperty(t)&&r.model[t]&&r.model[t]._currentValue&&r.model[t]._currentValue.Value?r.model[t]._currentValue.Value:"",i=r.preClean(t,a);e=e.replace("["+t+"]",i)}),e},r.fieldList=function(){var e=[];if(!r.mask)return e;var t=r.mask.match(r.findFields);return angular.forEach(t,function(t,n){var a=t.replace(r.unwrapField,"");e.push(a)}),e},r.preClean=function(e,t){return t},r.onChange=function(){var e=r.resolve();r.value!==e&&a(e),r.value=e},r.watchAllFields=function(){angular.forEach(r.fields,function(t,a){n.$watch("model."+t+"._currentValue.Value",function(){e.on&&console.log("url-path: "+t+" changed..."),r.onChange()})})},l(),r}return t}]),angular.module("eavEditTemplates",[]).run(["$templateCache",function(e){e.put("fields/boolean/boolean-default.html",'<div class="checkbox checkbox-labeled">\r\n    <!--<label>-->\r\n        <switch class="tosic-green pull-left" ng-model="value.Value"></switch>\r\n    <!-- maybe need the (hidden) input to ensure the label actually switches the boolean -->\r\n        <!--<input type="checkbox" class="formly-field-checkbox" ng-model="value.Value" style="display: none">-->\r\n        <div ng-include="\'wrappers/eav-label.html\'"></div>\r\n        <!--{{to.label}} {{to.required ? \'*\' : \'\'}}-->\r\n    <!--</label>-->\r\n</div>'),
e.put("fields/custom/custom-default.html",'<div class="alert alert-danger">\r\n    ERROR - This is a custom field, you shouldn\'t see this. You only see this because the custom-dialog is missing.\r\n</div>\r\n<input class="form-control input-lg" ng-pattern="vm.regexPattern" ng-model="value.Value">'),e.put("fields/datetime/datetime-default.html",'<div>\r\n    <div class="input-group" style="width: 100%">\r\n        <input class="form-control input-lg" ng-model="value.Value" is-open="to.isOpen" uib-datepicker-popup="{{format}}" close-text="{{datepickerPopup.closeText}}" clear-text="{{datepickerPopup.clearText}}" current-text="{{datepickerPopup.currentText}}" datepicker-options="to.datepickerOptions" />\r\n\r\n        <span class="input-group-btn" style="vertical-align: top;">\r\n            <button type="button" class="btn btn-default eav-icon-field-button pull-right icon-field-button icon-field-button-calendar"\r\n                    ng-disabled="to.disabled"\r\n                    ng-click="to.isOpen = true;">\r\n                <i class="eav-icon-calendar"></i>\r\n            </button>\r\n        </span>\r\n        <!--<div class="input-group-addon" style="cursor: pointer;" ng-click="to.isOpen = true;">\r\n            <i class="glyphicon glyphicon-calendar"></i>\r\n        </div>-->\r\n        <div uib-timepicker ng-show="to.settings.merged.UseTimePicker" ng-model="value.Value" show-meridian="ismeridian" style="display:table-row;"></div>\r\n    </div>\r\n</div>\r\n'),e.put("fields/empty/empty-default.html","<span></span>"),e.put("fields/entity/entity-default.html",'<div class="eav-entityselect">\r\n    <div>\r\n        <div ui-tree="options" data-empty-placeholder-enabled="false" ng-show="to.settings.merged.EnableCreate || chosenEntities.length > 0">\r\n            <table ui-tree-nodes ng-model="chosenEntities" entity-validation ng-required="false" class="eav-entityselect-table" style="table-layout: fixed;">\r\n                <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n                <!-- important note - track by $index very important for multiple null-values in list -->\r\n                <tr ng-repeat="item in chosenEntities track by $index" ui-tree-node class="eav-entityselect-item" >\r\n                    <td ui-tree-handle>\r\n                        <i title="{{ \'FieldType.Entity.DragMove\' | translate }}" class="eav-icon-link pull-left eav-entityselect-icon" ng-show="to.settings.Entity.AllowMultiValue"></i>\r\n                        <i title="" class="eav-icon-link pull-left eav-entityselect-icon" ng-show="!to.settings.Entity.AllowMultiValue"></i>\r\n                    </td>\r\n                    <td ui-tree-handle>\r\n                        <span class="eav-entityselect-item-title" title="{{getEntityText(item) + \' (\' + item + \')\'}}">{{getEntityText(item)}}</span>\r\n                    </td>\r\n                    <td style="text-align: right;">\r\n                        <ul class="eav-entityselect-item-actions">\r\n                            <li>\r\n                                <a title="{{ \'FieldType.Entity.Edit\' | translate }}" ng-click="edit(item, index)" ng-show="to.settings.merged.EnableEdit" data-nodrag>\r\n                                    <i class="eav-icon-pencil"></i>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a title="{{ \'FieldType.Entity.Remove\' | translate }}" ng-click="removeSlot(item, $index)" class="eav-entityselect-item-remove" ng-show="to.settings.merged.EnableRemove" data-nodrag>\r\n                                    <i ng-class="{ \'eav-icon-minus-circled\': to.settings.merged.AllowMultiValue, \'eav-icon-down-dir\': !to.settings.merged.AllowMultiValue  }"></i>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <!-- todo: i18n, code in action, eav-icon-visiblity/alignment -->\r\n                                <a title="{{ \'FieldType.Entity.Delete\' | translate }}" ng-click="deleteItemInSlot(item, $index)" class="eav-entityselect-item-remove" ng-show="to.settings.merged.EnableDelete" data-nodrag>\r\n                                    <i class="eav-icon-cancel"></i>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n\r\n        <div class="eav-entityselect-actions" ng-class="{ \'no-add\': (!to.settings.merged.AllowMultiValue && chosenEntities.length > 0) }">\r\n\r\n            <!-- pick existing entity -->\r\n            <div class="eav-entityselect-action-addexisting"\r\n                 ng-show="to.settings.merged.EnableAddExisting && (to.settings.merged.AllowMultiValue || chosenEntities.length < 1)">\r\n                <div class="eav-entityselect-selector-wrapper">\r\n                    <div class="eav-entityselect-action-addexisting-close" ng-show="$select.open">Close</div>\r\n                    <ui-select theme="bootstrap"\r\n                               ng-model="selectedEntity"\r\n                               on-highlight="maybeReload()"\r\n                               ng-required="false"\r\n                               on-select="addEntity($select.selected.Value)">\r\n                        <ui-select-match placeholder="{{ $select.open ? \'search\' : \'FieldType.Entity.Choose\' | translate }}">\r\n                            <!--<div ng-bind="$select.selected.Text"></div>-->\r\n                            {{ \'FieldType.Entity.Choose\' | translate }}\r\n                        </ui-select-match>\r\n                        <ui-select-choices ng-style="{opacity: $select.open ? 1 : 0 }"  repeat="item in availableEntities | filter: { Text : $select.search } track by item.Value"\r\n                                           refresh="maybeReload()"\r\n                                           refresh-delay="0"\r\n                                           minimum-input-length="0"\r\n                                           ui-disable-choice="chosenEntities.indexOf(item.Value) != -1">\r\n                            <span ng-bind="item.Text"></span>\r\n                        </ui-select-choices>\r\n                    </ui-select>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- create new entity to add to this list -->\r\n            <button ng-if="to.settings.merged.EnableCreate && to.settings.merged.EntityType !== \'\' && (to.settings.merged.AllowMultiValue || chosenEntities.length < 1)"\r\n                    class="eav-entityselect-action-create icon-field-button"\r\n                    ng-click="openNewEntityDialog()">\r\n                <i class="eav-icon-plus"></i>\r\n            </button>\r\n        </div>\r\n        \r\n        <div ng-if="debug.on">\r\n            debug: <span ng-click="insertNull()">add null-item</span>\r\n        </div>\r\n\r\n        <!-- test - want to re-align how two add-scenarios work; ideally side-by side\r\n        <div class="subtle-till-mouseover"\r\n             ng-show="(to.settings.merged.EnableAddExisting && (to.settings.merged.AllowMultiValue || chosenEntities.length < 1)) || (to.settings.merged.EnableCreate && (to.settings.merged.AllowMultiValue || chosenEntities.length < 1))">\r\n        </div>-->\r\n    </div>\r\n</div>'),e.put("fields/string/string-contenttype.html",'<div>\r\n    <select class="form-control input-material material"\r\n            ng-model="value.Value">\r\n        <option value="">(none)</option>\r\n        <option\r\n            ng-repeat="item in contentTypes"\r\n            ng-selected="{{item.StaticName == value.Value}}"\r\n            value="{{item.StaticName}}">\r\n            {{item.Label}}\r\n        </option>\r\n    </select>\r\n</div>'),e.put("form/edit-many-entities.html",'<div ng-if="vm.items != null" ng-click="vm.debug.autoEnableAsNeeded($event)" class="form-container-multi">\r\n    <eav-language-switcher is-disabled="!vm.isValid()"></eav-language-switcher>\r\n    <div ng-repeat="p in vm.items" class="group-entity">\r\n        <div class="form-ci-title unhide-area" ng-click="p.collapse = !p.collapse">\r\n            <span style="position: relative">\r\n                <i class="decoration eav-icon-side-marker"></i>\r\n                <i class="decoration state eav-icon-minus collapse-entity-button hide-till-mouseover" ng-if="!p.collapse"></i>\r\n                <i class="decoration state eav-icon-plus collapse-entity-button" ng-if="p.collapse"></i>\r\n            </span>\r\n            {{p.Header.Title ? p.Header.Title : \'EditEntity.DefaultTitle\' | translate }}&nbsp;\r\n            <span ng-if="p.Header.Group.SlotCanBeEmpty" ng-click="vm.toggleSlotIsEmpty(p)" stop-event="click">\r\n                <i class="eav-icon-toggle-off" ng-class=" p.slotIsUsed ? \'eav-icon-toggle-on\' : \'eav-icon-toggle-off\' " ng-click="p.slotIsUsed = !p.slotIsUsed" uib-tooltip="{{\'EditEntity.SlotUsed\' + p.slotIsUsed | translate}}"></i>\r\n            </span>\r\n        </div>\r\n        <div ng-if="vm.itemsHelp[$index]" ng-bind-html="vm.itemsHelp[$index]"></div>\r\n        <eav-edit-entity-form entity="p.Entity" header="p.Header" register-edit-control="vm.registerEditControl" ng-hide="p.collapse"></eav-edit-entity-form>\r\n    </div>\r\n    <div>\r\n        <!-- note: the buttons are not really disabled, because we want to be able to click them and see the error message -->\r\n        <div class="btn-group" uib-dropdown>\r\n            <button ng-class="{ \'disabled\': !vm.isValid() || vm.isWorking > 0}" ng-click="vm.save(true)" type="button" class="btn btn-primary btn-lg submit-button">\r\n                <span class="eav-icon-ok" uib-tooltip="{{ \'Button.Save\' | translate }}"></span> &nbsp;<span translate="Button.Save"></span>\r\n            </button>\r\n            <button class="dropdown-toggle btn btn-primary btn-lg" ng-class="{ \'disabled\': !vm.isValid() || vm.isWorking > 0}" uib-dropdown-toggle><i class="caret"></i></button>\r\n            <ul class="dropdown-menu" role="menu">\r\n                <li><a ng-click="vm.save(true)"><i class="eav-icon-ok"></i> {{ \'Button.Save\' | translate }}</a></li>\r\n                <li><a ng-click="vm.save(false)"><i class="eav-icon-ok-circled2"></i> {{ \'Button.SaveAndKeepOpen\' | translate }}</a></li>\r\n            </ul>\r\n        </div>\r\n\r\n        &nbsp;\r\n        <!-- note: published status will apply to all - so the first is taken for identification if published -->\r\n        &nbsp;\r\n        <div class="btn-group" uib-dropdown>\r\n            <a class="dropdown-toggle" uib-dropdown-toggle><i ng-class="{\'eav-icon-eye\': vm.publishMode === \'show\', \'eav-icon-eye-close\': vm.publishMode === \'hide\', \'eav-icon-git-branch\': vm.publishMode === \'branch\'}"></i> {{ \'SaveMode.\' + vm.publishMode |translate }}<i class="caret"></i></a>\r\n            <ul class="dropdown-menu" role="menu">\r\n                <li ng-if="vm.versioningOptions.show"><a ng-click="vm.publishMode = \'show\'"><i class="eav-icon-eye"></i> {{ \'SaveMode.show\' |translate }}</a></li>\r\n                <li ng-if="vm.versioningOptions.hide"><a ng-click="vm.publishMode = \'hide\'"><i class="eav-icon-eye-close"></i> {{ \'SaveMode.hide\' |translate }}</a></li>\r\n                <li ng-if="vm.versioningOptions.branch" ng-show="vm.enableDraft"><a ng-click="vm.publishMode = \'branch\'"><i class="eav-icon-git-branch"></i> {{ \'SaveMode.branch\' |translate }}</a></li>\r\n            </ul>\r\n        </div>\r\n        <span ng-if="vm.debug.on">\r\n            <button class="eav-icon-flash btn" uib-tooltip="debug" ng-click="vm.showDebugItems = !vm.showDebugItems"></button>\r\n        </span>\r\n        <show-debug-availability class="pull-right" style="margin-top: 20px;"></show-debug-availability>\r\n    </div>\r\n    <div ng-if="vm.debug.on && vm.showDebugItems">\r\n        <div>\r\n            isValid: {{vm.isValid()}}<br />\r\n            isWorking: {{vm.isWorking}}\r\n        </div>\r\n        <pre>{{ vm.items | json }}</pre>\r\n    </div>\r\n</div>'),e.put("form/edit-single-entity.html",'<div ng-show="vm.editInDefaultLanguageFirst()" translate="Message.PleaseCreateDefLang">\r\n	\r\n</div>\r\n<div ng-show="!vm.editInDefaultLanguageFirst()">\r\n    <formly-form ng-if="vm.formFields && vm.formFields.length" ng-submit="vm.onSubmit()" form="vm.form" model="vm.entity.Attributes" fields="vm.formFields"></formly-form>\r\n</div>\r\n'),e.put("form/main-form.html",'<div class="modal-body-disabled">\r\n    <span class="pull-right">\r\n        <span style="display: inline-block; position: relative; left:0px">\r\n            <button class="btn btn-default btn-icon-square btn-subtle" type="button" ng-click="vm.close()">\r\n                <i class="eav-icon-cancel"></i>\r\n            </button>\r\n        </span>\r\n    </span>\r\n    <eav-edit-entities part-of-page="vm.partOfPage" publishing="vm.publishing" item-list="vm.itemList" after-save-event="vm.afterSave" state="vm.state" close="vm.close"></eav-edit-entities>\r\n</div>'),e.put("localization/formly-localization-wrapper.html",'<eav-localization-scope-control></eav-localization-scope-control>\r\n<div ng-if="!!value">\r\n    <formly-transclude></formly-transclude>\r\n    <eav-localization-menu form-model="model" field-model="model[options.key]" options="options" value="value" index="index"></eav-localization-menu>\r\n</div>\r\n<p class="bg-info" style="padding:12px;" ng-if="!value" translate="LangWrapper.CreateValueInDefFirst" translate-values="{ fieldname: \'{{to.label}}\' }">Please... <i>\'{{to.label}}\'</i> in the def...</p>'),e.put("localization/language-switcher.html",'<uib-tabset ng-init="activeLang = languages.currentLanguage;" active="activeLang">\r\n    <uib-tab ng-repeat="l in languages.languages" index="l.key" heading="{{ l.name.substring(0, l.name.indexOf(\'(\') > 0 ? l.name.indexOf(\'(\') - 1 : 100 ) }}" ng-click="!isDisabled ? languages.currentLanguage = l.key : false;" disable="isDisabled" uib-tooltip="{{l.name}}"></uib-tab><!-- -->\r\n</uib-tabset>'),e.put("localization/localization-menu.html",'<div uib-dropdown is-open="status.isopen" class="eav-localization"> <!--style="z-index:{{1000 - index}};"-->\r\n	<a class="eav-localization-lock" ng-click="vm.actions.toggleTranslate();" ng-if="vm.isDefaultLanguage()" title="{{vm.tooltip()}}" ng-class="{ \'eav-localization-lock-open\': !options.templateOptions.disabled }" uib-dropdown-toggle>\r\n        {{vm.infoMessage()}} <i class="glyphicon glyphicon-globe"></i>\r\n	</a>\r\n    <ul class="dropdown-menu multi-level pull-right eav-localization-dropdown" role="menu" aria-labelledby="single-button">\r\n        <li role="menuitem"><a ng-click="vm.actions.translate()" translate="LangMenu.Unlink"></a></li>\r\n        <li role="menuitem"><a ng-click="vm.actions.linkDefault()" translate="LangMenu.LinkDefault"></a></li>\r\n        <!-- Google translate is disabled because there is no longer a free version\r\n            <li role="menuitem" class="dropdown-submenu">\r\n            <a href="#" translate="LangMenu.GoogleTranslate"></a>\r\n            <ul class="dropdown-menu">\r\n                <li ng-repeat="language in vm.languages.languages" role="menuitem">\r\n                    <a ng-click="vm.actions.autoTranslate(language.key)" title="{{language.name}}" href="#">{{language.key}}</a>\r\n                </li>\r\n            </ul>\r\n        </li>-->\r\n        <li role="menuitem" class="dropdown-submenu">\r\n            <a href="#" translate="LangMenu.Copy"></a>\r\n            <ul class="dropdown-menu">\r\n                <li ng-repeat="language in vm.languages.languages" ng-class="{ disabled: options.templateOptions.disabled || !vm.hasLanguage(language.key) }" role="menuitem">\r\n                    <a ng-click="vm.actions.copyFrom(language.key)" title="{{language.name}}" href="#">{{language.key}}</a>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n        <li role="menuitem" class="dropdown-submenu">\r\n            <a href="#" translate="LangMenu.Use"></a>\r\n            <ul class="dropdown-menu">\r\n                <li ng-repeat="language in vm.languages.languages" ng-class="{ disabled: !vm.hasLanguage(language.key) }" role="menuitem">\r\n                    <a ng-click="vm.actions.useFrom(language.key)" title="{{language.name}}" href="#">{{language.key}}</a>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n        <li role="menuitem" class="dropdown-submenu">\r\n            <a href="#" translate="LangMenu.Share"></a>\r\n            <ul class="dropdown-menu">\r\n                <li ng-repeat="language in vm.languages.languages" ng-class="{ disabled: !vm.hasLanguage(language.key) }" role="menuitem">\r\n                    <a ng-click="vm.actions.shareFrom(language.key)" title="{{language.name}}" href="#">{{language.key}}</a>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n        <!-- All fields -->\r\n        <li class="divider"></li>\r\n        <li role="menuitem" class="dropdown-submenu">\r\n            <a href="#" translate="LangMenu.AllFields"></a>\r\n            <ul class="dropdown-menu">\r\n                <li role="menuitem"><a ng-click="vm.actions.all.translate()" translate="LangMenu.Unlink"></a></li>\r\n                <li role="menuitem"><a ng-click="vm.actions.all.linkDefault()" translate="LangMenu.LinkDefault"></a></li>\r\n                <li role="menuitem" class="dropdown-submenu">\r\n                    <a href="#" translate="LangMenu.Copy"></a>\r\n                    <ul class="dropdown-menu">\r\n                        <li ng-repeat="language in vm.languages.languages" role="menuitem">\r\n                            <a ng-click="vm.actions.all.copyFrom(language.key)" title="{{language.name}}" href="#">{{language.key}}</a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                <li role="menuitem" class="dropdown-submenu">\r\n                    <a href="#" translate="LangMenu.Use"></a>\r\n                    <ul class="dropdown-menu">\r\n                        <li ng-repeat="language in vm.languages.languages" role="menuitem">\r\n                            <a ng-click="vm.actions.all.useFrom(language.key)" title="{{language.name}}" href="#">{{language.key}}</a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                <li role="menuitem" class="dropdown-submenu">\r\n                    <a href="#" translate="LangMenu.Share"></a>\r\n                    <ul class="dropdown-menu">\r\n                        <li ng-repeat="language in vm.languages.languages" role="menuitem">\r\n                            <a ng-click="vm.actions.all.shareFrom(language.key)" title="{{language.name}}" href="#">{{language.key}}</a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n    </ul>\r\n</div>'),e.put("ml-entities/tests/SpecRunner.html",'<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset="utf-8">\r\n  <title>Jasmine Spec Runner v2.3.4</title>\r\n    <!--\r\n  <link rel="shortcut icon" type="image/png" href="lib/jasmine-2.3.4/jasmine_favicon.png">\r\n  <link rel="stylesheet" href="lib/jasmine-2.3.4/jasmine.css">\r\n\r\n  <script src="lib/jasmine-2.3.4/jasmine.js"></script>\r\n  <script src="lib/jasmine-2.3.4/jasmine-html.js"></script>\r\n  <script src="lib/jasmine-2.3.4/boot.js"></script>\r\n        -->\r\n\r\n    <link rel="stylesheet" href="../../../../node_modules\\grunt-contrib-jasmine\\node_modules\\jasmine-core/lib/jasmine-core/jasmine.css">\r\n    <script src="../../../../node_modules\\grunt-contrib-jasmine\\node_modules\\jasmine-core/lib/jasmine-core/jasmine.js"></script>\r\n    <script src="../../../../node_modules\\grunt-contrib-jasmine\\node_modules\\jasmine-core/lib/jasmine-core/jasmine-html.js"></script>\r\n    <script src="../../../../node_modules\\grunt-contrib-jasmine\\node_modules\\jasmine-core/lib/jasmine-core/boot.js"></script>\r\n  <!-- include source files here... -->\r\n    <!--\r\n  <script src="src/Player.js"></script>\r\n  <script src="src/Song.js"></script>\r\n    -->\r\n    <script src="../entity-enhancer.js"></script>\r\n\r\n\r\n  <!-- include spec files here... -->\r\n    <!--\r\n  <script src="spec/SpecHelper.js"></script>\r\n  <script src="spec/PlayerSpec.js"></script>\r\n        -->\r\n    <script src="../specs/eav-content-ml.spec.js"></script>\r\n\r\n</head>\r\n\r\n<body>\r\n</body>\r\n</html>\r\n'),e.put("wrappers/collapsible.html",'<!-- hide entire field if necessary-->\r\n<div ng-show="!to.collapse" class="group-field-set form-field-grid-keeper">\r\n    <formly-transclude></formly-transclude>\r\n</div>'),e.put("wrappers/disablevisually.html",'<div visually-disabled="{{to.disabled}}">\r\n    <formly-transclude></formly-transclude>\r\n</div>'),e.put("wrappers/eav-label-inside.html",'<label for="{{id}}" class="control-label eav-label {{to.labelSrOnly ? \'sr-only\' : \'\'}} {{to.type}}"\r\n       ng-if="to.label"\r\n       ng-click="to.collapseField = !to.collapseField">\r\n    {{to.label}}\r\n    {{to.required ? \'*\' : \'\'}}\r\n    <a tabindex="-1" ng-click="to.showDescription = !to.showDescription" href="javascript:void(0);" ng-if="to.description && to.description != \'\'">\r\n        <i class="eav-icon-info-circled low-priority"></i>\r\n    </a>\r\n    <span class="btn-sm" ng-if="to.enableCollapseField">\r\n        <span ng-if="to.collapseField" class="eav-icon-plus-circled low-priority collapse-fieldgroup-button"></span>\r\n        <span ng-if="!to.collapseField" class="eav-icon-minus-circled low-priority collapse-fieldgroup-button"></span>\r\n    </span>\r\n</label>'),e.put("wrappers/eav-label.html",'<div>\r\n    <!-- just fyi: the ng-class adds a "float-away" if the notes are shown or if the field has content -->\r\n    <div>\r\n        <div class="inside" ng-include="\'wrappers/eav-label-inside.html\'"></div>\r\n        <div ng-if="to.showDescription" class="info-wrapper">\r\n            <p class="bg-info" style="padding: 5px;" ng-bind-html="to.description">\r\n            </p>\r\n        </div>\r\n\r\n        <div ng-show="!(to.collapseField && to.enableCollapseField)">\r\n            <formly-transclude></formly-transclude>\r\n        </div>\r\n        \r\n        <!-- special debug layer, only enable during advanced debugging, usually never needed -->\r\n        <div ng-if="false && debug.on">\r\n            Field-Debug: {{fc}}\r\n        </div>\r\n    </div>\r\n</div>'),e.put("wrappers/field-group.html",'<div>\r\n    <div class="form-ci-subtitle unhide-area" ng-click="toggle()">\r\n        <span style="position: relative">\r\n            <i class="eav-icon-side-marker decoration"></i>\r\n            <span ng-if="to.collapseGroup" class="decoration state eav-icon-plus-circled low-priority collapse-fieldgroup-button"></span>\r\n            <span ng-if="!to.collapseGroup" class="decoration state eav-icon-minus-circled low-priority collapse-fieldgroup-button hide-till-mouseover"></span>\r\n        </span>\r\n        {{to.label}}\r\n    </div>\r\n    <div ng-if="!to.collapseGroup" style="padding: 5px;" ng-bind-html="to.description">\r\n    </div>\r\n    <formly-transclude></formly-transclude>\r\n</div>'),e.put("wrappers/float-label.html","<div class=\"wrap-float-label\"\r\n     ng-class=\"[\r\n     {'float-disabled': value.Value || (fc[0] || fc).$modelValue || to.showDescription || to.focused || ( (fc[0] || fc).$invalid && (fc[0] || fc).$touched ) },\r\n     {focused: to.focused},\r\n     {'ng-touched': (fc[0] || fc).$touched},\r\n     {'ng-invalid' : (fc[0] || fc).$invalid}\r\n     ]\">\r\n    <formly-transclude></formly-transclude>\r\n</div>"),e.put("wrappers/hidden.html",'<div ng-show="{{to.settings.All.VisibleInEditUI || to.debug}}">\r\n    <formly-transclude></formly-transclude>\r\n</div>'),e.put("wrappers/no-label-space.html",'<div class="no-label-space">\r\n    <formly-transclude></formly-transclude>\r\n</div>'),e.put("wrappers/preview-default.html",'<div class="preview-default">\r\n    <div class="preview-area"></div>\r\n    <div>\r\n        <formly-transclude></formly-transclude>\r\n    </div>\r\n</div>'),e.put("wrappers/responsive.html",'<div class="clearfix">\r\n    <div class="responsive-optional" >\r\n        <div ng-include="\'wrappers/eav-label-inside.html\'"></div>\r\n    </div>\r\n    <div class="responsive-priority">\r\n        <formly-transclude></formly-transclude>\r\n    </div>\r\n</div>')}]),function(){"use strict";angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setWrapper({name:"collapsible",templateUrl:"wrappers/collapsible.html"})}])}(),function(){"use strict";angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setWrapper({name:"disablevisually",templateUrl:"wrappers/disablevisually.html"})}])}(),function(){"use strict";angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setWrapper({name:"eavLabel",templateUrl:"wrappers/eav-label.html"})}])}(),function(){"use strict";angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setWrapper({name:"fieldGroup",templateUrl:"wrappers/field-group.html"})}])}(),function(){"use strict";angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setWrapper({name:"float-label",templateUrl:"wrappers/float-label.html"})}])}(),function(){"use strict";angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setWrapper({name:"hiddenIfNeeded",templateUrl:"wrappers/hidden.html"})}])}(),function(){"use strict";angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setWrapper({name:"no-label-space",templateUrl:"wrappers/no-label-space.html"})}])}(),function(){"use strict";angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setWrapper({name:"preview-default",templateUrl:"wrappers/preview-default.html"})}])}(),function(){"use strict";angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setWrapper({name:"responsive",templateUrl:"wrappers/responsive.html"})}])}();