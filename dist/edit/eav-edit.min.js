function enhanceEntity(e){var t=this;return t.enhanceWithCount=function(e){e.count=function(){var e,t=0;for(e in this)this.hasOwnProperty(e)&&"function"!=typeof this[e]&&t++;return t}},t.enhanceVs=function(e){return e.hasLanguage=function(e){return this.Dimensions.hasOwnProperty(e)},e.setLanguage=function(e,t){this.Dimensions[e]=t},e.languageMode=function(e){return this.hasLanguage(e)?this.Dimensions[e]:null},e},t.enhanceAtt=function(e){e.getVsWithLanguage=function(e){for(var t=0;t<this.Values.length;t++)if(this.Values[t].hasLanguage(e))return this.Values[t];return null},e.setLanguageToVs=function(e,t,n){return e.hasLanguage(t)?e.setLanguage(t,n):(this.removeLanguage(t),e.setLanguage(t,n))},e.removeLanguage=function(e){var t=this.getVsWithLanguage(e);null!==t&&(delete t.Dimensions[e],0===Object.keys(t.Dimensions).length&&this.Values.length>0&&this.removeVs(t))},e.removeVs=function(e){for(var t=0;t<this.Values.length;t++)this.Values[t]===e&&this.Values.splice(t,1)},e.addVs=function(e,n,a){var i={};null!==n&&(i[n]=null===a||void 0===a?!1:a);var l={Value:e,Dimensions:i};this.Values.push(t.enhanceVs(l))};for(var n=0;n<e.Values.length;n++)t.enhanceVs(e.Values[n]);return e},t.enhanceEntity=function(e){e.getTitle=function(){e.getAttribute(e.TitleAttributeName)},e.hasAttribute=function(t){return void 0!==e.Attributes[t]},e.getAttribute=function(t){return e.Attributes[t]},e.Attributes.addAttribute=function(n){e.Attributes[n]={Values:[]},t.enhanceAtt(e.Attributes[n])};for(var n in e.Attributes)e.Attributes.hasOwnProperty(n)&&"function"!=typeof e.Attributes[n]&&t.enhanceAtt(e.Attributes[n]);return e},t.enhanceEntity(e)}!function(){"use strict";angular.module("eavCustomFields",["oc.lazyLoad"]).config(["$ocLazyLoadProvider",function(e){e.config({debug:!0})}])}(),function(){"use strict";angular.module("eavEditEntity",["formly","ui.bootstrap","uiSwitch","toastr","ngAnimate","EavServices","eavEditTemplates","eavFieldTemplates","eavCustomFields","oc.lazyLoad"])}(),angular.module("eavFieldTemplates",["formly","formlyBootstrap","ui.bootstrap","eavLocalization","eavEditTemplates","ui.tree"]).constant("defaultFieldWrappers",["eavLabel","bootstrapHasError","disablevisually","eavLocalization","collapsible"]),angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setType({name:"boolean-default",templateUrl:"fields/boolean/boolean-default.html",wrapper:["bootstrapHasError","disablevisually","eavLocalization","collapsible"]})}]),angular.module("eavFieldTemplates").config(["formlyConfigProvider","defaultFieldWrappers",function(e,t){e.setType({name:"custom-default",templateUrl:"fields/custom/custom-default.html",wrapper:t})}]),Date.prototype.toJSON=function(){var e=new Date(this);return e.setHours(e.getHours()-e.getTimezoneOffset()/60),e.toISOString()},angular.module("eavFieldTemplates").config(["formlyConfigProvider","defaultFieldWrappers",function(e,t){e.setType({name:"datetime-default",wrapper:t,template:'<div><div class="input-group"><div class="input-group-addon" style="cursor:pointer;" ng-click="to.isOpen = true;"><i class="glyphicon glyphicon-calendar"></i></div><input class="form-control input-lg" ng-model="value.Value" is-open="to.isOpen" datepicker-options="to.datepickerOptions" datepicker-popup /><timepicker ng-show="to.settings.merged.UseTimePicker" ng-model="value.Value" show-meridian="ismeridian"></timepicker></div>',defaultOptions:{templateOptions:{datepickerOptions:{},datepickerPopup:"dd.MM.yyyy"}},link:function(e,t,n){function a(e){return new Date(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate(),e.getUTCHours(),e.getUTCMinutes(),e.getUTCSeconds())}e.value&&e.value.Value&&"string"==typeof e.value.Value&&(e.value.Value=a(new Date(e.value.Value)))}})}]),angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setType({name:"empty-default",templateUrl:"fields/empty/empty-default.html",wrapper:["fieldGroup"]})}]),angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setType({name:"entity-default",templateUrl:"fields/entity/entity-default.html",wrapper:["eavLabel","bootstrapHasError","collapsible"],controller:"FieldTemplate-EntityCtrl"})}]).controller("FieldTemplate-EntityCtrl",["$scope","$http","$filter","$translate","$modal","appId","eavAdminDialogs","eavDefaultValueService",function(e,t,n,a,i,l,r,o){e.to.settings.merged||(e.to.settings.merged={}),e.availableEntities=[],void 0!==e.model[e.options.key]&&""!==e.model[e.options.key].Values[0].Value||(e.model[e.options.key]={Values:[{Value:o(e.options),Dimensions:{}}]}),e.chosenEntities=e.model[e.options.key].Values[0].Value,e.selectedEntity=null,e.addEntity=function(){null!==e.selectedEntity&&(e.chosenEntities.push(e.selectedEntity),e.selectedEntity=null)},e.createEntityAllowed=function(){var t=e.to.settings.merged;return null!==t.EntityType&&""!==t.EntityType&&t.EnableCreate},e.openNewEntityDialog=function(){function t(t){t&&null!==t.data&&void 0!==t.data&&e.getAvailableEntities().then(function(){e.chosenEntities.push(Object.keys(t.data)[0])})}r.openItemNew(e.to.settings.merged.EntityType,t)},e.getAvailableEntities=function(){return t({method:"GET",url:"eav/EntityPicker/getavailableentities",params:{contentTypeName:e.to.settings.merged.EntityType,appId:l}}).then(function(t){e.availableEntities=t.data})},e.getEntityText=function(t){if(null===t)return"empty slot";var i=n("filter")(e.availableEntities,{Value:t});return i.length>0?i[0].Text:a.instant("FieldType.Entity.EntityNotFound")},e.removeSlot=function(t,n){e.chosenEntities.splice(n,1)},e.deleteItemInSlot=function(e,t){alert("this feature is not implemented yet, sorry. it will be added some day...")},e.edit=function(t,a){if(null===t)return alert("no can do");var i=n("filter")(e.availableEntities,{Value:t}),l=i[0].Id;r.openItemEditWithEntityId(l,e.getAvailableEntities)},e.getAvailableEntities()}]).directive("entityValidation",[function(){return{restrict:"A",require:"?ngModel",link:function(e,t,n,a){a&&(a.$validators.required=function(t,n){if(!e.$parent.$parent.to.required)return!0;var a=t||n;return a&&Array.isArray(a)?a.length>0:!0},e.$watch(function(){return a.$viewValue},function(e){a.$validate()},!0))}}}]),angular.module("eavFieldTemplates").config(["formlyConfigProvider","defaultFieldWrappers",function(e,t){e.setType({name:"number-default",template:'<input type="number" class="form-control input-lg" ng-model="value.Value">{{vm.isGoogleMap}}',wrapper:t,defaultOptions:{ngModelAttrs:{"{{to.settings.merged.Min}}":{value:"min"},"{{to.settings.merged.Max}}":{value:"max"},'{{to.settings.merged.Decimals ? "^[0-9]+(.[0-9]{1," + to.settings.merged.Decimals + "})?$" : null}}':{value:"pattern"}}},controller:"FieldTemplate-NumberCtrl as vm"})}]).controller("FieldTemplate-NumberCtrl",function(){}),angular.module("eavFieldTemplates").config(["formlyConfigProvider","defaultFieldWrappers",function(e,t){e.setType({name:"string-default",template:'<div><input class="form-control input-lg" ng-if="!(options.templateOptions.settings.merged.RowCount > 1)" ng-pattern="vm.regexPattern" ng-model="value.Value"><textarea ng-if="options.templateOptions.settings.merged.RowCount > 1" rows="{{options.templateOptions.settings.merged.RowCount}}" class="form-control input-lg" ng-model="value.Value"></textarea></div>',wrapper:t,controller:"FieldTemplate-StringCtrl as vm"})}]).controller("FieldTemplate-StringCtrl",["$scope",function(e){var t=this,n=".*",a=e.options.templateOptions.settings.merged;a&&a.ValidationRegExJavaScript&&(n=a.ValidationRegExJavaScript),t.regexPattern=new RegExp(n,"i"),console.log(e.options.templateOptions)}]),angular.module("eavFieldTemplates").config(["formlyConfigProvider","defaultFieldWrappers",function(e,t){e.setType({name:"string-dropdown",template:'<select class="form-control input-lg" ng-model="value.Value"></select>',wrapper:t,defaultOptions:function(e){function t(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0})}if(e.templateOptions.settings&&e.templateOptions.settings.merged&&e.templateOptions.settings.merged.DropdownValues){var n=e.templateOptions.settings.merged.DropdownValues;n=n.replace(/\r/g,"").split("\n"),n=n.map(function(e,t){var n=e.split(":");return{name:n[0],value:n[1]||""===n[1]?n[1]:n[0]}}),e.templateOptions.options=n}var a=e.templateOptions.ngOptions||"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options";return{ngModelAttrs:t({},a,{value:"ng-options"})}}})}]),angular.module("eavFieldTemplates").config(["formlyConfigProvider","defaultFieldWrappers",function(e,t){e.setType({name:"string-url-path",template:'<div><input class="form-control input-lg" only-simple-url-chars ng-pattern="vm.regexPattern" ng-model="value.Value" ng-blur="vm.finalClean()"></div>',wrapper:t,controller:"FieldTemplate-String-Url-Path-Ctrl as vm"})}]).controller("FieldTemplate-String-Url-Path-Ctrl",["$scope","debugState","stripNonUrlCharacters","fieldMask",function(e,t,n,a){var i=this,l=e.to.settings["string-url-path"],r=l?l.AutoGenerateMask||null:null,o=a(r,e.model,function(e,t){return t.replace("/","-").replace("\\","-")}),s=!0;e.enablePath=s,i.lastAutoCopy="",i.sourcesChangedTryToUpdate=function(){if(!e.value||!e.value.Value||e.value.Value===i.lastAutoCopy){var t=o.resolve(),a=n(t,s,!0);a&&(i.lastAutoCopy=a,e.value.Value=a)}};var u=".*",c=e.options.templateOptions.settings.merged;c&&c.ValidationRegExJavaScript&&(u=c.ValidationRegExJavaScript),i.regexPattern=new RegExp(u,"i"),i.finalClean=function(){var t=e.value.Value,a=n(t,s,!0);t!==a&&(e.value.Value=a)},i.activate=function(){angular.forEach(o.fieldList(),function(n,a){e.$watch("model."+n+"._currentValue.Value",function(){t.on&&console.log("url-path: "+n+" changed..."),i.sourcesChangedTryToUpdate(r)})}),e.debug=t,t.on&&console.log(e.options.templateOptions)},i.activate()}]).factory("stripNonUrlCharacters",function(){return function(e,t,n){if(!e)return"";var a=t?/[^a-z0-9-_/]+/gi:/[^a-z0-9-_]+/gi,i=e.toLowerCase().replace("'s ","s ").replace("\\","/").replace(a,"-");return i=i.replace(/-+/gi,"-").replace(/\/+/gi,"/").replace(n?/^-|-+$/gi:/^-/gi,"")}}).directive("onlySimpleUrlChars",["stripNonUrlCharacters",function(e){return{require:"ngModel",restrict:"A",link:function(t,n,a,i){i.$parsers.push(function(n){if(null===n)return"";var a=e(n,t.enablePath,!1);return a!==n&&(i.$setViewValue(a),i.$render()),a})}}}]),function(){"use strict";var e=angular.module("eavEditEntity");e.controller("EditEntities",["appId","$http","$scope","entitiesSvc","toastr","saveToastr","$translate","debugState","ctrlS",function(e,t,n,a,i,l,r,o,s){function u(){d.saveShortcut=s(function(){d.save()}),d.loadAll()}function c(){d.saveShortcut.unbind()}var d=this;d.debug=o,d.isWorking=0,d.registeredControls=[],d.items=null,d.willPublish=!1,n.$on("$destroy",function(){c()}),d.registerEditControl=function(e){d.registeredControls.push(e)},d.loadAll=function(){a.getManyForEditing(e,n.itemList).then(function(e){d.items=e.data,angular.forEach(d.items,function(e,t){!d.items[t].Entity&&d.items[t].Header.ContentTypeName&&(d.items[t].Entity=a.newEntity(d.items[t].Header)),d.items[t].Entity=enhanceEntity(d.items[t].Entity);var n=d.items[t].Header.Group;d.items[t].slotIsUsed=null===n||n.SlotIsEmpty!==!0}),d.willPublish=d.items[0].Entity.IsPublished})},d.showFormErrors=function(){for(var e=d.formErrors(),t=[],n=r.instant("Message.FieldErrorList"),a=0;a<e.length;a++)if(e[a].required){var l=e[a].required.map(function(e){return{field:e.$name,error:"required"}});t=t.concat(l)}var o=t.map(function(e){var t=e.field.split("_");return n.replace("{form}",t[1]).replace("{field}",t[3]).replace("{error}",e.error)}),s=o.join("<br/>");return i.error(r.instant("Message.CantSaveInvalid").replace("{0}",s),r.instant("Message.Error"),{allowHtml:!0})},d.save=function(t){return d.isValid()?d.isWorking>0?i.error(r.instant("Message.CantSaveProcessing")):(d.isWorking++,void l(a.saveMany(e,d.items)).then(function(e){n.state.setPristine(),t&&d.afterSaveEvent(e),d.isWorking--},function(e){d.isWorking--})):d.showFormErrors()},d.afterSaveEvent=n.afterSaveEvent,d.isValid=function(){var e=!0;return angular.forEach(d.registeredControls,function(t,n){t.isValid()||(e=!1)}),e},d.formErrors=function(){var e=[];return angular.forEach(d.registeredControls,function(t,n){t.isValid()||e.push(t.error())}),e},n.state.isDirty=function(){var e=!1;return angular.forEach(d.registeredControls,function(t,n){t.isDirty()&&(e=!0)}),e},n.state.setPristine=function(){angular.forEach(d.registeredControls,function(e,t){e.setPristine()})},n.$watch("vm.willPublish",function(e,t){angular.forEach(d.items,function(e,t){d.items[t].Entity.IsPublished=d.willPublish})}),d.toggleSlotIsEmpty=function(e){e.Header.Group||(e.Header.Group={}),e.Header.Group.SlotIsEmpty=!e.Header.Group.SlotIsEmpty,e.slotIsUsed=!e.Header.Group.SlotIsEmpty},u()}])}(),function(){"use strict";var e=angular.module("eavEditEntity");e.directive("eavEditEntities",function(){return{templateUrl:"form/edit-many-entities.html",restrict:"E",scope:{itemList:"=",afterSaveEvent:"=",state:"="},controller:"EditEntities",controllerAs:"vm"}})}(),function(){"use strict";var e=angular.module("eavEditEntity");e.controller("EditEntityFormCtrl",["appId","$http","$scope","formlyConfig","contentTypeFieldSvc","$sce","debugState","customInputTypes","eavConfig",function(e,t,n,a,i,l,r,o,s){var u=this;u.editInDefaultLanguageFirst=function(){return!1},u.control={isValid:function(){return 0===u.formFields.length||u.form&&u.form.$valid},isDirty:function(){return u.form&&u.form.$dirty},setPristine:function(){u.form&&u.form.$setPristine()},error:function(){return u.form.$error}},n.registerEditControl&&n.registerEditControl(u.control),u.model=null,u.entity=n.entity,u.formFields=[];var c=function(){i(e,{StaticName:u.entity.Type.StaticName}).getFields().then(function(e){u.debug=e,angular.forEach(e.data,function(e,t){e.InputType=u.getType(e),s.formly.inputTypeReconfig(e),e.InputTypeConfig&&o.addInputType(e)});var t=o.loadWithPromise();t.then(function(t){u.registerAllFieldsFromReturnedDefinition(e)})})};u.registerAllFieldsFromReturnedDefinition=function(e){var t=0;angular.forEach(e.data,function(e,a){void 0===e.Metadata.All&&(e.Metadata.All={});var i=e.InputType,o="empty-default"===i;o&&(t=a);var s={key:e.StaticName,type:i,templateOptions:{required:!!e.Metadata.All.Required,label:void 0===e.Metadata.All.Name?e.StaticName:e.Metadata.All.Name,description:l.trustAsHtml(e.Metadata.All.Notes),settings:e.Metadata,header:n.header,canCollapse:t>0&&!o,fieldGroup:u.formFields[t],disabled:e.Metadata.All.Disabled,langReadOnly:!1},className:"type-"+e.Type.toLowerCase()+" input-"+i+" field-"+e.StaticName.toLowerCase(),hide:e.Metadata.All.VisibleInEditUI===!1?!r.on:!1,expressionProperties:{"templateOptions.disabled":"options.templateOptions.disabled"},watcher:[{expression:function(t,n,a){return e.Metadata.All.Disabled||t.templateOptions.header.Group&&t.templateOptions.header.Group.SlotIsEmpty||t.templateOptions.langReadOnly},listener:function(e,t,n,a,i){e.templateOptions.disabled=t}},{expression:function(e,t,n){return e.templateOptions.canCollapse?e.templateOptions.fieldGroup.templateOptions.collapseGroup:null},listener:function(e,t,n,a,i){e.templateOptions.canCollapse&&(e.templateOptions.collapse=t)}}]};u.formFields.push(s)})},null!==u.entity&&c(),u.getType=function(e){var t=e,n=t.Type.toLowerCase(),i="";"unknown"!==t.InputType?i=t.InputType:t.Metadata.merged&&t.Metadata.merged.InputType&&(i=t.Metadata.merged.InputType),i&&-1===i.indexOf("-")&&(i=n+"-"+i);var l=i&&s.formly.inputTypeReplacementMap[i];if(!l){var r=a.getType(i),o=t.InputTypeConfig?!!t.InputTypeConfig.Assets:!1;i&&(r||o)||(i=n+"-default"),l=i&&s.formly.inputTypeReplacementMap[i]}return l&&(i=s.formly.inputTypeReplacementMap[i]),i}}])}(),function(){"use strict";angular.module("eavEditEntity").directive("eavEditEntityForm",function(){return{templateUrl:"form/edit-single-entity.html",restrict:"E",scope:{entity:"=",header:"=",registerEditControl:"="},controller:"EditEntityFormCtrl",controllerAs:"vm"}})}(),function(){"use strict";var e=angular.module("eavEditEntity");e.controller("EditEntityWrapperCtrl",["$q","$http","$scope","items","$modalInstance","$window","$translate",function(e,t,n,a,i,l,r){var o=this;o.itemList=a,o.afterSave=function(e){200===e.status?o.close(e):alert(r.instant("Errors.UnclearError"))},o.state={isDirty:function(){throw r.instant("Errors.InnerControlMustOverride")}},o.close=function(e){i.close(e)},o.maybeLeave=function(e){var t=r.instant("Errors.UnsavedChanges");o.state.isDirty()&&!confirm(t+" "+r.instant("Message.ExitOk"))&&e.preventDefault()},n.$on("modal.closing",o.maybeLeave),l.addEventListener("beforeunload",function(e){var t=r.instant("Errors.UnsavedChanges");return o.state.isDirty()?((e||window.event).returnValue=t,t):null})}])}(),function(){"use strict";var e=angular.module("eavLocalization",["formly","EavConfiguration"],["formlyConfigProvider",function(e){e.setWrapper([{name:"eavLocalization",templateUrl:"localization/formly-localization-wrapper.html"}])}]);e.directive("eavLanguageSwitcher",function(){return{restrict:"E",templateUrl:"localization/language-switcher.html",controller:["$scope","languages",function(e,t){e.languages=t}],scope:{isDisabled:"=isDisabled"}}}),e.directive("eavLocalizationScopeControl",function(){return{restrict:"E",transclude:!0,template:"",link:function(e,t,n){},controller:["$scope","$filter","$translate","eavDefaultValueService","languages",function(e,t,n,a,i){var l=e,r=i,o=function(){l.model[l.options.key]||l.model.addAttribute(l.options.key);var i=l.model[l.options.key];if(0===i.Values.length){if(r.currentLanguage!=r.defaultLanguage)return;var o=a(l.options),s=r.languages.length>0?r.currentLanguage:null;i.addVs(o,s)}0===Object.keys(i.Values[0].Dimensions).length&&r.languages.length>0&&(i.Values[0].Dimensions[r.defaultLanguage]=!1);var u;if(u=t("filter")(i.Values,function(e,t){return void 0!==e.Dimensions[r.currentLanguage]})[0],void 0===u&&(u=t("filter")(i.Values,function(e,t){return void 0!==e.Dimensions[r.defaultLanguage]})[0]),void 0===u){if(i.Values.length>1)throw n.instant("Errors.DefLangNotFound")+" "+e.options.key;u=i.Values[0]}i._currentValue=u,l.value=i._currentValue;var c=r.currentLanguage==r.defaultLanguage||l.value&&l.value.Dimensions[r.currentLanguage]===!1;l.to.langReadOnly=!c};o(),l.langConf=r,l.$watch("langConf.currentLanguage",function(e,t){void 0!==t&&e!=t&&o()}),l.$watch("model[options.key].Values",function(e,t){o()},!0),l.model[l.options.key]._initCurrentValue=o}]}}),e.directive("eavLocalizationMenu",function(){return{restrict:"E",scope:{fieldModel:"=fieldModel",options:"=options",value:"=value",index:"=index",formModel:"=formModel"},templateUrl:"localization/localization-menu.html",link:function(e,t,n){},controllerAs:"vm",controller:["$scope","languages","$translate",function(e,t,n){var a=this,i=n.instant("LangMenu.UseDefault");n.instant("LangMenu.In");a.fieldModel=e.fieldModel,a.languages=t,a.hasLanguage=function(e){return null!==a.fieldModel.getVsWithLanguage(e)},a.isDefaultLanguage=function(){return t.currentLanguage!=t.defaultLanguage},a.enableTranslate=function(){return null===a.fieldModel.getVsWithLanguage(t.currentLanguage)},a.infoMessage=function(){return 1===Object.keys(e.value.Dimensions).length&&e.value.Dimensions[t.defaultLanguage]===!1?i:1===Object.keys(e.value.Dimensions).length&&e.value.Dimensions[t.currentLanguage]===!1?"":n.instant("LangMenu.In",{languages:Object.keys(e.value.Dimensions).join(", ")})},a.tooltip=function(){var t=[],a=[];angular.forEach(e.value.Dimensions,function(e,n){(e?a:t).push(n)});var i=n.instant("LangMenu.EditableIn",{languages:t.join(", ")});return a.length>0&&(i+=n.instant("LangMenu.AlsoUsedIn",{languages:a.join(", ")})),i},a.actions={toggleTranslate:function(){a.enableTranslate()?a.actions.translate():a.actions.linkDefault()},translate:function(){a.enableTranslate()&&(a.fieldModel.removeLanguage(t.currentLanguage),a.fieldModel.addVs(e.value.Value,t.currentLanguage,!1))},linkDefault:function(){a.fieldModel.removeLanguage(t.currentLanguage)},autoTranslate:function(e){alert(n.instant("LangMenu.NotImplemented"))},copyFrom:function(t){if(e.options.templateOptions.disabled)alert(n.instant("LangMenu.CopyNotPossible"));else{var i=a.fieldModel.getVsWithLanguage(t).Value;null===vs||void 0===vs?console.log(e.options.key+": Can't copy value from "+t+" because that value does not exist."):e.value.Value=i}},useFrom:function(n){var i=a.fieldModel.getVsWithLanguage(n);null===i||void 0===i?console.log(e.options.key+": Can't use value from "+n+" because that value does not exist."):(a.fieldModel.removeLanguage(t.currentLanguage),i.setLanguage(t.currentLanguage,!0))},shareFrom:function(n){var i=a.fieldModel.getVsWithLanguage(n);null===i||void 0===i?console.log(e.options.key+": Can't share value from "+n+" because that value does not exist."):(a.fieldModel.removeLanguage(t.currentLanguage),i.setLanguage(t.currentLanguage,!1))},all:{translate:function(){l("translate")},linkDefault:function(){l("linkDefault")},copyFrom:function(e){l("copyFrom",e)},useFrom:function(e){l("useFrom",e)},shareFrom:function(e){l("shareFrom",e)}}},void 0===e.formModel.localizationMenus&&(e.formModel.localizationMenus=[]),e.formModel.localizationMenus.push(a.actions);var l=function(t,n){for(var a=0;a<e.formModel.localizationMenus.length;a++)e.formModel.localizationMenus[a][t](n)}}]}}),e.directive("eavTreatTimeUtc",function(){function e(e,t){}function t(e,t,n,a){a[0].$formatters.push(function(e){return e}),a[0].parsers.push(function(e){return e})}var n={restrict:"A",require:["ngModel"],compile:e,link:t};return n})}(),function(){"use strict";angular.module("eavEditEntity").service("customInputTypes",["eavConfig","toastr","formlyConfig","$q","$interval","$ocLazyLoad",function(e,t,n,a,i,l){var r={};return r.inputTypesOnPage={},r.allLoaded=!0,r.assetsToLoad=[],r.addInputType=function(e){var t=e.InputTypeConfig;void 0!==t&&null!==t&&(r.inputTypesOnPage[t.Type]=t,r.addToLoadQueue(t))},r.addToLoadQueue=function(e){if(void 0===e.Assets||null===e.Assets||!e.Assets)return void(e.assetsLoaded=!0);for(var t=e.Assets.split("\n"),n=0;n<t.length;n++){var a=t[n].trim();a.length>5&&r.assetsToLoad.push(r.resolveSpecialPaths(a))}},r.loadWithPromise=function(){return l.load(r.assetsToLoad)},r.resolveSpecialPaths=function(t){return t=t.replace(/\[System:Path\]/i,e.getUrlPrefix("system")).replace(/\[Zone:Path\]/i,e.getUrlPrefix("zone")).replace(/\[App:Path\]/i,e.getUrlPrefix("app"))},r.checkDependencyArrival=function(e){return!!n.getType(e)},r}])}(),function(){"use strict";angular.module("eavEditEntity").service("eavDefaultValueService",function(){return function(e){var t=e,n=t.templateOptions.settings.All.DefaultValue;switch(t.templateOptions.header.Prefill&&t.templateOptions.header.Prefill[t.key]&&(n=t.templateOptions.header.Prefill[t.key]),t.type.split("-")[0]){case"boolean":return void 0!==n&&null!==n?"true"===n.toLowerCase():!1;case"datetime":return void 0!==n&&null!==n&&""!==n?new Date(n):null;case"entity":return void 0!==n&&null!==n&&""!==n?n:[];case"number":return void 0!==n&&null!==n&&""!==n?Number(n):"";default:return n?n:""}}})}(),function(){"use strict";angular.module("eavEditEntity").factory("entitiesSvc",["$http","appId","toastrWithHttpErrorHandling","promiseToastr",function(e,t,n,a){var i={toastr:n};return i.getManyForEditing=function(t,n){return e.post("eav/entities/getmanyforediting",n,{params:{appId:t}})},i.saveMany=function(t,n){for(var a=function(e,t){delete e._currentValue},i=angular.copy(n),l=0;l<i.length;l++)angular.forEach(i[l].Entity.Attributes,a);return e.post("eav/entities/savemany",i,{params:{appId:t}}).then(function(e){var t=function(t,n){var a=t.Entity;if(!(null!==a.Id&&0!==a.Id||null===a.Guid&&"undefined"==typeof a.Guid&&"00000000-0000-0000-0000-000000000000"===a.Guid)){var i=e.data[a.Guid];t.Entity.Id=i,t.Header.ID=i}};return angular.forEach(n,t),e})},i["delete"]=function(n,i){console.log("try to delete");var l=e.get("eav/entities/delete",{ignoreErrors:!0,params:{contentType:n,id:i,appId:t}});return a(l,"Message.Deleting","Message.Ok","Message.Error")},i.newEntity=function(e){return{Id:null,Guid:e.Guid,Type:{StaticName:e.ContentTypeName},Attributes:{},IsPublished:!0}},i.save=function(t,n){return e.post("eav/entities/save",n,{params:{appId:t}})},i}])}(),angular.module("eavFieldTemplates").factory("fieldMask",function(){function e(e,t,n){var a={mask:e,model:t,findFields:/\[.*?\]/gi,unwrapField:/[\[\]]/gi};return a.resolve=function(){var e=a.mask;return angular.forEach(a.fieldList(),function(t,n){var i=a.model.hasOwnProperty(t)&&a.model[t]&&a.model[t]._currentValue&&a.model[t]._currentValue.Value?a.model[t]._currentValue.Value:"",l=a.preClean(t,i);e=e.replace(t,l)}),e},a.fieldList=function(){var e=[];if(!a.mask)return e;var t=a.mask.match(a.findFields);return angular.forEach(t,function(t,n){var i=t.replace(a.unwrapField,"");e.push(i)}),e},a.preClean=function(e,t){return t},n&&(a.preClean=n),a}return e}),angular.module("eavEditTemplates",[]).run(["$templateCache",function(e){e.put("form/edit-many-entities.html",'<div ng-if="vm.items != null" ng-click="vm.debug.autoEnableAsNeeded($event)">\r\n    <eav-language-switcher is-disabled="!vm.isValid()"></eav-language-switcher>\r\n\r\n    <div ng-repeat="p in vm.items" class="group-entity">\r\n        <h3 class="clickable" ng-click="p.collapse = !p.collapse">\r\n            {{p.Header.Title ? p.Header.Title : \'EditEntity.DefaultTitle\' | translate }}&nbsp;\r\n            <span ng-if="p.Header.Group.SlotCanBeEmpty" ng-click="vm.toggleSlotIsEmpty(p)" stop-event="click">\r\n                <switch ng-model="p.slotIsUsed" class="tosic-blue" style="top: 6px;" tooltip="{{\'EditEntity.SlotUsed\' + p.slotIsUsed | translate}}"></switch>\r\n            </span>\r\n            <span class="pull-right clickable" style="font-size: smaller">\r\n                <span class="low-priority collapse-entity-button" ng-if="p.collapse" icon="plus-sign"></span>\r\n                <span class="collapse-entity-button" ng-if="!p.collapse" icon="minus-sign"></span>\r\n            </span>\r\n        </h3>\r\n        <eav-edit-entity-form entity="p.Entity" header="p.Header" register-edit-control="vm.registerEditControl" ng-hide="p.collapse"></eav-edit-entity-form>\r\n    </div>\r\n\r\n\r\n    <div>\r\n        <!-- note: the buttons are not really disabled, because we want to be able to click them and see the error message -->\r\n        <button ng-class="{ \'disabled\': !vm.isValid() || vm.isWorking > 0}" ng-click="vm.save(true)" type="button" class="btn btn-primary btn-lg submit-button">\r\n            <span icon="ok" tooltip="{{ \'Button.Save\' | translate }}"></span> &nbsp;<span translate="Button.Save"></span>\r\n        </button>\r\n        &nbsp;\r\n        <button ng-class="{ \'disabled\': !vm.isValid() || vm.isWorking > 0}" class="btn btn-default btn-lg btn-square" type="button" ng-click="vm.save(false)">\r\n            <span icon="check" tooltip="{{ \'Button.SaveAndKeepOpen\' | translate }}"></span>\r\n        </button>\r\n        &nbsp;\r\n        <!-- note: published status will apply to all - so the first is taken for identification if published -->\r\n        <switch ng-model="vm.willPublish" class="tosic-blue" style="top: 13px;"></switch>\r\n        &nbsp;\r\n        <span ng-click="vm.willPublish = !vm.willPublish;" class="save-published-icon">\r\n            <i ng-if="vm.willPublish" icon="eye-open" tooltip="{{ \'Status.Published\' | translate }} - {{ \'Message.WillPublish\' | translate }}"></i>\r\n            <i ng-if="!vm.willPublish" icon="eye-close" tooltip="{{ \'Status.Unpublished\' | translate }} - {{ \'Message.WontPublish\' | translate }}"></i>\r\n        </span>\r\n\r\n\r\n        <span ng-if="vm.debug.on">\r\n            <button tooltip="debug" icon="zoom-in" class="btn" ng-click="vm.showDebugItems = !vm.showDebugItems"></button>\r\n        </span>\r\n        <show-debug-availability class="pull-right" style="margin-top: 20px;"></show-debug-availability>\r\n    </div>\r\n    <div ng-if="vm.debug.on && vm.showDebugItems">\r\n        <div>\r\n            isValid: {{vm.isValid()}}<br/>\r\n            isWorking: {{vm.isWorking}}\r\n        </div>\r\n        <pre>{{ vm.items | json }}</pre>\r\n    </div>\r\n</div>'),e.put("form/edit-single-entity.html",'<div ng-show="vm.editInDefaultLanguageFirst()" translate="Message.PleaseCreateDefLang">\r\n	\r\n</div>\r\n<div ng-show="!vm.editInDefaultLanguageFirst()">\r\n    <formly-form ng-if="vm.formFields && vm.formFields.length" ng-submit="vm.onSubmit()" form="vm.form" model="vm.entity.Attributes" fields="vm.formFields"></formly-form>\r\n</div>'),e.put("form/main-form.html",'<div class="modal-body">\r\n    <span class="pull-right">\r\n        <span style="display: inline-block; position: relative; left:15px">\r\n            <button class="btn btn-default btn-square btn-subtle" type="button" ng-click="vm.close()"><i icon="remove"></i></button>\r\n        </span>\r\n    </span>\r\n    <eav-edit-entities item-list="vm.itemList" after-save-event="vm.afterSave" state="vm.state"></eav-edit-entities>\r\n</div>'),e.put("localization/formly-localization-wrapper.html",'<eav-localization-scope-control></eav-localization-scope-control>\r\n<div ng-if="!!value">\r\n    <formly-transclude></formly-transclude>\r\n    <eav-localization-menu form-model="model" field-model="model[options.key]" options="options" value="value" index="index"></eav-localization-menu>\r\n</div>\r\n<p class="bg-info" style="padding:12px;" ng-if="!value" translate="LangWrapper.CreateValueInDefFirst" translate-values="{ fieldname: \'{{to.label}}\' }">Please... <i>\'{{to.label}}\'</i> in the def...</p>'),e.put("localization/language-switcher.html",'<tabset>\r\n    <tab ng-repeat="l in languages.languages" heading="{{ l.name.substring(0, l.name.indexOf(\'(\') > 0 ? l.name.indexOf(\'(\') - 1 : 100 ) }}" ng-click="!isDisabled ? languages.currentLanguage = l.key : false;" disable="isDisabled" active="languages.currentLanguage == l.key" tooltip="{{l.name}}"></tab>\r\n</tabset>'),e.put("localization/localization-menu.html",'<div dropdown is-open="status.isopen" class="eav-localization"> <!--style="z-index:{{1000 - index}};"-->\r\n	<a class="eav-localization-lock" ng-click="vm.actions.toggleTranslate();" ng-if="vm.isDefaultLanguage()" title="{{vm.tooltip()}}" ng-class="{ \'eav-localization-lock-open\': !options.templateOptions.disabled }" dropdown-toggle>\r\n        {{vm.infoMessage()}} <i class="glyphicon glyphicon-globe"></i>\r\n	</a>\r\n    <ul class="dropdown-menu multi-level pull-right eav-localization-dropdown" role="menu" aria-labelledby="single-button">\r\n        <li role="menuitem"><a ng-click="vm.actions.translate()" translate="LangMenu.Unlink"></a></li>\r\n        <li role="menuitem"><a ng-click="vm.actions.linkDefault()" translate="LangMenu.LinkDefault"></a></li>\r\n        <!-- Google translate is disabled because there is no longer a free version\r\n            <li role="menuitem" class="dropdown-submenu">\r\n            <a href="#" translate="LangMenu.GoogleTranslate"></a>\r\n            <ul class="dropdown-menu">\r\n                <li ng-repeat="language in vm.languages.languages" role="menuitem">\r\n                    <a ng-click="vm.actions.autoTranslate(language.key)" title="{{language.name}}" href="#">{{language.key}}</a>\r\n                </li>\r\n            </ul>\r\n        </li>-->\r\n        <li role="menuitem" class="dropdown-submenu">\r\n            <a href="#" translate="LangMenu.Copy"></a>\r\n            <ul class="dropdown-menu">\r\n                <li ng-repeat="language in vm.languages.languages" ng-class="{ disabled: options.templateOptions.disabled || !vm.hasLanguage(language.key) }" role="menuitem">\r\n                    <a ng-click="vm.actions.copyFrom(language.key)" title="{{language.name}}" href="#">{{language.key}}</a>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n        <li role="menuitem" class="dropdown-submenu">\r\n            <a href="#" translate="LangMenu.Use"></a>\r\n            <ul class="dropdown-menu">\r\n                <li ng-repeat="language in vm.languages.languages" ng-class="{ disabled: !vm.hasLanguage(language.key) }" role="menuitem">\r\n                    <a ng-click="vm.actions.useFrom(language.key)" title="{{language.name}}" href="#">{{language.key}}</a>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n        <li role="menuitem" class="dropdown-submenu">\r\n            <a href="#" translate="LangMenu.Share"></a>\r\n            <ul class="dropdown-menu">\r\n                <li ng-repeat="language in vm.languages.languages" ng-class="{ disabled: !vm.hasLanguage(language.key) }" role="menuitem">\r\n                    <a ng-click="vm.actions.shareFrom(language.key)" title="{{language.name}}" href="#">{{language.key}}</a>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n        <!-- All fields -->\r\n        <li class="divider"></li>\r\n        <li role="menuitem" class="dropdown-submenu">\r\n            <a href="#" translate="LangMenu.AllFields"></a>\r\n            <ul class="dropdown-menu">\r\n                <li role="menuitem"><a ng-click="vm.actions.all.translate()" translate="LangMenu.Unlink"></a></li>\r\n                <li role="menuitem"><a ng-click="vm.actions.all.linkDefault()" translate="LangMenu.LinkDefault"></a></li>\r\n                <li role="menuitem" class="dropdown-submenu">\r\n                    <a href="#" translate="LangMenu.Copy"></a>\r\n                    <ul class="dropdown-menu">\r\n                        <li ng-repeat="language in vm.languages.languages" role="menuitem">\r\n                            <a ng-click="vm.actions.all.copyFrom(language.key)" title="{{language.name}}" href="#">{{language.key}}</a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                <li role="menuitem" class="dropdown-submenu">\r\n                    <a href="#" translate="LangMenu.Use"></a>\r\n                    <ul class="dropdown-menu">\r\n                        <li ng-repeat="language in vm.languages.languages" role="menuitem">\r\n                            <a ng-click="vm.actions.all.useFrom(language.key)" title="{{language.name}}" href="#">{{language.key}}</a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                <li role="menuitem" class="dropdown-submenu">\r\n                    <a href="#" translate="LangMenu.Share"></a>\r\n                    <ul class="dropdown-menu">\r\n                        <li ng-repeat="language in vm.languages.languages" role="menuitem">\r\n                            <a ng-click="vm.actions.all.shareFrom(language.key)" title="{{language.name}}" href="#">{{language.key}}</a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n    </ul>\r\n</div>'),
e.put("wrappers/collapsible.html",'<div ng-show="!to.collapse" class="group-field-set">\r\n    <formly-transclude></formly-transclude>\r\n</div>'),e.put("wrappers/disablevisually.html",'<div visually-disabled="{{to.disabled}}">\r\n    <formly-transclude></formly-transclude>\r\n</div>'),e.put("wrappers/eav-label.html",'<div>\r\n    <label for="{{id}}" class="control-label eav-label {{to.labelSrOnly ? \'sr-only\' : \'\'}} {{to.type}}" ng-if="to.label">\r\n        {{to.label}}\r\n        {{to.required ? \'*\' : \'\'}}\r\n        <a tabindex="-1" ng-click="to.showDescription = !to.showDescription" href="javascript:void(0);" ng-if="to.description && to.description != \'\'">\r\n            <i icon="info-sign" class="low-priority"></i>\r\n        </a>\r\n    </label>\r\n    <p ng-if="to.showDescription" class="bg-info" style="padding: 5px;" ng-bind-html="to.description">\r\n    </p>\r\n    <formly-transclude></formly-transclude>\r\n</div>'),e.put("wrappers/field-group.html",'<div>\r\n    <h4 class="clickable" ng-click="to.collapseGroup = !to.collapseGroup">\r\n        {{to.label}}\r\n        <span class="pull-right btn-sm">\r\n            <span ng-if="to.collapseGroup" class="low-priority collapse-fieldgroup-button" icon="plus-sign"></span>\r\n            <span ng-if="!to.collapseGroup" class="low-priority collapse-fieldgroup-button" icon="minus-sign"></span>\r\n        </span>\r\n    </h4>\r\n    <div ng-if="!to.collapseGroup" style="padding: 5px;" ng-bind-html="to.description">\r\n    </div>\r\n    <formly-transclude></formly-transclude>\r\n</div>'),e.put("fields/boolean/boolean-default.html",'<div class="checkbox checkbox-labeled">\r\n    <!--<label>-->\r\n        <switch class="tosic-green pull-left" ng-model="value.Value"></switch>\r\n    <!-- maybe need the (hidden) input to ensure the label actually switches the boolean -->\r\n        <!--<input type="checkbox" class="formly-field-checkbox" ng-model="value.Value" style="display: none">-->\r\n        <div ng-include="\'wrappers/eav-label.html\'"></div>\r\n        <!--{{to.label}} {{to.required ? \'*\' : \'\'}}-->\r\n    <!--</label>-->\r\n</div>'),e.put("fields/custom/custom-default.html",'<div class="alert alert-danger">\r\n    ERROR - This is a custom field, you shouldn\'t see this. You only see this because the custom-dialog is missing.\r\n</div>\r\n<input class="form-control input-lg" ng-pattern="vm.regexPattern" ng-model="value.Value">'),e.put("fields/empty/empty-default.html","<span></span>"),e.put("fields/entity/entity-default.html",'<div class="eav-entityselect">\r\n\r\n    <div ui-tree="options" data-empty-placeholder-enabled="false" ng-show="to.settings.merged.EnableCreate || chosenEntities.length > 0">\r\n        <table ui-tree-nodes ng-model="chosenEntities" entity-validation ng-required="false" class="table eav-entityselect-table" style="table-layout:fixed;">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tr ng-repeat="item in chosenEntities track by $id(item)" ui-tree-node class="eav-entityselect-item" ui-tree-handle>\r\n                <td>\r\n                    <i title="{{ \'FieldType.Entity.DragMove\' | translate }}" class="icon-link pull-left eav-entityselect-icon" ng-show="to.settings.Entity.AllowMultiValue"></i>\r\n                </td>\r\n                <td>\r\n                    <span class="eav-entityselect-item-title" title="{{getEntityText(item) + \' (\' + item + \')\'}}">{{getEntityText(item)}}</span>\r\n                </td>\r\n                <td style="text-align:right;">\r\n                    <ul class="eav-entityselect-item-actions" data-nodrag>\r\n                        <li>\r\n                            <a title="{{ \'FieldType.Entity.Edit\' | translate }}" ng-click="edit(item, index)" ng-if="to.settings.merged.EnableEdit">\r\n                                <i class="icon-pencil"></i>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a title="{{ \'FieldType.Entity.Remove\' | translate }}" ng-click="removeSlot(item, $index)" class="eav-entityselect-item-remove" ng-if="to.settings.merged.EnableRemove">\r\n                                <i ng-class="{ \'icon-minus-circled\': to.settings.merged.AllowMultiValue, \'icon-down-dir\': !to.settings.merged.AllowMultiValue  }"></i>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <!-- todo: i18n, code in action, icon-visiblity/alignment -->\r\n                            <a title="{{ \'FieldType.Entity.Delete\' | translate }}" ng-click="deleteItemInSlot(item, $index)" class="eav-entityselect-item-remove" ng-if="to.settings.merged.EnableDelete">\r\n                                <i class="icon-cancel"></i>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n    <ol>\r\n        <!-- add existing entity to this list--><!--ng-if="to.settings.merged.EnableAddExisting"-->\r\n        <li class="eav-entityselect-item subtle-till-mouseover"\r\n            ng-show="to.settings.merged.EnableAddExisting && (to.settings.merged.AllowMultiValue || chosenEntities.length < 1)">\r\n            <div>\r\n                <i class="icon-plus-circled pull-left eav-entityselect-icon-before-select"></i>\r\n                <div class="eav-entityselect-selector-wrapper">\r\n                    <select class="eav-entityselect-selector form-control input-lg"\r\n                            formly-skip-ng-model-attrs-manipulator\r\n                            ng-model="selectedEntity"\r\n                            ng-change="addEntity()">\r\n                        <option value="" translate="FieldType.Entity.Choose"></option>\r\n                        <option ng-repeat="item in availableEntities" ng-disabled="chosenEntities.indexOf(item.Value) != -1" value="{{item.Value}}">{{item.Text}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </li>\r\n\r\n        <!-- create new entity to add to this list -->\r\n        <li ng-if="to.settings.merged.EnableCreate && (to.settings.merged.AllowMultiValue || chosenEntities.length < 1)"\r\n            class="eav-entityselect-item eav-entityselect-create subtle-till-mouseover">\r\n            <div ng-click="openNewEntityDialog()">\r\n                <i class="icon-plus pull-left eav-entityselect-icon"></i>\r\n                <span>{{ \'FieldType.Entity.New\' | translate }}&nbsp;</span>\r\n            </div>\r\n        </li>\r\n    </ol>\r\n</div>'),e.put("ml-entities/tests/SpecRunner.html",'<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset="utf-8">\r\n  <title>Jasmine Spec Runner v2.3.4</title>\r\n    <!--\r\n  <link rel="shortcut icon" type="image/png" href="lib/jasmine-2.3.4/jasmine_favicon.png">\r\n  <link rel="stylesheet" href="lib/jasmine-2.3.4/jasmine.css">\r\n\r\n  <script src="lib/jasmine-2.3.4/jasmine.js"></script>\r\n  <script src="lib/jasmine-2.3.4/jasmine-html.js"></script>\r\n  <script src="lib/jasmine-2.3.4/boot.js"></script>\r\n        -->\r\n\r\n    <link rel="stylesheet" href="../../../../node_modules\\grunt-contrib-jasmine\\node_modules\\jasmine-core/lib/jasmine-core/jasmine.css">\r\n    <script src="../../../../node_modules\\grunt-contrib-jasmine\\node_modules\\jasmine-core/lib/jasmine-core/jasmine.js"></script>\r\n    <script src="../../../../node_modules\\grunt-contrib-jasmine\\node_modules\\jasmine-core/lib/jasmine-core/jasmine-html.js"></script>\r\n    <script src="../../../../node_modules\\grunt-contrib-jasmine\\node_modules\\jasmine-core/lib/jasmine-core/boot.js"></script>\r\n  <!-- include source files here... -->\r\n    <!--\r\n  <script src="src/Player.js"></script>\r\n  <script src="src/Song.js"></script>\r\n    -->\r\n    <script src="../entity-enhancer.js"></script>\r\n\r\n\r\n  <!-- include spec files here... -->\r\n    <!--\r\n  <script src="spec/SpecHelper.js"></script>\r\n  <script src="spec/PlayerSpec.js"></script>\r\n        -->\r\n    <script src="../specs/eav-content-ml.spec.js"></script>\r\n\r\n</head>\r\n\r\n<body>\r\n</body>\r\n</html>\r\n')}]),function(){"use strict";angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setWrapper({name:"collapsible",templateUrl:"wrappers/collapsible.html"})}])}(),function(){"use strict";angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setWrapper({name:"disablevisually",templateUrl:"wrappers/disablevisually.html"})}])}(),function(){"use strict";angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setWrapper({name:"eavLabel",templateUrl:"wrappers/eav-label.html"})}])}(),function(){"use strict";angular.module("eavFieldTemplates").config(["formlyConfigProvider",function(e){e.setWrapper({name:"fieldGroup",templateUrl:"wrappers/field-group.html"})}])}();
//# sourceMappingURL=eav-edit.min.js.map
