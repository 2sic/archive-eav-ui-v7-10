{"version":3,"sources":["eav-edit.min.js","templates.js"],"names":["enhanceEntity","entity","enhancer","this","enhanceWithCount","obj","count","key","hasOwnProperty","enhanceVs","vs","hasLanguage","language","Dimensions","setLanguage","shareMode","languageMode","enhanceAtt","att","getVsWithLanguage","v","Values","length","setLanguageToVs","removeLanguage","value","Object","keys","removeVs","splice","addVs","dimensions","undefined","newVs","Value","push","ent","getTitle","getAttribute","TitleAttributeName","hasAttribute","attrName","Attributes","addAttribute","attKey","angular","module","config","$ocLazyLoadProvider","debug","constant","formlyConfigProvider","fieldWrappersNoLabel","setType","name","templateUrl","wrapper","defaultFieldWrappers","Date","prototype","toJSON","x","setHours","getHours","getTimezoneOffset","toISOString","defaultOptions","templateOptions","datepickerOptions","datepickerPopup","link","scope","el","attrs","convertDateToUTC","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","$watch","controller","$scope","debugState","to","settings","merged","set","newState","collapseGroup","toggle","DefaultCollapsed","wrappers","slice","indexOf","$http","$filter","$translate","$modal","appId","eavAdminDialogs","eavDefaultValueService","availableEntities","model","options","chosenEntities","selectedEntity","addEntity","createEntityAllowed","EntityType","EnableCreate","openNewEntityDialog","reload","result","data","getAvailableEntities","then","openItemNew","method","url","params","contentTypeName","getEntityText","entityId","entities","Text","instant","removeSlot","itemGuid","index","deleteItemInSlot","alert","edit","id","Id","openItemEditWithEntityId","directive","restrict","require","element","ngModel","$validators","required","modelValue","viewValue","$parent","Array","isArray","$viewValue","newValue","$validate","template","ngModelAttrs","{{to.settings.merged.Min}}","{{to.settings.merged.Max}}","{{to.settings.merged.Decimals ? \"^[0-9]+(.[0-9]{1,\" + to.settings.merged.Decimals + \"})?$\" : null}}","vm","validationRegexString","stringSettings","ValidationRegExJavaScript","regexPattern","RegExp","console","log","_defineProperty","defineProperty","enumerable","configurable","writable","DropdownValues","o","replace","split","map","e","i","s","ngOptions","stripNonUrlCharacters","fieldMask","controlSettings","sourceMask","AutoGenerateMask","mask","enableSlashes","enablePath","lastAutoCopy","sourcesChangedTryToUpdate","orig","resolve","cleaned","finalClean","activate","forEach","fieldList","on","factory","latinizeText","inputValue","allowPath","trimEnd","rexSeparators","latinized","toLowerCase","cleanInputValue","modelCtrl","$parsers","$setViewValue","$render","app","entitiesSvc","toastr","saveToastr","ctrlS","saveShortcut","save","loadAll","deactivate","unbind","detailedLogging","clog","arguments","isWorking","registeredControls","items","willPublish","publishMode","enableDraft","$on","registerEditControl","control","getManyForEditing","itemList","Entity","Header","ContentTypeName","newEntity","grp","Group","slotIsUsed","SlotIsEmpty","IsPublished","EntityId","IsBranch","showFormErrors","errors","formErrors","msgs","msgTemplate","req","itm","field","$name","error","concat","nice","err","specs","msg","join","allowHtml","close","isValid","saveMany","state","setPristine","allowCloseWithoutAsking","afterSaveEvent","valid","list","isDirty","dirty","publish","branch","maybeLeave","quit","handleClick","event","target","srcElement","nodeName","parentNode","ask","dialog","isOpened","clear","warning","timeOut","onShown","toast","onclick","preventDefault","toggleSlotIsEmpty","item","controllerAs","formlyConfig","contentTypeFieldSvc","$sce","customInputTypes","eavConfig","editInDefaultLanguageFirst","formFields","form","$valid","$dirty","$setPristine","$error","loadContentType","StaticName","Type","getFields","InputType","getType","formly","inputTypeReconfig","InputTypeConfig","addInputType","promiseToLoad","loadWithPromise","dependencyResult","registerAllFieldsFromReturnedDefinition","initCustomJavaScript","jsobject","cjs","Metadata","CustomJavaScript","fn","Function","ex","context","formVm","init","lastGroupHeadingId","All","fieldType","isFieldHeading","nextField","type","Required","label","Name","description","trustAsHtml","Notes","header","canCollapse","fieldGroup","disabled","Disabled","langReadOnly","onBlur","onFocus","focused","className","hide","VisibleInEditUI","expressionProperties","templateOptions.disabled","watcher","expression","stop","listener","oldValue","stopWatching","collapse","attributeConfiguration","inputType","willBeRewrittenByConfig","inputTypeReplacementMap","typeAlreadyRegistered","typeWillRegisterLaterWithAssets","Assets","$q","$modalInstance","$window","afterSave","status","addEventListener","unsavedChangesText","window","returnValue","eavLocalization","setWrapper","languages","isDisabled","transclude","langConf","initCurrentValue","fieldModel","currentLanguage","defaultLanguage","defaultValue","languageToAdd","valueToEdit","_currentValue","_initCurrentValue","formModel","lblDefault","languageKey","isDefaultLanguage","enableTranslate","infoMessage","tooltip","editableIn","usedIn","actions","toggleTranslate","translate","linkDefault","autoTranslate","copyFrom","useFrom","shareFrom","all","forAllMenus","localizationMenus","action","compile","attributes","modelController","$formatters","parsers","service","$interval","$ocLazyLoad","svc","inputTypesOnPage","allLoaded","assetsToLoad","addToLoadQueue","assetsLoaded","a","asset","trim","resolveSpecialPaths","load","getUrlPrefix","checkDependencyArrival","typeName","fieldConfig","d","DefaultValue","Prefill","constructor","JSON","parse","Number","toastrWithHttpErrorHandling","promiseToastr","post","removeTempValue","itmCopy","copy","ei","serverKeys","syncUpdatedKeys","Guid","newId","ID","tryForce","delPromise","get","ignoreErrors","contentType","force","newData","createFieldMask","overloadPreCleanValues","srv","findFields","unwrapField","replaceValue","preClean","matches","match","staticName","run","$templateCache","put"],"mappings":"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","file":"eav-edit.min.js","sourcesContent":["/* \r\n * Custom Fields skelleton to allow later, lazy loaded fields\r\n */\r\n(function() {\r\n    \"use strict\";\r\n    var module = angular.module(\"eavCustomFields\", [\"oc.lazyLoad\"])\r\n\r\n    .config([\"$ocLazyLoadProvider\", function ($ocLazyLoadProvider) {\r\n        $ocLazyLoadProvider.config({\r\n            debug: true\r\n        });\r\n    }]);\r\n\r\n})();\n/* Main object with dependencies, used in wrappers and other places */\r\n(function () {\r\n\t\"use strict\";\r\n\r\n    angular.module(\"eavEditEntity\", [\r\n        \"formly\",\r\n        \"ui.bootstrap\",\r\n        \"uiSwitch\",\r\n        \"toastr\",\r\n        \"ngAnimate\",\r\n        \"EavServices\",\r\n        \"eavEditTemplates\",\r\n        \"eavFieldTemplates\",\r\n        \"eavCustomFields\",\r\n\r\n        // new...\r\n        \"oc.lazyLoad\"\r\n    ]);\r\n\r\n\r\n\r\n})();\n/* \r\n * Field-Templates app initializer\r\n */\r\n\r\nangular.module(\"eavFieldTemplates\",\r\n    [\r\n        \"formly\",\r\n        \"formlyBootstrap\",\r\n        \"ui.bootstrap\",\r\n        \"eavLocalization\",\r\n        \"eavEditTemplates\",\r\n        \"ui.tree\"\r\n    ]\r\n)\r\n    // important: order of use is backwards, so the last is around the second-last, etc.\r\n    .constant(\"defaultFieldWrappers\", [\r\n        \"eavLabel\",\r\n        \"float-label\",\r\n        \"bootstrapHasError\",\r\n        \"disablevisually\",\r\n        \"eavLocalization\",\r\n        \"responsive\",\r\n        \"collapsible\"\r\n    ])\r\n\r\n    .constant(\"fieldWrappersWithPreview\", [\r\n        \"eavLabel\",\r\n        \"float-label\",\r\n        \"bootstrapHasError\",\r\n        \"disablevisually\",\r\n        \"eavLocalization\",\r\n        \"preview-default\",\r\n        \"responsive\",\r\n        \"collapsible\"\r\n    ])\r\n\r\n    .constant(\"defaultFieldWrappersNoFloat\", [\r\n        \"eavLabel\",\r\n        //\"float-label\",\r\n        \"bootstrapHasError\",\r\n        \"disablevisually\",\r\n        \"eavLocalization\",\r\n        //\"preview-default\",\r\n        \"responsive\",\r\n        \"collapsible\"\r\n    ])\r\n\r\n    .constant(\"fieldWrappersNoLabel\", [\r\n        //\"eavLabel\",\r\n        //\"float-label\",\r\n        \"bootstrapHasError\",\r\n        \"disablevisually\",\r\n        \"eavLocalization\",\r\n        //\"preview-default\",\r\n        \"responsive\",\r\n        \"no-label-space\",\r\n        \"collapsible\"\r\n    ])\r\n;\n/* \r\n * Field: Boolean - Default\r\n */\r\n\r\nangular.module(\"eavFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", \"fieldWrappersNoLabel\", function (formlyConfigProvider, fieldWrappersNoLabel) {\r\n        formlyConfigProvider.setType({\r\n            name: \"boolean-default\",\r\n            templateUrl: \"fields/boolean/boolean-default.html\",\r\n            wrapper: fieldWrappersNoLabel // [\"bootstrapHasError\", \"disablevisually\", \"eavLocalization\", \"responsive\", \"collapsible\"]\r\n        });\r\n    }]);\n/* \r\n * Field: Custom - Default (basically something you should never see)\r\n */\r\n\r\nangular.module(\"eavFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function (formlyConfigProvider, defaultFieldWrappers) {\r\n\r\n        formlyConfigProvider.setType({\r\n            name: \"custom-default\",\r\n            templateUrl: \"fields/custom/custom-default.html\",\r\n            wrapper: defaultFieldWrappers\r\n        });\r\n\r\n    }]);\n// this changes JSON-serialization for dates, \r\n// because we usually want the time to be the same across time zones and NOT keeping the same moment\r\nDate.prototype.toJSON = function() {\r\n    var x = new Date(this);\r\n    x.setHours(x.getHours() - x.getTimezoneOffset() / 60);\r\n    return x.toISOString();\r\n};\n/* \r\n * Field: DateTime - Default\r\n */\r\n\r\nangular.module(\"eavFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function (formlyConfigProvider, defaultFieldWrappers) {\r\n\r\n        formlyConfigProvider.setType({\r\n            name: \"datetime-default\",\r\n            wrapper: defaultFieldWrappers,\r\n            templateUrl: \"fields/datetime/datetime-default.html\",\r\n            defaultOptions: {\r\n                templateOptions: {\r\n                    datepickerOptions: {},\r\n                    datepickerPopup: \"dd.MM.yyyy\"\r\n                }\r\n            },\r\n            link: function (scope, el, attrs) {\r\n                // Server delivers value as string, so convert it to UTC date\r\n                scope.$watch('value', function (value) {\r\n                    if (value && value.Value && !(value.Value instanceof Date)) {\r\n                        scope.value.Value = convertDateToUTC(new Date(value.Value));\r\n                    }\r\n                });\r\n\r\n                function convertDateToUTC(date) { return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds()); }\r\n                //if (scope.value && scope.value.Value && typeof (scope.value.Value) === 'string')\r\n                //    scope.value.Value = convertDateToUTC(new Date(scope.value.Value));\r\n            }\r\n        });\r\n\r\n    }]);\n/* \r\n * Field: Empty - Default: this is usually a title/group section\r\n */\r\n\r\nangular.module(\"eavFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", function(formlyConfigProvider) {\r\n        formlyConfigProvider.setType({\r\n            name: \"empty-default\",\r\n            templateUrl: \"fields/empty/empty-default.html\",\r\n            wrapper: [\"fieldGroup\"],\r\n            controller: \"FieldTemplate-TitleController\"\r\n        });\r\n    }])\r\n    .controller(\"FieldTemplate-TitleController\", [\"$scope\", \"debugState\", function($scope, debugState) {\r\n        if (!$scope.to.settings.merged)\r\n            $scope.to.settings.merged = {};\r\n\r\n        //$scope.to.settings.merged.DefaultCollapsed = true;// = \"show\";\r\n\r\n\r\n        $scope.set = function(newState) {\r\n            $scope.to.collapseGroup = newState;\r\n        };\r\n\r\n        $scope.toggle = function() {\r\n            $scope.to.collapseGroup = !$scope.to.collapseGroup;\r\n        };\r\n\r\n        if ($scope.to.settings.merged.DefaultCollapsed === true) \r\n            $scope.set(true);\r\n\r\n    }]);\n/* \r\n * Field: Entity - Default\r\n * Also contains much business logic and the necessary controller\r\n * \r\n */\r\n\r\nangular.module(\"eavFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function (formlyConfigProvider, defaultFieldWrappers) {\r\n\r\n        var wrappers = defaultFieldWrappers.slice(0); // copy the array\r\n        wrappers.splice(defaultFieldWrappers.indexOf(\"eavLocalization\"), 1); // remove the localization...\r\n\r\n        formlyConfigProvider.setType({\r\n            name: \"entity-default\",\r\n            templateUrl: \"fields/entity/entity-default.html\",\r\n            wrapper: wrappers,\r\n            controller: \"FieldTemplate-EntityCtrl\"\r\n        });\r\n\r\n\r\n    }])\r\n    .controller(\"FieldTemplate-EntityCtrl\", [\"$scope\", \"$http\", \"$filter\", \"$translate\", \"$modal\", \"appId\", \"eavAdminDialogs\", \"eavDefaultValueService\", function ($scope, $http, $filter, $translate, $modal, appId, eavAdminDialogs, eavDefaultValueService) {\r\n        if (!$scope.to.settings.merged)\r\n            $scope.to.settings.merged = {};\r\n\r\n        $scope.availableEntities = [];\r\n        //$scope.options = {};\r\n\r\n        if ($scope.model[$scope.options.key] === undefined || $scope.model[$scope.options.key].Values[0].Value === \"\")\r\n            $scope.model[$scope.options.key] = { Values: [{ Value: eavDefaultValueService($scope.options), Dimensions: {} }] };\r\n\r\n        $scope.chosenEntities = $scope.model[$scope.options.key].Values[0].Value;\r\n        $scope.selectedEntity = null;\r\n\r\n        $scope.addEntity = function () {\r\n            if ($scope.selectedEntity !== null) {\r\n                $scope.chosenEntities.push($scope.selectedEntity);\r\n                $scope.selectedEntity = null;\r\n            }\r\n        };\r\n\r\n        $scope.createEntityAllowed = function() {\r\n            var settings = $scope.to.settings.merged;\r\n            return settings.EntityType !== null && settings.EntityType !== \"\" && settings.EnableCreate;\r\n        };\r\n\r\n        $scope.openNewEntityDialog = function() {\r\n            function reload(result) {\r\n                if (!result || result.data === null || result.data === undefined)\r\n                    return;\r\n\r\n                $scope.getAvailableEntities().then(function () {\r\n                    $scope.chosenEntities.push(Object.keys(result.data)[0]);\r\n                });\r\n            }\r\n\r\n            eavAdminDialogs.openItemNew($scope.to.settings.merged.EntityType, reload);\r\n\r\n        };\r\n\r\n        $scope.getAvailableEntities = function() {\r\n            return $http({\r\n                method: \"GET\",\r\n                url: \"eav/EntityPicker/getavailableentities\",\r\n                params: {\r\n                    contentTypeName: $scope.to.settings.merged.EntityType,\r\n                    appId: appId\r\n                    // ToDo: dimensionId: $scope.configuration.DimensionId\r\n                }\r\n            }).then(function(data) {\r\n                $scope.availableEntities = data.data;\r\n            });\r\n        };\r\n\r\n        $scope.getEntityText = function (entityId) {\r\n            if (entityId === null)\r\n                return \"empty slot\"; // todo: i18n\r\n            var entities = $filter(\"filter\")($scope.availableEntities, { Value: entityId });\r\n            return entities.length > 0 ? entities[0].Text : $translate.instant(\"FieldType.Entity.EntityNotFound\"); \r\n        };\r\n\r\n        // remove needs the index --> don't name \"remove\" - causes problems\r\n        $scope.removeSlot = function(itemGuid, index) {\r\n            $scope.chosenEntities.splice(index, 1);\r\n        };\r\n\r\n        $scope.deleteItemInSlot = function(itemGuid, index) {\r\n            alert('this feature is not implemented yet, sorry. it will be added some day...');\r\n        };\r\n\r\n        // edit needs the Guid - the index isn't important\r\n        $scope.edit = function (itemGuid, index) {\r\n            if (itemGuid === null)\r\n                return alert('no can do'); // todo: i18n\r\n            var entities = $filter(\"filter\")($scope.availableEntities, { Value: itemGuid });\r\n            var id = entities[0].Id;\r\n\r\n            eavAdminDialogs.openItemEditWithEntityId(id, $scope.getAvailableEntities);\r\n        };\r\n\r\n        // Initialize entities\r\n        $scope.getAvailableEntities();\r\n\r\n    }]).directive('entityValidation', [function() {\r\n        return {\r\n            restrict: 'A',\r\n            require: '?ngModel',\r\n            link: function(scope, element, attrs, ngModel) {\r\n                if (!ngModel) return;\r\n\r\n                ngModel.$validators.required = function (modelValue, viewValue) {\r\n\r\n                    if (!scope.$parent.$parent.to.required)\r\n                        return true;\r\n                    var value = modelValue || viewValue;\r\n                    if (!value || !Array.isArray(value))\r\n                        return true;\r\n                    return value.length > 0;\r\n                };\r\n\r\n                scope.$watch(function () {\r\n                    return ngModel.$viewValue;\r\n                }, function (newValue) {\r\n                    ngModel.$validate();\r\n                }, true);\r\n            }\r\n        };\r\n    }]);\r\n\n/* \r\n * Field: Number - Default\r\n */\r\n\r\nangular.module(\"eavFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function (formlyConfigProvider, defaultFieldWrappers) {\r\n        formlyConfigProvider.setType({\r\n            name: \"number-default\",\r\n            template: \"<input type=\\\"number\\\" class=\\\"form-control input-lg\\\" ng-model=\\\"value.Value\\\">{{vm.isGoogleMap}}\",\r\n            wrapper: defaultFieldWrappers,\r\n            defaultOptions: {\r\n                ngModelAttrs: {\r\n                    '{{to.settings.merged.Min}}': { value: \"min\" },\r\n                    '{{to.settings.merged.Max}}': { value: \"max\" },\r\n                    '{{to.settings.merged.Decimals ? \"^[0-9]+(\\.[0-9]{1,\" + to.settings.merged.Decimals + \"})?$\" : null}}': { value: \"pattern\" }\r\n                }\r\n            },\r\n            controller: \"FieldTemplate-NumberCtrl as vm\"\r\n        });\r\n    }]).controller(\"FieldTemplate-NumberCtrl\", function () {\r\n        var vm = this;\r\n    });\n/* \r\n * Field: String - Default\r\n */\r\n\r\nangular.module(\"eavFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function (formlyConfigProvider, defaultFieldWrappers) {\r\n\r\n        formlyConfigProvider.setType({\r\n            name: \"string-default\",\r\n            template: \"<div><input class=\\\"form-control material\\\" ng-if=\\\"!(options.templateOptions.settings.merged.RowCount > 1)\\\" ng-pattern=\\\"vm.regexPattern\\\" ng-model=\\\"value.Value\\\">\" +\r\n                \"<textarea ng-if=\\\"options.templateOptions.settings.merged.RowCount > 1\\\" rows=\\\"{{options.templateOptions.settings.merged.RowCount}}\\\" class=\\\"form-control material\\\" ng-model=\\\"value.Value\\\"></textarea></div>\",\r\n            wrapper: defaultFieldWrappers, \r\n            controller: \"FieldTemplate-StringCtrl as vm\"\r\n        });\r\n\r\n    }]).controller(\"FieldTemplate-StringCtrl\", [\"$scope\", function ($scope) {\r\n        var vm = this;\r\n        var validationRegexString = \".*\";\r\n        var stringSettings = $scope.options.templateOptions.settings.merged;\r\n        if (stringSettings && stringSettings.ValidationRegExJavaScript)\r\n            validationRegexString = stringSettings.ValidationRegExJavaScript;\r\n        vm.regexPattern = new RegExp(validationRegexString, 'i');\r\n\r\n        console.log($scope.options.templateOptions);\r\n    }]);\n/* \r\n * Field: String - Dropdown\r\n */\r\n\r\nangular.module(\"eavFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function (formlyConfigProvider, defaultFieldWrappers) {\r\n\r\n        formlyConfigProvider.setType({\r\n            name: \"string-dropdown\",\r\n            template: \"<select class=\\\"form-control input-material material\\\" ng-model=\\\"value.Value\\\"></select>\",\r\n            wrapper: defaultFieldWrappers,\r\n            defaultOptions: function defaultOptions(options) {\r\n\r\n                // DropDown field: Convert string configuration for dropdown values to object, which will be bound to the select\r\n                if (options.templateOptions.settings && options.templateOptions.settings.merged && options.templateOptions.settings.merged.DropdownValues) {\r\n                    var o = options.templateOptions.settings.merged.DropdownValues;\r\n                    o = o.replace(/\\r/g, \"\").split(\"\\n\");\r\n                    o = o.map(function (e, i) {\r\n                        var s = e.split(\":\");\r\n                        return {\r\n                            name: s[0],\r\n                            value: (s[1] || s[1] === '') ? s[1] : s[0]\r\n                        };\r\n                    });\r\n                    options.templateOptions.options = o;\r\n                }\r\n\r\n                function _defineProperty(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); }\r\n\r\n                var ngOptions = options.templateOptions.ngOptions || \"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options\";\r\n                return {\r\n                    ngModelAttrs: _defineProperty({}, ngOptions, {\r\n                        value: \"ng-options\"\r\n                    })\r\n                };\r\n\r\n            }\r\n        });\r\n    }]);\n/* \r\n * Field: String - url-path\r\n */\r\n\r\nangular.module(\"eavFieldTemplates\")\r\n    .config([\"formlyConfigProvider\", \"defaultFieldWrappers\", function(formlyConfigProvider, defaultFieldWrappers) {\r\n\r\n        formlyConfigProvider.setType({\r\n            name: \"string-url-path\",\r\n            template: \"<div><input class=\\\"form-control material\\\" only-simple-url-chars ng-pattern=\\\"vm.regexPattern\\\" ng-model=\\\"value.Value\\\" ng-blur=\\\"vm.finalClean()\\\"></div>\",\r\n            wrapper: defaultFieldWrappers,\r\n            controller: \"FieldTemplate-String-Url-Path-Ctrl as vm\"\r\n        });\r\n\r\n    }])\r\n    .controller(\"FieldTemplate-String-Url-Path-Ctrl\", [\"$scope\", \"debugState\", \"stripNonUrlCharacters\", \"fieldMask\", function($scope, debugState, stripNonUrlCharacters, fieldMask) {\r\n        var vm = this;\r\n\r\n        // get configured\r\n        var controlSettings = $scope.to.settings[\"string-url-path\"];\r\n        var sourceMask = (controlSettings) ? controlSettings.AutoGenerateMask || null : null;\r\n        var mask = fieldMask(sourceMask, $scope.model, function preCleane(key, value) {\r\n            return value.replace(\"/\", \"-\").replace(\"\\\\\", \"-\"); // this will remove slashes which could look like path-parts\r\n        });\r\n\r\n        // test values\r\n        //sourceMask = \"[Name]\";\r\n        //autoGenerateLink = true;\r\n        var enableSlashes = true;\r\n        $scope.enablePath = enableSlashes;\r\n\r\n        //#region Field-Mask handling \r\n        vm.lastAutoCopy = \"\";\r\n        vm.sourcesChangedTryToUpdate = function sourcesChangedTryToUpdate() {\r\n            // don't do anything if the current field is not empty and doesn't have the last copy of the stripped value\r\n            if ($scope.value && $scope.value.Value && $scope.value.Value !== vm.lastAutoCopy)\r\n                return;\r\n\r\n            var orig = mask.resolve(); // vm.getFieldContentBasedOnMask(sourceMask);\r\n            //orig = orig.replace(\"/\", \"-\").replace(\"\\\\\", \"-\"); // when auto-importing, remove slashes as they shouldn't feel like paths afterwards\r\n            var cleaned = stripNonUrlCharacters(orig, enableSlashes, true);\r\n            if (cleaned && $scope.value) {\r\n                vm.lastAutoCopy = cleaned;\r\n                $scope.value.Value = cleaned;\r\n            }\r\n        };\r\n\r\n        //#region enforce custom regex - copied from string-default\r\n        var validationRegexString = \".*\";\r\n        var stringSettings = $scope.options.templateOptions.settings.merged;\r\n        if (stringSettings && stringSettings.ValidationRegExJavaScript)\r\n            validationRegexString = stringSettings.ValidationRegExJavaScript;\r\n        vm.regexPattern = new RegExp(validationRegexString, \"i\");\r\n\r\n        //#endregion\r\n\r\n        //#region do final cleaning on blur / leave-field; mainly remove trailing \"/\"\r\n        vm.finalClean = function() {\r\n            var orig = $scope.value.Value;\r\n            var cleaned = stripNonUrlCharacters(orig, enableSlashes, true);\r\n            if (orig !== cleaned)\r\n                $scope.value.Value = cleaned;\r\n        };\r\n        //#endregion\r\n\r\n\r\n        vm.activate = function() {\r\n            // add a watch for each field in the field-mask\r\n            angular.forEach(mask.fieldList() /* vm.getFieldsOfMask(sourceMask)*/, function(e, i) {\r\n                $scope.$watch(\"model.\" + e + \"._currentValue.Value\", function() {\r\n                    if (debugState.on) console.log(\"url-path: \" + e + \" changed...\");\r\n                    vm.sourcesChangedTryToUpdate(sourceMask);\r\n                });\r\n            });\r\n\r\n            $scope.debug = debugState;\r\n            if (debugState.on) console.log($scope.options.templateOptions);\r\n        };\r\n        vm.activate();\r\n\r\n    }])\r\n\r\n\r\n// this is a helper which cleans up the url and is used in various places\r\n    .factory(\"stripNonUrlCharacters\", [\"latinizeText\", function(latinizeText) {\r\n        return function(inputValue, allowPath, trimEnd) {\r\n            if (!inputValue) return \"\";\r\n            var rexSeparators = allowPath ? /[^a-z0-9-_/]+/gi : /[^a-z0-9-_]+/gi;\r\n\r\n            // allow only lower-case, numbers and _/- characters\r\n            var latinized = latinizeText(inputValue.toLowerCase());\r\n            var cleanInputValue = latinized\r\n                .replace(\"'s \", \"s \") // neutralize it's, daniel's etc. but only if followed by a space, to ensure we don't kill quotes\r\n                .replace(\"\\\\\", \"/\") // neutralize slash representation\r\n                .replace(rexSeparators, \"-\") // replace everything we don't want with a -\r\n                .replace(/-+/gi, \"-\") // reduce multiple \"-\"\r\n                .replace(/\\/+/gi, \"/\") // reduce multiple slashes\r\n                .replace(/-*\\/-*/gi, \"/\") // reduce \"-/\" or \"/-\" combinations to a simple \"/\"\r\n                .replace(trimEnd ? /^-|-+$/gi : /^-/gi, \"\"); // trim front and maybe end \"-\"\r\n            return cleanInputValue;\r\n        };\r\n    }])\r\n\r\n\r\n    // this monitors an input-field and ensures that only allowed characters are typed\r\n    .directive(\"onlySimpleUrlChars\", [\"stripNonUrlCharacters\", function(stripNonUrlCharacters) {\r\n        return {\r\n            require: \"ngModel\",\r\n            restrict: \"A\",\r\n            link: function(scope, element, attrs, modelCtrl) {\r\n                modelCtrl.$parsers.push(function(inputValue) {\r\n                    if (inputValue === null)\r\n                        return \"\";\r\n                    var cleanInputValue = stripNonUrlCharacters(inputValue, scope.enablePath, false);\r\n\r\n                    if (cleanInputValue !== inputValue) {\r\n                        modelCtrl.$setViewValue(cleanInputValue);\r\n                        modelCtrl.$render();\r\n                    }\r\n                    return cleanInputValue;\r\n                });\r\n            }\r\n        };\r\n    }]);\r\n\n/* global angular */\r\n(function () {\r\n    /* jshint laxbreak:true*/\r\n    \"use strict\";\r\n\r\n    var app = angular.module(\"eavEditEntity\");\r\n\r\n    // The controller for the main form directive\r\n    app.controller(\"EditEntities\", [\"appId\", \"$http\", \"$scope\", \"entitiesSvc\", \"toastr\", \"saveToastr\", \"$translate\", \"debugState\", \"ctrlS\", function editEntityCtrl(appId, $http, $scope, entitiesSvc, toastr, saveToastr, $translate, debugState, ctrlS) {\r\n        //#region detailled logging if necessary\r\n        var detailedLogging = false;\r\n        var clog = detailedLogging\r\n            ? function () { for (var i = 0; i < arguments.length; i++) console.log(arguments[i]); }\r\n            : function () { };\r\n        //#endregion\r\n\r\n        var vm = this;\r\n        vm.debug = debugState;\r\n        vm.isWorking = 0;           // isWorking is > 0 when any $http request runs\r\n        vm.registeredControls = []; // array of input-type controls used in these forms\r\n        vm.items = null;            // array of items to edit\r\n        vm.willPublish = false;     // default is won't publish, but will usually be overridden\r\n        vm.publishMode = \"hide\";    // has 3 modes: show, hide, branch (where branch is a hidden, linked clone)\r\n        vm.enableDraft = false;\r\n\r\n        //#region activate / deactivate + bindings\r\n        // the activate-command, to intialize everything. Must be called later, when all methods have been attached\r\n        function activate() {\r\n            // bind ctrl+S\r\n            vm.saveShortcut = ctrlS(function () { vm.save(); });\r\n\r\n            // load all data\r\n            vm.loadAll();\r\n        }\r\n\r\n        // clean-up call when the dialog is closed\r\n        function deactivate() {\r\n            vm.saveShortcut.unbind();\r\n        }\r\n\r\n        // bind the clean-up call to when the dialog is removed\r\n        $scope.$on(\"$destroy\", function () {\r\n            deactivate();\r\n        });\r\n        //#endregion\r\n\r\n        // add an additional input-type control for lazy-loading etc.\r\n        vm.registerEditControl = function (control) {\r\n            vm.registeredControls.push(control);\r\n        };\r\n\r\n        //#region load / save\r\n\r\n        // load all data\r\n        vm.loadAll = function() {\r\n            entitiesSvc.getManyForEditing(appId, $scope.itemList)\r\n                .then(function(result) {\r\n                    vm.items = result.data;\r\n                    angular.forEach(vm.items, function(v, i) {\r\n\r\n                        // If the entity is null, it does not exist yet. Create a new one\r\n                        if (!vm.items[i].Entity && !!vm.items[i].Header.ContentTypeName)\r\n                            vm.items[i].Entity = entitiesSvc.newEntity(vm.items[i].Header);\r\n\r\n                        vm.items[i].Entity = enhanceEntity(vm.items[i].Entity);\r\n\r\n                        // set slot value - must be inverte for boolean-switch\r\n                        var grp = vm.items[i].Header.Group;\r\n                        vm.items[i].slotIsUsed = (grp === null || grp === undefined || grp.SlotIsEmpty !== true);\r\n                    });\r\n                    vm.willPublish = vm.items[0].Entity.IsPublished;\r\n                    vm.enableDraft = vm.items[0].Header.EntityId !== 0; // it already exists, so enable draft\r\n                    vm.publishMode = vm.items[0].Entity.IsBranch\r\n                        ? \"branch\" // it's a branch, so it must have been saved as a draft-branch\r\n                        : vm.items[0].Entity.IsPublished ? \"show\" : \"hide\";\r\n                });\r\n        };\r\n\r\n        vm.showFormErrors = function() {\r\n                var errors = vm.formErrors();\r\n                var msgs = [], msgTemplate = $translate.instant(\"Message.FieldErrorList\");\r\n                for (var set = 0; set < errors.length; set++) {\r\n                    if (errors[set].required) {\r\n                        var req = errors[set].required.map(function (itm) { return { field: itm.$name, error: \"required\" }; });\r\n                        msgs = msgs.concat(req);\r\n                    }\r\n                }\r\n                var nice = msgs.map(function (err) {\r\n                    var specs = err.field.split(\"_\");\r\n\r\n                    return msgTemplate.replace(\"{form}\", specs[1])\r\n                        .replace(\"{field}\", specs[3])\r\n                        .replace(\"{error}\", err.error);\r\n                });\r\n            var msg = nice.join(\"<br/>\");\r\n            return toastr.error($translate.instant(\"Message.CantSaveInvalid\").replace(\"{0}\", msg),\r\n                $translate.instant(\"Message.Error\"), { allowHtml: true }); \r\n        };\r\n\r\n        // the save-call\r\n        vm.save = function (close) {\r\n            // check if saving is allowed\r\n            if (!vm.isValid()) \r\n                return vm.showFormErrors();\r\n\r\n            if (vm.isWorking > 0)\r\n                return toastr.error($translate.instant(\"Message.CantSaveProcessing\")); // todo: i18n\r\n\r\n            // save\r\n            vm.isWorking++;\r\n            saveToastr(entitiesSvc.saveMany(appId, vm.items)).then(function (result) {\r\n                $scope.state.setPristine();\r\n                if (close) {\r\n                    vm.allowCloseWithoutAsking = true;\r\n                    vm.afterSaveEvent(result);\r\n                }\r\n                vm.enableDraft = true;  // after saving, we can re-save as draft\r\n                vm.isWorking--;\r\n            }, function errorWhileSaving() {\r\n                vm.isWorking--;\r\n            });\r\n            return null;\r\n        };\r\n\r\n        // things to do after saving\r\n        vm.afterSaveEvent = $scope.afterSaveEvent;\r\n\r\n        //#endregion\r\n\r\n        //#region state check/set for valid/dirty/pristine\r\n        // check if form is valid\r\n        vm.isValid = function () {\r\n            var valid = true;\r\n            angular.forEach(vm.registeredControls, function (e) {\r\n                if (!e.isValid())\r\n                    valid = false;\r\n            });\r\n            return valid;\r\n        };\r\n\r\n        vm.formErrors = function () {\r\n            var list = [];\r\n            angular.forEach(vm.registeredControls, function (e) {\r\n                if (!e.isValid())\r\n                    list.push(e.error());\r\n            });\r\n            return list;\r\n        };\r\n\r\n        // check if dirty\r\n        $scope.state.isDirty = function () {\r\n            var dirty = false;\r\n            angular.forEach(vm.registeredControls, function(e) {\r\n                if (e.isDirty())\r\n                    dirty = true;\r\n            });\r\n            return dirty;\r\n        };\r\n\r\n        // set to not-dirty (pristine)\r\n        $scope.state.setPristine = function() {\r\n            angular.forEach(vm.registeredControls, function(e) {\r\n                e.setPristine();\r\n            });\r\n        };\r\n        //#endregion\r\n\r\n        // monitor for changes in publish-state and set it for all items being edited\r\n        $scope.$watch(\"vm.willPublish\", function () {   // ToDO Todo\r\n            angular.forEach(vm.items, function (v, i) {\r\n                vm.items[i].Entity.IsPublished = vm.willPublish;\r\n            });\r\n        });\r\n\r\n        $scope.$watch(\"vm.publishMode\", function () {   // ToDO Todo\r\n            var publish = vm.publishMode === \"show\"; // all other cases are hide\r\n            var branch = vm.publishMode === \"branch\"; // all other cases are no-branch\r\n            angular.forEach(vm.items, function (v, i) {\r\n                vm.items[i].Entity.IsPublished = publish;\r\n                vm.items[i].Entity.IsBranch = branch;\r\n            });\r\n        });\r\n\r\n        // handle maybe-leave\r\n        vm.maybeLeave = {\r\n            save: function() { vm.save(true); },\r\n            quit: $scope.close,\r\n            handleClick: function (event) {\r\n                clog('handleClick', event);\r\n                var target = event.target || event.srcElement;\r\n                if (target.nodeName === \"I\") target = target.parentNode;\r\n                if (target.id === \"save\" || target.id === \"quit\") {\r\n                    clog('for ' + target.id);\r\n                    vm.allowCloseWithoutAsking = true;\r\n                    vm.maybeLeave[target.id]();\r\n                }\r\n            },\r\n            ask: function (e) {\r\n                if (!$scope.state.isDirty() || vm.allowCloseWithoutAsking)\r\n                    return;\r\n                var template = \"<div>\"  // note: this variable must be inside this method, to ensure that translate is pre-loaded before we call it\r\n                    + $translate.instant(\"Errors.UnsavedChanges\") + \"<br>\"\r\n                    + \"<button type='button' id='save' class='btn btn-primary' ><i class='icon-ok'></i>\" +  $translate.instant(\"General.Buttons.Save\") + \"</button> &nbsp;\"\r\n                    + \"<button type='button' id='quit' class='btn btn-default' ><i class= 'icon-cancel'></i>\" + $translate.instant(\"General.Buttons.NotSave\") + \"</button>\"\r\n                    + \"</div>\";\r\n                if (vm.dialog && vm.dialog.isOpened)\r\n                    toastr.clear(vm.dialog);\r\n                vm.dialog = toastr.warning(template, {\r\n                    allowHtml: true,\r\n                    timeOut: 3000,\r\n                    onShown: function (toast) {\r\n                        toast.el[0].onclick = vm.maybeLeave.handleClick;\r\n                    }\r\n                });\r\n                e.preventDefault();\r\n            }\r\n        };\r\n        \r\n        $scope.$on(\"modal.closing\", vm.maybeLeave.ask);\r\n\r\n\r\n\r\n        /// toggle / change if a section (slot) is in use or not (like an unused presentation)\r\n        vm.toggleSlotIsEmpty = function (item) {\r\n            if (!item.Header.Group)\r\n                item.Header.Group = {};\r\n            item.Header.Group.SlotIsEmpty = !item.Header.Group.SlotIsEmpty;\r\n            item.slotIsUsed = !item.Header.Group.SlotIsEmpty;\r\n        };\r\n\r\n        activate();\r\n\r\n    }]);\r\n\r\n\r\n\r\n})();\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    var app = angular.module(\"eavEditEntity\");\r\n\r\n    app.directive(\"eavEditEntities\", function () {\r\n        return {\r\n            templateUrl: \"form/edit-many-entities.html\",\r\n            restrict: \"E\",\r\n            scope: {\r\n                itemList: \"=\",\r\n                afterSaveEvent: \"=\",\r\n                state: \"=\",\r\n                close: \"=\"\r\n            },\r\n            controller: \"EditEntities\",\r\n            controllerAs: \"vm\"\r\n        };\r\n    });\r\n\r\n\r\n})();\n\r\n(function () {\r\n    /* jshint laxbreak:true */\r\n\t\"use strict\";\r\n\r\n\tvar app = angular.module(\"eavEditEntity\"); \r\n\r\n\t// The controller for the main form directive\r\n\tapp.controller(\"EditEntityFormCtrl\", [\"appId\", \"$http\", \"$scope\", \"formlyConfig\", \"contentTypeFieldSvc\", \"$sce\", \"debugState\", \"customInputTypes\", \"eavConfig\", function editEntityCtrl(appId, $http, $scope, formlyConfig, contentTypeFieldSvc, $sce, debugState, customInputTypes, eavConfig) {\r\n\r\n\t\tvar vm = this;\r\n\t\tvm.editInDefaultLanguageFirst = function () {\r\n\t\t\treturn false; // ToDo: Use correct language information, e.g. eavLanguageService.currentLanguage != eavLanguageService.defaultLanguage && !$scope.entityId;\r\n\t\t};\r\n\r\n\t\t// The control object is available outside the directive\r\n\t\t// Place functions here that should be available from the parent of the directive\r\n\t\tvm.control = {\r\n\t\t    isValid: function () { return vm.formFields.length === 0 || vm.form && vm.form.$valid; },\r\n\t\t    isDirty: function () { return (vm.form && vm.form.$dirty); },\r\n\t\t    setPristine: function () { if (vm.form) vm.form.$setPristine(); },\r\n            error: function () { return vm.form.$error; }\r\n\t\t};\r\n\r\n\t\t// Register this control in the parent control\r\n\t\tif($scope.registerEditControl)\r\n\t\t\t$scope.registerEditControl(vm.control);\r\n\r\n\t\tvm.model = null;\r\n\t\tvm.entity = $scope.entity;\r\n\r\n\t\tvm.formFields = [];\r\n\r\n\r\n\t\tvar loadContentType = function () {\r\n\r\n\t\t    contentTypeFieldSvc(appId, { StaticName: vm.entity.Type.StaticName }).getFields()\r\n\t\t        .then(function(result) {\r\n\t\t            vm.debug = result;\r\n\r\n\t\t            // Transform EAV content type configuration to formFields (formly configuration)\r\n\r\n                    // first: add all custom types to re-load these scripts and styles\r\n\t\t            angular.forEach(result.data, function (e, i) {\r\n\t\t                // check in config input-type replacement map if the specified type should be replaced by another\r\n\t\t                //if (e.InputType && eavConfig.formly.inputTypeReplacementMap[e.InputType]) \r\n\t\t                //    e.InputType = eavConfig.formly.inputTypeReplacementMap[e.InputType];\r\n\r\n\r\n\t\t                // review type and get additional configs!\r\n\t\t                e.InputType = vm.getType(e);\r\n\t\t                eavConfig.formly.inputTypeReconfig(e);  // provide custom overrides etc. if necessary\r\n\r\n\t\t                if (e.InputTypeConfig)\r\n\t\t                    customInputTypes.addInputType(e);\r\n\t\t            });\r\n\r\n\t\t            // load all assets before continuing with formly-binding\r\n\t\t            var promiseToLoad = customInputTypes.loadWithPromise();\r\n\t\t            promiseToLoad.then(function(dependencyResult) {\r\n\t\t                vm.registerAllFieldsFromReturnedDefinition(result);\r\n\t\t            });\r\n\r\n\r\n\t\t        });\r\n\t\t};\r\n\r\n\t    vm.initCustomJavaScript = function(field) {\r\n\t        var jsobject,\r\n                cjs = field.Metadata.merged.CustomJavaScript;\r\n\t        if (!cjs) return;\r\n\t        if (cjs.indexOf(\"/* compatibility: 1.0 */\") < 0) {\r\n\t            console.log(\"found custom js for field '\" + field.StaticName + \"', but didn't find correct version support; ignore\");\r\n\t            return;\r\n\t        }\r\n\r\n\t        try {\r\n\t            var fn = new Function(cjs); // jshint ignore:line\r\n\t            jsobject = fn();\r\n\t        }\r\n            catch (ex) {\r\n                console.log(\"wasn't able to process the custom javascript for field '\" + field.StaticName + \"'. tried: \" + cjs);\r\n            }\r\n\t        if (jsobject === undefined || jsobject === null)\r\n\t            return;\r\n\r\n\t        var context = {\r\n\t            field: field,\r\n\t            formVm: vm,\r\n\t            formlyConfig: formlyConfig,\r\n\t            appId: appId,\r\n\t            module: app, // pass in this current module in case something complex is wanted\r\n\t        };\r\n\r\n\t        // now cjs should be the initiliazed object...\r\n\t        if (jsobject && jsobject.init)\r\n\t            jsobject.init(context);\r\n\t        \r\n\r\n\t    };\r\n\r\n\t    vm.registerAllFieldsFromReturnedDefinition = function raffrd(result) {\r\n\t        var lastGroupHeadingId = 0;\r\n\t        angular.forEach(result.data, function (e, i) {\r\n\r\n\t            if (e.Metadata.All === undefined)\r\n\t                e.Metadata.All = {};\r\n\r\n\t            vm.initCustomJavaScript(e);\r\n\r\n\t            var fieldType = e.InputType;\r\n\r\n\t            // always remember the last heading so all the following fields know to look there for collapse-setting\r\n\t            var isFieldHeading = (fieldType === \"empty-default\");\r\n\t            if (isFieldHeading)\r\n\t                lastGroupHeadingId = i;\r\n                \r\n\t            var nextField = {\r\n\t                key: e.StaticName,\r\n\t                type: fieldType,\r\n\t                templateOptions: {\r\n\t                    required: !!e.Metadata.All.Required,\r\n\t                    label: e.Metadata.All.Name === undefined ? e.StaticName : e.Metadata.All.Name,\r\n\t                    description: $sce.trustAsHtml(e.Metadata.All.Notes),\r\n\t                    settings: e.Metadata,\r\n\t                    header: $scope.header,\r\n\t                    canCollapse: lastGroupHeadingId > 0 && !isFieldHeading,\r\n\t                    fieldGroup: vm.formFields[lastGroupHeadingId],\r\n\t                    disabled: e.Metadata.All.Disabled,\r\n\t                    langReadOnly: false, // Will be set by the language directive to override the disabled state\r\n\r\n                        // test to discover focused for floating labels\r\n\t                    onBlur: 'to.focused=false',\r\n\t                    onFocus: 'to.focused=true',\r\n\t                    focused: false\r\n\t                },\r\n\t                className: \"type-\" + e.Type.toLowerCase() + \" input-\" + fieldType + \" field-\" + e.StaticName.toLowerCase(),\r\n\t                hide: (e.Metadata.All.VisibleInEditUI === false ? !debugState.on : false),\r\n\t                expressionProperties: {\r\n\t                    // Needed for dynamic update of the disabled property\r\n\t                    'templateOptions.disabled': 'options.templateOptions.disabled' // doesn't set anything, just here to ensure formly causes update-binding\r\n\t                },\r\n\t                watcher: [\r\n                        {\r\n                            // changes when a entity becomes enabled / disabled\r\n                            expression: function (field, scope, stop) {\r\n                                return e.Metadata.All.Disabled ||\r\n                                    (field.templateOptions.header.Group && field.templateOptions.header.Group.SlotIsEmpty) ||\r\n                                    field.templateOptions.langReadOnly;\r\n                            },\r\n                            listener: function (field, newValue, oldValue, scope, stopWatching) {\r\n                                field.templateOptions.disabled = newValue;\r\n                            }\r\n                        },\r\n                        {\r\n                            // handle collapse / open\r\n                            expression: function (field, scope, stop) {\r\n                                // only change values if it can collapse...\r\n                                return (field.templateOptions.canCollapse) ? field.templateOptions.fieldGroup.templateOptions.collapseGroup : null;\r\n                            },\r\n                            listener: function (field, newValue, oldValue, scope, stopWatching) {\r\n                                if (field.templateOptions.canCollapse)\r\n                                    field.templateOptions.collapse = newValue;\r\n                            }\r\n                        }\r\n\t                ]\r\n\t            };\r\n\r\n\t            vm.formFields.push(nextField);\r\n\t        });\r\n\t    };\r\n\r\n\r\n\t    // Load existing entity if defined\r\n\t\tif (vm.entity !== null)\r\n\t\t    loadContentType();\r\n\r\n\r\n\t    // Returns the field type for an attribute configuration\r\n\t\tvm.getType = function (attributeConfiguration) {\r\n\t\t    var e = attributeConfiguration;\r\n\t\t    var type = e.Type.toLowerCase();\r\n\t\t    var inputType = \"\";\r\n\r\n\t\t    // new: the All can - and should - have an input-type which doesn't change\r\n\t\t    // First look in Metadata.All if an InputType is defined (All should override the setting, which is not the case when using only merged)\r\n\t\t    if (e.InputType !== \"unknown\") // the input type of @All is here from the web service // Metadata.All && e.Metadata.All.InputType)\r\n\t\t        inputType = e.InputType;\r\n\t\t        // If not, look in merged\r\n\t\t    else if (e.Metadata.merged && e.Metadata.merged.InputType)\r\n\t\t        inputType = e.Metadata.merged.InputType;\r\n\r\n\t\t    if (inputType && inputType.indexOf(\"-\") === -1) // has input-type, but missing main type, this happens with old types like string wysiyg\r\n\t\t        inputType = type + \"-\" + inputType;\r\n\r\n\t\t    var willBeRewrittenByConfig = (inputType && eavConfig.formly.inputTypeReplacementMap[inputType]);\r\n\t\t    if (!willBeRewrittenByConfig) {\r\n\t\t        // this type may have assets, so the definition may be late-loaded\r\n\t\t        var typeAlreadyRegistered = formlyConfig.getType(inputType);    // check if this input-type actually exists - so \"string-i-made-this-up\" will return undefined\r\n\t\t        var typeWillRegisterLaterWithAssets = (e.InputTypeConfig ? !!e.InputTypeConfig.Assets : false); // if it will load assets later, then it may still be defined then\r\n\r\n\t\t        // Use subtype 'default' if none is specified - or type does not exist\r\n\t\t        if (!inputType || (!typeAlreadyRegistered && !typeWillRegisterLaterWithAssets))\r\n\t\t            inputType = type + \"-default\";\r\n\r\n\t\t        // but re-check if it's in the config! since the name might have changed\r\n\t\t        willBeRewrittenByConfig = (inputType && eavConfig.formly.inputTypeReplacementMap[inputType]);\r\n\t\t    }\r\n\r\n\t\t    // check in config input-type replacement map if the specified type should be replaced by another\r\n\t\t    // like \"string-wysiwyg\" replaced by \"string-wysiwyg-tinymce\"\r\n\t\t    if (willBeRewrittenByConfig)\r\n\t\t        inputType = eavConfig.formly.inputTypeReplacementMap[inputType];\r\n\r\n\t\t    return (inputType);\r\n\t\t};\r\n\t}]);\r\n    \r\n\t\r\n\r\n})();\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\tangular.module(\"eavEditEntity\")\r\n        .directive(\"eavEditEntityForm\", function () {\r\n\t\treturn {\r\n\t\t    templateUrl: \"form/edit-single-entity.html\",\r\n\t\t\trestrict: \"E\",\r\n\t\t\tscope: {\r\n\t\t\t    entity: \"=\",\r\n                header: \"=\",\r\n                registerEditControl: \"=\"\r\n\t\t\t},\r\n\t\t\tcontroller: \"EditEntityFormCtrl\",\r\n\t\t\tcontrollerAs: \"vm\"\r\n\t\t};\r\n\t});\r\n\t\r\n\r\n})();\n/* global angular */\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\tvar app = angular.module(\"eavEditEntity\");\r\n\r\n\t// The controller for the main form directive\r\n\tapp.controller(\"EditEntityWrapperCtrl\", [\"$q\", \"$http\", \"$scope\", \"items\", \"$modalInstance\", \"$window\", \"$translate\", \"toastr\", function editEntityCtrl($q, $http, $scope, items, $modalInstance, $window, $translate, toastr) {\r\n\r\n\t    var vm = this;\r\n\t    vm.itemList = items;\r\n\r\n\t    // this is the callback after saving - needed to close everything\r\n\t    vm.afterSave = function(result) {\r\n\t        if (result.status === 200)\r\n\t            vm.close(result);\r\n\t        else {\r\n\t            alert($translate.instant(\"Errors.UnclearError\"));\r\n\t        }\r\n\t    };\r\n\r\n\t    vm.state = {\r\n\t        isDirty: function() {\r\n\t            throw $translate.instant(\"Errors.InnerControlMustOverride\");\r\n\t        }\r\n\t    };\r\n\r\n\t    vm.close = function (result) {\r\n\t\t    $modalInstance.close(result);\r\n\t\t};\r\n\r\n\r\n\t    //vm.maybeLeave = function maybeLeave(e) {\r\n\t    //    if (vm.state.isDirty() && !confirm(unsavedChangesText + \" \" + $translate.instant(\"Message.ExitOk\")))\r\n\t    //        e.preventDefault();\r\n\t    //};\r\n\r\n\t    //vm.showMaybeLeaveToaster = function(e) {\r\n\t    //    var quickQuit = \"<div>\"\r\n        //        + $translate.instant(\"Errors.UnsavedChanges\")\r\n\t    //        + \"<button type=\\\"button\\\" id=\\\"save\\\" class=\\\"btn btn-primary\\\" ><i class=\\\"icon-ok\\\"></i>save</button> &nbsp;\"\r\n\t    //        + \"<button type=\\\"button\\\" id=\\\"quit\\\" class=\\\"btn btn-default\\\" ><i class= \\\"icon-cancel\\\"></i>don't save</button>\"\r\n\t    //        + \"</div>\";\r\n\t    //    toastr.warning(quickQuit, \"leaving i18n?\", {\r\n\t    //        allowHtml: true,\r\n\t    //        closeButton: true,\r\n\t    //        tapToDismiss: false,\r\n\t    //        autoDismiss: false,\r\n\t    //        progressBar: true,\r\n\t    //        timeOut: 50000,\r\n\t    //        extendedTimeOut: 50000,\r\n\t    //        onTap: vm.handleLeaveToasterTap,\r\n\t    //        onShown: function (toast) {\r\n\t    //            var div = toast.el[0].children[1].children[1].children[0];\r\n\t    //            var save = div.children[0];\r\n\t    //            var quit = div.children[1];\r\n\t    //            save.onclick = function () { alert(\"save!\") };\r\n\t    //            quit.onclick = function () { alert(\"quit!!!!!\") };\r\n\t    //        }\r\n\t    //    });\r\n\r\n\t    //};\r\n\r\n\r\n\t    //$scope.$on('modal.closing', vm.maybeLeave);\r\n\r\n\t    $window.addEventListener('beforeunload', function (e) {\r\n\t        var unsavedChangesText = $translate.instant(\"Errors.UnsavedChanges\");\r\n\t        if (vm.state.isDirty()) {\r\n\t            (e || window.event).returnValue = unsavedChangesText; //Gecko + IE\r\n\t            return unsavedChangesText; //Gecko + Webkit, Safari, Chrome etc.\r\n\t        }\r\n\t        return null;\r\n\t    });\r\n\t}]);\r\n\r\n})();\n\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\r\n\t/* This app handles all aspectes of the multilanguage features of the field templates */\r\n\r\n\tvar eavLocalization = angular.module(\"eavLocalization\", [\"formly\", \"EavConfiguration\"], [\"formlyConfigProvider\", function (formlyConfigProvider) {\r\n\r\n\t\t// Field templates that use this wrapper must bind to value.Value instead of model[...]\r\n\t\tformlyConfigProvider.setWrapper([\r\n\t\t\t{\r\n\t\t\t\tname: \"eavLocalization\",\r\n\t\t\t\ttemplateUrl: \"localization/formly-localization-wrapper.html\"\r\n\t\t\t}\r\n\t\t]);\r\n\r\n\t}]);\r\n\r\n\teavLocalization.directive(\"eavLanguageSwitcher\", function () {\r\n\t\treturn {\r\n\t\t\trestrict: \"E\",\r\n\t\t\ttemplateUrl: \"localization/language-switcher.html\",\r\n\t\t\tcontroller: [\"$scope\", \"languages\", function($scope, languages) {\r\n\t\t\t\t$scope.languages = languages;\r\n\t\t\t}],\r\n\t\t\tscope: {\r\n\t\t\t    isDisabled: \"=isDisabled\"\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\r\n\teavLocalization.directive(\"eavLocalizationScopeControl\", function () {\r\n\t\treturn {\r\n\t\t\trestrict: \"E\",\r\n\t\t\ttransclude: true,\r\n\t\t\ttemplate: \"\",\r\n\t\t\tlink: function (scope, element, attrs) {\r\n\t\t\t},\r\n\t\t\tcontroller: [\"$scope\", \"$filter\", \"$translate\", \"eavDefaultValueService\", \"languages\", function ($scope, $filter, $translate, eavDefaultValueService, languages) { // Can't use controllerAs because of transcluded scope\r\n\r\n\t\t\t\tvar scope = $scope;\r\n\t\t\t\tvar langConf = languages;\r\n\r\n\t\t\t\tvar initCurrentValue = function() {\r\n\r\n\t\t\t\t\t// Set base value object if not defined\r\n\t\t\t\t\tif (!scope.model[scope.options.key])\r\n\t\t\t\t\t\tscope.model.addAttribute(scope.options.key);\r\n\r\n\t\t\t\t\tvar fieldModel = scope.model[scope.options.key];\r\n\r\n\t\t\t\t\t// If current language = default language and there are no values, create an empty value object\r\n\t\t\t\t\tif (fieldModel.Values.length === 0) {\r\n\t\t\t\t\t    if (langConf.currentLanguage == langConf.defaultLanguage) {\r\n\t\t\t\t\t        var defaultValue = eavDefaultValueService(scope.options);\r\n                            // Add default language if we are in a ml environment, else don't add any\r\n\t\t\t\t\t        var languageToAdd = langConf.languages.length > 0 ? langConf.currentLanguage : null;\r\n\t\t\t\t\t        fieldModel.addVs(defaultValue, languageToAdd);\r\n\t\t\t\t\t    }\r\n\t\t\t\t\t    else { // There are no values - value must be edited in default language first\r\n\t\t\t\t\t        return;\r\n\t\t\t\t\t    }\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t    // Assign default language if no dimension is set - new: if multiple languages are in use!!!\r\n\t\t\t\t\tif (Object.keys(fieldModel.Values[0].Dimensions).length === 0)\r\n                        if(langConf.languages.length > 0)\r\n\t\t\t\t            fieldModel.Values[0].Dimensions[langConf.defaultLanguage] = false; // set to \"not-read-only\"\r\n\r\n\t\t\t\t\tvar valueToEdit;\r\n\r\n\t\t\t\t\t// Decide which value to edit:\r\n\t\t\t\t\t// 1. If there is a value with current dimension on it, use it\r\n\t\t\t\t\tvalueToEdit = $filter(\"filter\")(fieldModel.Values, function(v, i) {\r\n\t\t\t\t\t\treturn v.Dimensions[langConf.currentLanguage] !== undefined;\r\n\t\t\t\t\t})[0];\r\n\r\n\t\t\t\t\t// 2. Use default language value\r\n\t\t\t\t\tif (valueToEdit === undefined)\r\n\t\t\t\t\t\tvalueToEdit = $filter(\"filter\")(fieldModel.Values, function(v, i) {\r\n\t\t\t\t\t\t\treturn v.Dimensions[langConf.defaultLanguage] !== undefined;\r\n\t\t\t\t\t\t})[0];\r\n\r\n\t\t\t\t\t// 3. Use the first value if there is only one\r\n\t\t\t\t\tif (valueToEdit === undefined) {\r\n\t\t\t\t\t\tif (fieldModel.Values.length > 1)\r\n\t\t\t\t\t\t    throw $translate.instant(\"Errors.DefLangNotFound\") + \" \" + $scope.options.key;\r\n\t\t\t\t\t\t// Use the first value\r\n\t\t\t\t\t\tvalueToEdit = fieldModel.Values[0];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfieldModel._currentValue = valueToEdit;\r\n\r\n\t\t\t\t\t// Set scope variable 'value' to simplify binding\r\n\t\t\t\t\tscope.value = fieldModel._currentValue;\r\n\r\n\t\t\t\t    // Decide whether the value is writable or not\r\n\t\t\t\t\tvar writable = (langConf.currentLanguage == langConf.defaultLanguage) ||\r\n                        (scope.value && scope.value.Dimensions[langConf.currentLanguage] === false);\r\n\r\n\t\t\t\t\tscope.to.langReadOnly = !writable;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tinitCurrentValue();\r\n\r\n\t\t\t\t// Handle language switch\r\n\t\t\t\tscope.langConf = langConf; // Watch does only work on scope variables\r\n\t\t\t\tscope.$watch(\"langConf.currentLanguage\", function (newValue, oldValue) {\r\n\t\t\t\t\tif (oldValue === undefined || newValue == oldValue)\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tinitCurrentValue();\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// ToDo: Could cause performance issues (deep watch array)...\r\n\t\t\t\tscope.$watch(\"model[options.key].Values\", function(newValue, oldValue) {\r\n\t\t\t\t\tinitCurrentValue();\r\n\t\t\t\t}, true);\r\n\r\n\t\t\t\t// The language menu must be able to trigger an update of the _currentValue property\r\n\t\t\t\tscope.model[scope.options.key]._initCurrentValue = initCurrentValue;\r\n\t\t\t}]\r\n\t\t};\r\n\t});\r\n\r\n\teavLocalization.directive(\"eavLocalizationMenu\", function () {\r\n\t\treturn {\r\n\t\t\trestrict: \"E\",\r\n\t\t\tscope: {\r\n\t\t\t\tfieldModel: \"=fieldModel\",\r\n\t\t\t\toptions: \"=options\",\r\n\t\t\t\tvalue: \"=value\",\r\n\t\t\t\tindex: \"=index\",\r\n                formModel: \"=formModel\"\r\n\t\t\t},\r\n\t\t\ttemplateUrl: \"localization/localization-menu.html\",\r\n\t\t\tlink: function (scope, element, attrs) { },\r\n\t\t\tcontrollerAs: \"vm\",\r\n\t\t\tcontroller: [\"$scope\", \"languages\", \"$translate\", function ($scope, languages, $translate) {\r\n\r\n\t\t\t    var vm = this;\r\n\t\t\t    var lblDefault = $translate.instant(\"LangMenu.UseDefault\");\r\n\t\t\t    var lblIn = $translate.instant(\"LangMenu.In\");\r\n\r\n\t\t\t\tvm.fieldModel = $scope.fieldModel;\r\n\t\t\t\tvm.languages = languages;\r\n\t\t\t\tvm.hasLanguage = function(languageKey) {\r\n\t\t\t\t    return vm.fieldModel.getVsWithLanguage(languageKey) !== null;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvm.isDefaultLanguage = function () { return languages.currentLanguage != languages.defaultLanguage; };\r\n\t\t\t\tvm.enableTranslate = function () { return vm.fieldModel.getVsWithLanguage(languages.currentLanguage) === null; };\r\n\r\n\t\t\t\tvm.infoMessage = function () {\r\n\t\t\t\t    if (Object.keys($scope.value.Dimensions).length === 1 && $scope.value.Dimensions[languages.defaultLanguage] === false)\r\n\t\t\t\t        return lblDefault;\r\n\t\t\t\t    if (Object.keys($scope.value.Dimensions).length === 1 && $scope.value.Dimensions[languages.currentLanguage] === false)\r\n\t\t\t\t        return \"\";\r\n\t\t\t\t    return $translate.instant(\"LangMenu.In\", { languages: Object.keys($scope.value.Dimensions).join(\", \") });\r\n\t\t\t\t    // \"in \" + Object.keys($scope.value.Dimensions).join(\", \");\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvm.tooltip = function () {\r\n\t\t\t\t    var editableIn = [];\r\n\t\t\t\t    var usedIn = [];\r\n\t\t\t\t    angular.forEach($scope.value.Dimensions, function (value, key) {\r\n\t\t\t\t        (value ? usedIn : editableIn).push(key);\r\n\t\t\t\t    });\r\n\t\t\t\t    var tooltip = $translate.instant(\"LangMenu.EditableIn\", { languages: editableIn.join(\", \") }); // \"editable in \" + editableIn.join(\", \");\r\n\t\t\t\t    if (usedIn.length > 0)\r\n\t\t\t\t        tooltip += $translate.instant(\"LangMenu.AlsoUsedIn\", { languages: usedIn.join(\", \") });// \", also used in \" + usedIn.join(\", \");\r\n\t\t\t\t    return tooltip;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvm.actions = {\r\n\t\t\t\t    toggleTranslate: function toggleTranslate() {\r\n\t\t\t\t        if (vm.enableTranslate())\r\n\t\t\t\t            vm.actions.translate();\r\n\t\t\t\t        else\r\n\t\t\t\t            vm.actions.linkDefault();\r\n\t\t\t\t    },\r\n\t\t\t\t    translate: function translate() {\r\n\t\t\t\t        if (vm.enableTranslate()) {\r\n\t\t\t\t            vm.fieldModel.removeLanguage(languages.currentLanguage);\r\n\t\t\t\t            vm.fieldModel.addVs($scope.value.Value, languages.currentLanguage, false);\r\n\t\t\t\t        }\r\n\t\t\t\t    },\r\n\t\t\t\t    linkDefault: function linkDefault() {\r\n\t\t\t\t        vm.fieldModel.removeLanguage(languages.currentLanguage);\r\n\t\t\t\t    },\r\n\t\t\t\t    autoTranslate: function (languageKey) {\r\n\t\t\t\t        // Google translate is not implemented yet, because\r\n                        // there is no longer a free api.\r\n\t\t\t\t        alert($translate.instant(\"LangMenu.NotImplemented\"));\r\n\t\t\t\t    },\r\n\t\t\t\t    copyFrom: function (languageKey) {\r\n\t\t\t\t        if ($scope.options.templateOptions.disabled)\r\n\t\t\t\t            alert($translate.instant(\"LangMenu.CopyNotPossible\"));\r\n\t\t\t\t        else {\r\n\t\t\t\t            var value = vm.fieldModel.getVsWithLanguage(languageKey).Value;\r\n\t\t\t\t            if (vs === null || vs === undefined)\r\n\t\t\t\t                console.log($scope.options.key + \": Can't copy value from \" + languageKey + ' because that value does not exist.');\r\n\t\t\t\t            else\r\n\t\t\t\t                $scope.value.Value = value;\r\n\t\t\t\t        }\r\n\t\t\t\t    },\r\n\t\t\t\t    useFrom: function (languageKey) {\r\n\t\t\t\t        var vs = vm.fieldModel.getVsWithLanguage(languageKey);\r\n\t\t\t\t        if (vs === null || vs === undefined)\r\n\t\t\t\t            console.log($scope.options.key + \": Can't use value from \" + languageKey + ' because that value does not exist.');\r\n\t\t\t\t        else {\r\n\t\t\t\t            vm.fieldModel.removeLanguage(languages.currentLanguage);\r\n\t\t\t\t            vs.setLanguage(languages.currentLanguage, true);\r\n\t\t\t\t        }\r\n\t\t\t\t    },\r\n\t\t\t\t    shareFrom: function (languageKey) {\r\n\t\t\t\t        var vs = vm.fieldModel.getVsWithLanguage(languageKey);\r\n\t\t\t\t        if (vs === null || vs === undefined)\r\n\t\t\t\t            console.log($scope.options.key + \": Can't share value from \" + languageKey + ' because that value does not exist.');\r\n\t\t\t\t        else {\r\n\t\t\t\t            vm.fieldModel.removeLanguage(languages.currentLanguage);\r\n\t\t\t\t            vs.setLanguage(languages.currentLanguage, false);\r\n\t\t\t\t        }\r\n\t\t\t\t    },\r\n\t\t\t\t    all: {\r\n\t\t\t\t        translate: function translate() {\r\n\t\t\t\t            forAllMenus('translate');\r\n\t\t\t\t        },\r\n\t\t\t\t        linkDefault: function linkDefault() {\r\n\t\t\t\t            forAllMenus('linkDefault');\r\n\t\t\t\t        },\r\n\t\t\t\t        copyFrom: function (languageKey) {\r\n\t\t\t\t            forAllMenus('copyFrom', languageKey);\r\n\t\t\t\t        },\r\n\t\t\t\t        useFrom: function (languageKey) {\r\n\t\t\t\t            forAllMenus('useFrom', languageKey);\r\n\t\t\t\t        },\r\n\t\t\t\t        shareFrom: function (languageKey) {\r\n\t\t\t\t            forAllMenus('shareFrom', languageKey);\r\n\t\t\t\t        }\r\n\t\t\t\t    }\r\n\t\t\t\t};\r\n\r\n\t\t\t    // Collect all localizationMenus (to enable \"all\" actions)\r\n\t\t\t\tif ($scope.formModel.localizationMenus === undefined)\r\n\t\t\t\t    $scope.formModel.localizationMenus = [];\r\n\t\t\t\t$scope.formModel.localizationMenus.push(vm.actions);\r\n\r\n\t\t\t\tvar forAllMenus = function (action, languageKey) {\r\n\t\t\t\t    for (var i = 0; i < $scope.formModel.localizationMenus.length; i++) {\r\n\t\t\t\t        $scope.formModel.localizationMenus[i][action](languageKey);\r\n\t\t\t\t    }\r\n\t\t\t\t};\r\n\t\t\t}]\r\n\t\t};\r\n\t});\r\n\r\n\teavLocalization.directive(\"eavTreatTimeUtc\", function () {\r\n\t    var directive = {\r\n\t        restrict: \"A\",\r\n\t        require: [\"ngModel\"],\r\n            compile: compile,\r\n\t        link: link\r\n\t    };\r\n\t    return directive;\r\n\r\n\t    function compile(element, attributes) {\r\n\r\n\t    }\r\n\r\n\t    function link(scope, element, attributes, modelController) {     \r\n\t        modelController[0].$formatters.push(function (modelValue) {\r\n\r\n\t            return modelValue;\r\n\t        });\r\n\r\n\t        modelController[0].parsers.push(function (viewValue) {\r\n\r\n\t            return viewValue;\r\n\t        });\r\n\t    }\r\n\t});\r\n})();\n\r\n\r\n// Note: the entity-reader is meant for admin-purposes. \r\n// It does not try to do fallback, because the admin-UI MUST know the real data\r\nfunction enhanceEntity(entity) {\r\n    var enhancer = this; \r\n\r\n    enhancer.enhanceWithCount = function (obj) {\r\n        obj.count = function () {\r\n            var key, count = 0;\r\n            for (key in this)\r\n                if (this.hasOwnProperty(key) && typeof this[key] != 'function')\r\n                    count++;\r\n            return count;\r\n        };\r\n    }; \r\n\r\n    // this will enhance a Values with necessary methods\r\n    enhancer.enhanceVs = function (vs) {\r\n        vs.hasLanguage = function (language) { return this.Dimensions.hasOwnProperty(language); };\r\n        vs.setLanguage = function (language, shareMode) { this.Dimensions[language] = shareMode; };\r\n        vs.languageMode = function(language) { return (this.hasLanguage(language)) ? this.Dimensions[language] : null; };\r\n\r\n        // ToDo: Fix enhance dimensions - or use alternative Object.keys(vs.Dimensions).length\r\n        //if(typeof vs.Dimensions != \"undefined\")\r\n            //enhancer.enhanceWithCount(vs.Dimensions);\r\n        return vs;\r\n    };\r\n\r\n    // this will enhance an attribute\r\n    enhancer.enhanceAtt = function(att) {\r\n        att.getVsWithLanguage = function(language) {\r\n            // try to find it based on the language - it then has a property matching the language\r\n            for (var v = 0; v < this.Values.length; v++)\r\n                if (this.Values[v].hasLanguage(language))\r\n                    return this.Values[v];\r\n\r\n            // if we don't find it, we must report it back as such\r\n            return null;\r\n        };\r\n\r\n        att.setLanguageToVs = function(vs, language, shareMode) {\r\n            // check if it's already there, if yes, just ensure shareMode, then done\r\n            if (vs.hasLanguage(language))\r\n                return vs.setLanguage(language, shareMode);\r\n\r\n            // otherwise find the language if it's anywhere else and remove that first; \r\n            // note that this might delete a value set, so we should only do it after checking if it wasn't already right\r\n            this.removeLanguage(language);\r\n\r\n            // now set it anew\r\n            return vs.setLanguage(language, shareMode);\r\n        };\r\n\r\n        att.removeLanguage = function(language) {\r\n            var value = this.getVsWithLanguage(language);\r\n            if (value === null)\r\n                return;\r\n            delete value.Dimensions[language];\r\n\r\n            // check if the vs still has any properties left, if not, remove it entirely - unless it's the last one...\r\n            if (Object.keys(value.Dimensions).length === 0 && this.Values.length > 0)\r\n                this.removeVs(value);\r\n        };\r\n\r\n        att.removeVs = function(vs) {\r\n            for (var v = 0; v < this.Values.length; v++)\r\n                if (this.Values[v] === vs)\r\n                    this.Values.splice(v, 1);\r\n        };\r\n\r\n        // todo: when adding VS - ensure the events are added too...\r\n        att.addVs = function(value, language, shareMode) {\r\n            var dimensions = {};\r\n            if(language !== null)\r\n                dimensions[language] = ((shareMode === null || shareMode === undefined) ? false : shareMode);\r\n            var newVs = { \"Value\": value, \"Dimensions\": dimensions };\r\n            // ToDo: enhancer.enhanceWithCount(newVs.Dimensions);\r\n            this.Values.push(enhancer.enhanceVs(newVs));\r\n        };\r\n\r\n        // Now go through the Values and give them more commands\r\n        for (var v = 0; v < att.Values.length; v++)\r\n            enhancer.enhanceVs(att.Values[v]);\r\n\r\n        return att;\r\n    };\r\n\r\n    // this will enhance an entity\r\n    enhancer.enhanceEntity = function(ent) {\r\n        ent.getTitle = function() {\r\n            ent.getAttribute(ent.TitleAttributeName);\r\n        };\r\n\r\n        ent.hasAttribute = function(attrName) {\r\n            return ent.Attributes[attrName] !== undefined;\r\n        };\r\n\r\n        ent.getAttribute = function(attrName) {\r\n            return ent.Attributes[attrName];\r\n        };\r\n\r\n        // ToDo: Discuss with 2dm \r\n        ent.Attributes.addAttribute = function (attrName) {\r\n            ent.Attributes[attrName] = { Values: [] };\r\n            enhancer.enhanceAtt(ent.Attributes[attrName]);\r\n        };\r\n\r\n        for (var attKey in ent.Attributes)\r\n            if(ent.Attributes.hasOwnProperty(attKey) && typeof(ent.Attributes[attKey]) != 'function')\r\n                enhancer.enhanceAtt(ent.Attributes[attKey]);\r\n\r\n        return ent;\r\n    };\r\n\r\n    return enhancer.enhanceEntity(entity);\r\n}\n/* service to manage input types */\r\n(function () {\r\n\t\"use strict\";\r\n\r\n    // notes: this has not been tested extensively\r\n    // I'm guessing that it's not optimal yet, and I'm guessing that if the dialog is opened multiple times, that the list of dependencies just\r\n    // keeps on growing and the UI might just get heavier with time ... must test once we have a few custom input types\r\n\r\n\tangular.module(\"eavEditEntity\")\r\n        .service(\"customInputTypes\", [\"eavConfig\", \"toastr\", \"formlyConfig\", \"$q\", \"$interval\", \"$ocLazyLoad\", function (eavConfig, toastr, formlyConfig, $q, $interval, $ocLazyLoad) {\r\n            // Returns a typed default value from the string representation\r\n            var svc = {};\r\n            svc.inputTypesOnPage = {};\r\n            svc.allLoaded = true;\r\n            svc.assetsToLoad = [];\r\n\r\n\t        svc.addInputType = function addInputType(field) {\r\n\t            var config = field.InputTypeConfig;\r\n                // check if anything defined - older configurations don't have anything and will default to string-default anyhow\r\n\t            if (config === undefined || config === null)\r\n\t                return;\r\n\r\n\t            svc.inputTypesOnPage[config.Type] = config;\r\n\r\n\t            svc.addToLoadQueue(config);\r\n\t        };\r\n\r\n\t        svc.addToLoadQueue = function loadNewAssets(config) {\r\n\t            if (config.Assets === undefined || config.Assets === null || !config.Assets) {\r\n\t                config.assetsLoaded = true;\r\n\t                return;\r\n\t            }\r\n\r\n\t            // split by new-line, ensuring nothing blank\r\n\t            var list = config.Assets.split(\"\\n\");\r\n\r\n\t            for (var a = 0; a < list.length; a++) {\r\n\t                var asset = list[a].trim();\r\n\t                if (asset.length > 5) { // ensure we skip empty lines etc.\r\n\t                    svc.assetsToLoad.push(svc.resolveSpecialPaths(asset));\r\n\t                }\r\n\t            }\r\n\t        };\r\n\r\n\t        // now create promise and wait for everything to load\r\n\t        svc.loadWithPromise = function loadWithPromise() {\r\n\t            return $ocLazyLoad.load(svc.assetsToLoad);\r\n\r\n\t        };\r\n\r\n\t        svc.resolveSpecialPaths = function resolve(url) {\r\n\t            url = url.replace(/\\[System:Path\\]/i, eavConfig.getUrlPrefix(\"system\"))\r\n\t                .replace(/\\[Zone:Path\\]/i, eavConfig.getUrlPrefix(\"zone\"))\r\n\t                .replace(/\\[App:Path\\]/i, eavConfig.getUrlPrefix(\"app\"));\r\n\t            return url;\r\n\t        };\r\n\r\n\t        svc.checkDependencyArrival = function cda(typeName) {\r\n\t            return !!formlyConfig.getType(typeName);\r\n\t        };\r\n\r\n\t        return svc;\r\n\t    }]);\r\n\r\n})();\n/* global angular */\r\n(function () {\r\n\t\"use strict\";\r\n\r\n\tangular.module(\"eavEditEntity\")\r\n        .service(\"eavDefaultValueService\", function () {\r\n\t\t// Returns a typed default value from the string representation\r\n\t\treturn function parseDefaultValue(fieldConfig) {\r\n\t\t\tvar e = fieldConfig;\r\n\t\t\tvar d = e.templateOptions.settings.All.DefaultValue;\r\n\r\n\t\t    if (e.templateOptions.header.Prefill && e.templateOptions.header.Prefill[e.key]) {\r\n\t\t\t    d = e.templateOptions.header.Prefill[e.key];\r\n\t\t\t}\r\n\r\n\t\t\tswitch (e.type.split(\"-\")[0]) {\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\t\treturn d !== undefined && d !== null ? d.toLowerCase() === \"true\" : false;\r\n\t\t\t\tcase \"datetime\":\r\n\t\t\t\t\treturn d !== undefined && d !== null && d !== \"\" ? new Date(d) : null;\r\n\t\t\t    case \"entity\":\r\n\t\t\t        if (!(d !== undefined && d !== null && d !== \"\"))\r\n\t\t\t            return []; // no default value\r\n\r\n\t\t\t        // 3 possibilities\r\n\t\t\t        if (d.constructor === Array) return d;  // possibility 1) an array\r\n\r\n                    // for possibility 2 & 3, do some variation checking\r\n\t\t\t        if (d.indexOf(\"{\") > -1) // string has { } characters, we must switch them to quotes\r\n\t\t\t            d = d.replace(/[\\{\\}]/g, \"\\\"\");\r\n\r\n\t\t\t        if (d.indexOf(\",\") !== -1 && d.indexOf(\"[\") === -1) // list but no array, add brackets\r\n\t\t\t            d = \"[\" + d + \"]\";\r\n\r\n\t\t\t        return (d.indexOf(\"[\") === 0) // possibility 2) an array with guid strings\r\n\t\t\t            ? JSON.parse(d) // if it's a string containing an array\r\n\t\t\t            : [d.replace(/\"/g, \"\")]; //  possibility 3) just a guid string, but might have quotes\r\n                        \r\n\t\t\t\tcase \"number\":\r\n\t\t\t\t    return d !== undefined && d !== null && d !== \"\" ? Number(d) : \"\";\r\n                default:\r\n\t\t\t\t\treturn d ? d : \"\";\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\r\n})();\n/* global angular */\r\n(function () {\r\n\t\"use strict\";\r\n\r\n    angular.module(\"eavEditEntity\")\r\n        /// Standard entity commands like get one, many etc.\r\n        .factory(\"entitiesSvc\", [\"$http\", \"appId\", \"toastrWithHttpErrorHandling\", \"promiseToastr\", function ($http, appId, toastrWithHttpErrorHandling, promiseToastr) {\r\n            var svc = {\r\n                toastr: toastrWithHttpErrorHandling\r\n            };\r\n\r\n            svc.getManyForEditing = function(appId, items) {\r\n                return $http.post(\"eav/entities/getmanyforediting\", items, { params: { appId: appId } });\r\n            };\r\n\r\n            svc.saveMany = function(appId, items) {\r\n                // first clean up unnecessary nodes - just to make sure we don't miss-read the JSONs transferred\r\n                var removeTempValue = function(value, key) { delete value._currentValue; };\r\n                var itmCopy = angular.copy(items);\r\n                for (var ei = 0; ei < itmCopy.length; ei++)\r\n                    angular.forEach(itmCopy[ei].Entity.Attributes, removeTempValue);\r\n\r\n                return $http.post(\"eav/entities/savemany\", itmCopy, { params: { appId: appId } }).then(function (serverKeys) {\r\n                    var syncUpdatedKeys = function(value, key) {\r\n                        // first ensure we don't break something\r\n                        var ent = value.Entity;\r\n                        if ((ent.Id === null || ent.Id === 0) && (ent.Guid !== null || typeof (ent.Guid) !== \"undefined\" || ent.Guid !== \"00000000-0000-0000-0000-000000000000\")) {\r\n                            // try to find it in the return material to re-assign it\r\n                            var newId = serverKeys.data[ent.Guid];\r\n                            value.Entity.Id = newId;\r\n                            value.Header.ID = newId;\r\n                        }\r\n                    };\r\n                    angular.forEach(items, syncUpdatedKeys);\r\n\r\n                    return serverKeys;\r\n                });\r\n            };\r\n\r\n            svc.delete = function del(type, id, tryForce) {\r\n                console.log(\"try to delete\");\r\n\r\n                var delPromise = $http.get(\"eav/entities/delete\", {\r\n                    ignoreErrors: true,\r\n                    params: {\r\n                        'contentType': type,\r\n                        'id': id,\r\n                        'appId': appId,\r\n                        'force': tryForce\r\n                    }\r\n                });\r\n                return promiseToastr(delPromise, \"Message.Deleting\", \"Message.Ok\", \"Message.Error\");\r\n            };\r\n\r\n            svc.newEntity = function(header) {\r\n                return {\r\n                    Id: null,\r\n                    Guid: header.Guid, \r\n                    Type: {\r\n                        StaticName: header.ContentTypeName // contentTypeName\r\n                    },\r\n                    Attributes: {},\r\n                    IsPublished: true\r\n                };\r\n            };\r\n\r\n\r\n            svc.save = function save(appId, newData) {\r\n                return $http.post(\"eav/entities/save\", newData, { params: { appId: appId } });\r\n            };\r\n\r\n            return svc;\r\n        }]);\r\n\r\n\r\n})();\n/*\r\n * This is a special service which uses a field mask \r\n * \r\n * like \"[Title] - [Subtitle]\" \r\n * \r\n * and will then provide a list of fields which were used, as well as a resolved value if needed\r\n * \r\n */\r\n\r\nangular.module(\"eavFieldTemplates\")\r\n    .factory(\"fieldMask\", function() {\r\n        function createFieldMask(mask, model, overloadPreCleanValues) {\r\n            var srv = {\r\n                mask: mask,\r\n                model: model,\r\n                findFields: /\\[.*?\\]/ig,\r\n                unwrapField: /[\\[\\]]/ig\r\n            };\r\n\r\n            srv.resolve = function getNewAutoValue() {\r\n                var mask = srv.mask;\r\n                angular.forEach(srv.fieldList(), function(e, i) {\r\n                    var replaceValue = (srv.model.hasOwnProperty(e) && srv.model[e] && srv.model[e]._currentValue && srv.model[e]._currentValue.Value)\r\n                        ? srv.model[e]._currentValue.Value : \"\";\r\n                    var cleaned = srv.preClean(e, replaceValue);\r\n                    mask = mask.replace(e, cleaned);\r\n                });\r\n\r\n                return mask;\r\n            };\r\n\r\n            srv.fieldList = function() {\r\n                var result = [];\r\n                if (!srv.mask) return result;\r\n                var matches = srv.mask.match(srv.findFields);\r\n                angular.forEach(matches, function(e, i) {\r\n                    var staticName = e.replace(srv.unwrapField, \"\");\r\n                    result.push(staticName);\r\n                });\r\n                return result;\r\n            };\r\n\r\n            srv.preClean = function(key, value) {\r\n                return value;\r\n            };\r\n\r\n            if (overloadPreCleanValues) // got an overload...\r\n                srv.preClean = overloadPreCleanValues;\r\n\r\n            return srv;\r\n        }\r\n\r\n        return createFieldMask;\r\n    });\nangular.module(\"eavEditTemplates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"form/edit-many-entities.html\",\"<div ng-if=\\\"vm.items != null\\\" ng-click=\\\"vm.debug.autoEnableAsNeeded($event)\\\" class=\\\"form-container-multi\\\">\\r\\n    <eav-language-switcher is-disabled=\\\"!vm.isValid()\\\"></eav-language-switcher>\\r\\n\\r\\n    <div ng-repeat=\\\"p in vm.items\\\" class=\\\"group-entity\\\">\\r\\n        <div class=\\\"form-ci-title unhide-area\\\" ng-click=\\\"p.collapse = !p.collapse\\\">\\r\\n            <span style=\\\"position: relative\\\">\\r\\n                <i class=\\\"decoration icon-side-marker\\\"></i>\\r\\n                <i class=\\\"decoration state icon-minus collapse-entity-button hide-till-mouseover\\\" ng-if=\\\"!p.collapse\\\"></i>\\r\\n                <i class=\\\"decoration state icon-plus collapse-entity-button\\\" ng-if=\\\"p.collapse\\\"></i>\\r\\n            </span>\\r\\n\\r\\n            {{p.Header.Title ? p.Header.Title : \\'EditEntity.DefaultTitle\\' | translate }}&nbsp;\\r\\n            <span ng-if=\\\"p.Header.Group.SlotCanBeEmpty\\\" ng-click=\\\"vm.toggleSlotIsEmpty(p)\\\" stop-event=\\\"click\\\">\\r\\n                <i class=\\\"eav-icon-toggle-off\\\" ng-class=\\\" p.slotIsUsed ? \\'icon-toggle-on\\' : \\'icon-toggle-off\\' \\\" ng-click=\\\"p.slotIsUsed = !p.slotIsUsed\\\" tooltip=\\\"{{\\'EditEntity.SlotUsed\\' + p.slotIsUsed | translate}}\\\"></i>\\r\\n                <!--<switch ng-model=\\\"p.slotIsUsed\\\" class=\\\"tosic-blue\\\" style=\\\"top: 6px;\\\" tooltip=\\\"{{\\'EditEntity.SlotUsed\\' + p.slotIsUsed | translate}}\\\"></switch>-->\\r\\n            </span>\\r\\n        </div>\\r\\n        <eav-edit-entity-form entity=\\\"p.Entity\\\" header=\\\"p.Header\\\" register-edit-control=\\\"vm.registerEditControl\\\" ng-hide=\\\"p.collapse\\\"></eav-edit-entity-form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div>\\r\\n        <!-- note: the buttons are not really disabled, because we want to be able to click them and see the error message -->\\r\\n        <div class=\\\"btn-group\\\" dropdown>\\r\\n            <button ng-class=\\\"{ \\'disabled\\': !vm.isValid() || vm.isWorking > 0}\\\" ng-click=\\\"vm.save(true)\\\" type=\\\"button\\\" class=\\\"btn btn-primary btn-lg submit-button\\\">\\r\\n                <span class=\\\"eav-icon-ok\\\" tooltip=\\\"{{ \\'Button.Save\\' | translate }}\\\"></span> &nbsp;<span translate=\\\"Button.Save\\\"></span>\\r\\n            </button>\\r\\n            <button class=\\\"dropdown-toggle btn btn-primary btn-lg\\\" ng-class=\\\"{ \\'disabled\\': !vm.isValid() || vm.isWorking > 0}\\\" dropdown-toggle><i class=\\\"caret\\\"></i></button>\\r\\n            <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\r\\n                <li><a ng-click=\\\"vm.save(true)\\\"><i class=\\\"eav-icon-ok\\\"></i> {{ \\'Button.Save\\' | translate }}</a></li>\\r\\n                <li><a ng-click=\\\"vm.save(false)\\\"><i class=\\\"eav-icon-ok-circled2\\\"></i> {{ \\'Button.SaveAndKeepOpen\\' | translate }}</a></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <!--&nbsp;\\r\\n        <button ng-class=\\\"{ \\'disabled\\': !vm.isValid() || vm.isWorking > 0}\\\" class=\\\"btn btn-default btn-lg btn-icon-square\\\" type=\\\"button\\\" ng-click=\\\"vm.save(false)\\\">\\r\\n            <span class=\\\"eav-icon-ok-circled2\\\" tooltip=\\\"{{ \\'Button.SaveAndKeepOpen\\' | translate }}\\\"></span>\\r\\n        </button>-->\\r\\n        &nbsp;\\r\\n        <!-- note: published status will apply to all - so the first is taken for identification if published -->\\r\\n        &nbsp;\\r\\n        <div class=\\\"btn-group\\\" dropdown>\\r\\n            <a class=\\\"dropdown-toggle\\\" dropdown-toggle><i ng-class=\\\"{\\'icon-eye\\': vm.publishMode === \\'show\\', \\'icon-eye-close\\': vm.publishMode === \\'hide\\', \\'icon-git-branch\\': vm.publishMode === \\'branch\\'}\\\"></i> {{ \\'SaveMode.\\' + vm.publishMode |translate }}<i class=\\\"caret\\\"></i></a>\\r\\n            <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\r\\n                <li><a ng-click=\\\"vm.publishMode = \\'show\\'\\\"><i class=\\\"eav-icon-eye\\\"></i> {{ \\'SaveMode.show\\' |translate }}</a></li>\\r\\n                <li><a ng-click=\\\"vm.publishMode = \\'hide\\'\\\"><i class=\\\"eav-icon-eye-close\\\"></i> {{ \\'SaveMode.hide\\' |translate }}</a></li>\\r\\n                <li ng-show=\\\"vm.enableDraft\\\"><a ng-click=\\\"vm.publishMode = \\'branch\\'\\\"><i class=\\\"eav-icon-git-branch\\\"></i> {{ \\'SaveMode.branch\\' |translate }}</a></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <span ng-if=\\\"vm.debug.on\\\">\\r\\n            <button class=\\\"eav-icon-flash btn\\\" tooltip=\\\"debug\\\" ng-click=\\\"vm.showDebugItems = !vm.showDebugItems\\\"></button>\\r\\n        </span>\\r\\n        <show-debug-availability class=\\\"pull-right\\\" style=\\\"margin-top: 20px;\\\"></show-debug-availability>\\r\\n    </div>\\r\\n    <div ng-if=\\\"vm.debug.on && vm.showDebugItems\\\">\\r\\n        <div>\\r\\n            isValid: {{vm.isValid()}}<br />\\r\\n            isWorking: {{vm.isWorking}}\\r\\n        </div>\\r\\n        <pre>{{ vm.items | json }}</pre>\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"form/edit-single-entity.html\",\"<div ng-show=\\\"vm.editInDefaultLanguageFirst()\\\" translate=\\\"Message.PleaseCreateDefLang\\\">\\r\\n\t\\r\\n</div>\\r\\n<div ng-show=\\\"!vm.editInDefaultLanguageFirst()\\\">\\r\\n    <formly-form ng-if=\\\"vm.formFields && vm.formFields.length\\\" ng-submit=\\\"vm.onSubmit()\\\" form=\\\"vm.form\\\" model=\\\"vm.entity.Attributes\\\" fields=\\\"vm.formFields\\\"></formly-form>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"form/main-form.html\",\"<div class=\\\"modal-body-disabled\\\">\\r\\n    <span class=\\\"pull-right\\\">\\r\\n        <span style=\\\"display: inline-block; position: relative; left:0px\\\">\\r\\n            <button class=\\\"btn btn-default btn-icon-square btn-subtle\\\" type=\\\"button\\\" ng-click=\\\"vm.close()\\\">\\r\\n                <i class=\\\"eav-icon-cancel\\\"></i>\\r\\n            </button>\\r\\n        </span>\\r\\n    </span>\\r\\n    <eav-edit-entities item-list=\\\"vm.itemList\\\" after-save-event=\\\"vm.afterSave\\\" state=\\\"vm.state\\\" close=\\\"vm.close\\\"></eav-edit-entities>\\r\\n</div>\");\n$templateCache.put(\"localization/formly-localization-wrapper.html\",\"<eav-localization-scope-control></eav-localization-scope-control>\\r\\n<div ng-if=\\\"!!value\\\">\\r\\n    <formly-transclude></formly-transclude>\\r\\n    <eav-localization-menu form-model=\\\"model\\\" field-model=\\\"model[options.key]\\\" options=\\\"options\\\" value=\\\"value\\\" index=\\\"index\\\"></eav-localization-menu>\\r\\n</div>\\r\\n<p class=\\\"bg-info\\\" style=\\\"padding:12px;\\\" ng-if=\\\"!value\\\" translate=\\\"LangWrapper.CreateValueInDefFirst\\\" translate-values=\\\"{ fieldname: \\'{{to.label}}\\' }\\\">Please... <i>\\'{{to.label}}\\'</i> in the def...</p>\");\n$templateCache.put(\"localization/language-switcher.html\",\"<tabset>\\r\\n    <tab ng-repeat=\\\"l in languages.languages\\\" heading=\\\"{{ l.name.substring(0, l.name.indexOf(\\'(\\') > 0 ? l.name.indexOf(\\'(\\') - 1 : 100 ) }}\\\" ng-click=\\\"!isDisabled ? languages.currentLanguage = l.key : false;\\\" disable=\\\"isDisabled\\\" tooltip=\\\"{{l.name}}\\\"></tab><!-- active=\\\"languages.currentLanguage == l.key\\\" -->\\r\\n</tabset>\");\n$templateCache.put(\"localization/localization-menu.html\",\"<div dropdown is-open=\\\"status.isopen\\\" class=\\\"eav-localization\\\"> <!--style=\\\"z-index:{{1000 - index}};\\\"-->\\r\\n\t<a class=\\\"eav-localization-lock\\\" ng-click=\\\"vm.actions.toggleTranslate();\\\" ng-if=\\\"vm.isDefaultLanguage()\\\" title=\\\"{{vm.tooltip()}}\\\" ng-class=\\\"{ \\'eav-localization-lock-open\\': !options.templateOptions.disabled }\\\" dropdown-toggle>\\r\\n        {{vm.infoMessage()}} <i class=\\\"glyphicon glyphicon-globe\\\"></i>\\r\\n\t</a>\\r\\n    <ul class=\\\"dropdown-menu multi-level pull-right eav-localization-dropdown\\\" role=\\\"menu\\\" aria-labelledby=\\\"single-button\\\">\\r\\n        <li role=\\\"menuitem\\\"><a ng-click=\\\"vm.actions.translate()\\\" translate=\\\"LangMenu.Unlink\\\"></a></li>\\r\\n        <li role=\\\"menuitem\\\"><a ng-click=\\\"vm.actions.linkDefault()\\\" translate=\\\"LangMenu.LinkDefault\\\"></a></li>\\r\\n        <!-- Google translate is disabled because there is no longer a free version\\r\\n            <li role=\\\"menuitem\\\" class=\\\"dropdown-submenu\\\">\\r\\n            <a href=\\\"#\\\" translate=\\\"LangMenu.GoogleTranslate\\\"></a>\\r\\n            <ul class=\\\"dropdown-menu\\\">\\r\\n                <li ng-repeat=\\\"language in vm.languages.languages\\\" role=\\\"menuitem\\\">\\r\\n                    <a ng-click=\\\"vm.actions.autoTranslate(language.key)\\\" title=\\\"{{language.name}}\\\" href=\\\"#\\\">{{language.key}}</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </li>-->\\r\\n        <li role=\\\"menuitem\\\" class=\\\"dropdown-submenu\\\">\\r\\n            <a href=\\\"#\\\" translate=\\\"LangMenu.Copy\\\"></a>\\r\\n            <ul class=\\\"dropdown-menu\\\">\\r\\n                <li ng-repeat=\\\"language in vm.languages.languages\\\" ng-class=\\\"{ disabled: options.templateOptions.disabled || !vm.hasLanguage(language.key) }\\\" role=\\\"menuitem\\\">\\r\\n                    <a ng-click=\\\"vm.actions.copyFrom(language.key)\\\" title=\\\"{{language.name}}\\\" href=\\\"#\\\">{{language.key}}</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </li>\\r\\n        <li role=\\\"menuitem\\\" class=\\\"dropdown-submenu\\\">\\r\\n            <a href=\\\"#\\\" translate=\\\"LangMenu.Use\\\"></a>\\r\\n            <ul class=\\\"dropdown-menu\\\">\\r\\n                <li ng-repeat=\\\"language in vm.languages.languages\\\" ng-class=\\\"{ disabled: !vm.hasLanguage(language.key) }\\\" role=\\\"menuitem\\\">\\r\\n                    <a ng-click=\\\"vm.actions.useFrom(language.key)\\\" title=\\\"{{language.name}}\\\" href=\\\"#\\\">{{language.key}}</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </li>\\r\\n        <li role=\\\"menuitem\\\" class=\\\"dropdown-submenu\\\">\\r\\n            <a href=\\\"#\\\" translate=\\\"LangMenu.Share\\\"></a>\\r\\n            <ul class=\\\"dropdown-menu\\\">\\r\\n                <li ng-repeat=\\\"language in vm.languages.languages\\\" ng-class=\\\"{ disabled: !vm.hasLanguage(language.key) }\\\" role=\\\"menuitem\\\">\\r\\n                    <a ng-click=\\\"vm.actions.shareFrom(language.key)\\\" title=\\\"{{language.name}}\\\" href=\\\"#\\\">{{language.key}}</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </li>\\r\\n        <!-- All fields -->\\r\\n        <li class=\\\"divider\\\"></li>\\r\\n        <li role=\\\"menuitem\\\" class=\\\"dropdown-submenu\\\">\\r\\n            <a href=\\\"#\\\" translate=\\\"LangMenu.AllFields\\\"></a>\\r\\n            <ul class=\\\"dropdown-menu\\\">\\r\\n                <li role=\\\"menuitem\\\"><a ng-click=\\\"vm.actions.all.translate()\\\" translate=\\\"LangMenu.Unlink\\\"></a></li>\\r\\n                <li role=\\\"menuitem\\\"><a ng-click=\\\"vm.actions.all.linkDefault()\\\" translate=\\\"LangMenu.LinkDefault\\\"></a></li>\\r\\n                <li role=\\\"menuitem\\\" class=\\\"dropdown-submenu\\\">\\r\\n                    <a href=\\\"#\\\" translate=\\\"LangMenu.Copy\\\"></a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li ng-repeat=\\\"language in vm.languages.languages\\\" role=\\\"menuitem\\\">\\r\\n                            <a ng-click=\\\"vm.actions.all.copyFrom(language.key)\\\" title=\\\"{{language.name}}\\\" href=\\\"#\\\">{{language.key}}</a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li role=\\\"menuitem\\\" class=\\\"dropdown-submenu\\\">\\r\\n                    <a href=\\\"#\\\" translate=\\\"LangMenu.Use\\\"></a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li ng-repeat=\\\"language in vm.languages.languages\\\" role=\\\"menuitem\\\">\\r\\n                            <a ng-click=\\\"vm.actions.all.useFrom(language.key)\\\" title=\\\"{{language.name}}\\\" href=\\\"#\\\">{{language.key}}</a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li role=\\\"menuitem\\\" class=\\\"dropdown-submenu\\\">\\r\\n                    <a href=\\\"#\\\" translate=\\\"LangMenu.Share\\\"></a>\\r\\n                    <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li ng-repeat=\\\"language in vm.languages.languages\\\" role=\\\"menuitem\\\">\\r\\n                            <a ng-click=\\\"vm.actions.all.shareFrom(language.key)\\\" title=\\\"{{language.name}}\\\" href=\\\"#\\\">{{language.key}}</a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\");\n$templateCache.put(\"wrappers/collapsible.html\",\"<!-- hide entire field if necessary-->\\r\\n<div ng-show=\\\"!to.collapse\\\" class=\\\"group-field-set form-field-grid-keeper\\\">\\r\\n    <formly-transclude></formly-transclude>\\r\\n</div>\");\n$templateCache.put(\"wrappers/disablevisually.html\",\"<div visually-disabled=\\\"{{to.disabled}}\\\">\\r\\n    <formly-transclude></formly-transclude>\\r\\n</div>\");\n$templateCache.put(\"wrappers/eav-label-inside.html\",\"<label for=\\\"{{id}}\\\" class=\\\"control-label eav-label {{to.labelSrOnly ? \\'sr-only\\' : \\'\\'}} {{to.type}}\\\"\\r\\n       ng-if=\\\"to.label\\\"\\r\\n       ng-click=\\\"to.collapseField = !to.collapseField\\\">\\r\\n    {{to.label}}\\r\\n    {{to.required ? \\'*\\' : \\'\\'}}\\r\\n    <a tabindex=\\\"-1\\\" ng-click=\\\"to.showDescription = !to.showDescription\\\" href=\\\"javascript:void(0);\\\" ng-if=\\\"to.description && to.description != \\'\\'\\\">\\r\\n        <i class=\\\"eav-icon-info-circled low-priority\\\"></i>\\r\\n    </a>\\r\\n    <span class=\\\"btn-sm\\\" ng-if=\\\"to.enableCollapseField\\\">\\r\\n        <span ng-if=\\\"to.collapseField\\\" class=\\\"eav-icon-plus-circled low-priority collapse-fieldgroup-button\\\"></span>\\r\\n        <span ng-if=\\\"!to.collapseField\\\" class=\\\"eav-icon-minus-circled low-priority collapse-fieldgroup-button\\\"></span>\\r\\n    </span>\\r\\n</label>\");\n$templateCache.put(\"wrappers/eav-label.html\",\"<div>\\r\\n    <!-- just fyi: the ng-class adds a \\\"float-away\\\" if the notes are shown or if the field has content -->\\r\\n    <div>\\r\\n        <div class=\\\"inside\\\" ng-include=\\\"\\'wrappers/eav-label-inside.html\\'\\\"></div>\\r\\n        <div ng-if=\\\"to.showDescription\\\" class=\\\"info-wrapper\\\">\\r\\n            <p class=\\\"bg-info\\\" style=\\\"padding: 5px;\\\" ng-bind-html=\\\"to.description\\\">\\r\\n            </p>\\r\\n        </div>\\r\\n\\r\\n        <div ng-show=\\\"!(to.collapseField && to.enableCollapseField)\\\">\\r\\n            <formly-transclude></formly-transclude>\\r\\n        </div>\\r\\n\\r\\n        <div ng-if=\\\"debug.on\\\">\\r\\n            Field-Debug: {{fc}}\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"wrappers/field-group.html\",\"<div>\\r\\n    <div class=\\\"form-ci-subtitle unhide-area\\\" ng-click=\\\"toggle()\\\">\\r\\n        <span style=\\\"position: relative\\\">\\r\\n            <i class=\\\"eav-icon-side-marker decoration\\\"></i>\\r\\n            <span ng-if=\\\"to.collapseGroup\\\" class=\\\"decoration state icon-plus-circled low-priority collapse-fieldgroup-button\\\"></span>\\r\\n            <span ng-if=\\\"!to.collapseGroup\\\" class=\\\"decoration state icon-minus-circled low-priority collapse-fieldgroup-button hide-till-mouseover\\\"></span>\\r\\n        </span>\\r\\n        {{to.label}}\\r\\n    </div>\\r\\n    <div ng-if=\\\"!to.collapseGroup\\\" style=\\\"padding: 5px;\\\" ng-bind-html=\\\"to.description\\\">\\r\\n    </div>\\r\\n    <formly-transclude></formly-transclude>\\r\\n</div>\");\n$templateCache.put(\"wrappers/float-label.html\",\"<div class=\\\"wrap-float-label\\\"\\r\\n     ng-class=\\\"[\\r\\n     {\\'float-disabled\\': value.Value || (fc[0] || fc).$modelValue || to.showDescription || to.focused || ( (fc[0] || fc).$invalid && (fc[0] || fc).$touched ) },\\r\\n     {focused: to.focused},\\r\\n     {\\'ng-touched\\': (fc[0] || fc).$touched},\\r\\n     {\\'ng-invalid\\' : (fc[0] || fc).$invalid}\\r\\n     ]\\\">\\r\\n    <formly-transclude></formly-transclude>\\r\\n</div>\");\n$templateCache.put(\"wrappers/no-label-space.html\",\"<div class=\\\"no-label-space\\\">\\r\\n    <formly-transclude></formly-transclude>\\r\\n</div>\");\n$templateCache.put(\"wrappers/preview-default.html\",\"<div class=\\\"preview-default\\\">\\r\\n    <div class=\\\"preview-area\\\"></div>\\r\\n    <div>\\r\\n        <formly-transclude></formly-transclude>\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"wrappers/responsive.html\",\"<div class=\\\"clearfix\\\">\\r\\n    <div class=\\\"responsive-optional\\\" >\\r\\n        <div ng-include=\\\"\\'wrappers/eav-label-inside.html\\'\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"responsive-priority\\\">\\r\\n        <formly-transclude></formly-transclude>\\r\\n    </div>\\r\\n</div>\");\n$templateCache.put(\"fields/custom/custom-default.html\",\"<div class=\\\"alert alert-danger\\\">\\r\\n    ERROR - This is a custom field, you shouldn\\'t see this. You only see this because the custom-dialog is missing.\\r\\n</div>\\r\\n<input class=\\\"form-control input-lg\\\" ng-pattern=\\\"vm.regexPattern\\\" ng-model=\\\"value.Value\\\">\");\n$templateCache.put(\"fields/boolean/boolean-default.html\",\"<div class=\\\"checkbox checkbox-labeled\\\">\\r\\n    <!--<label>-->\\r\\n        <switch class=\\\"tosic-green pull-left\\\" ng-model=\\\"value.Value\\\"></switch>\\r\\n    <!-- maybe need the (hidden) input to ensure the label actually switches the boolean -->\\r\\n        <!--<input type=\\\"checkbox\\\" class=\\\"formly-field-checkbox\\\" ng-model=\\\"value.Value\\\" style=\\\"display: none\\\">-->\\r\\n        <div ng-include=\\\"\\'wrappers/eav-label.html\\'\\\"></div>\\r\\n        <!--{{to.label}} {{to.required ? \\'*\\' : \\'\\'}}-->\\r\\n    <!--</label>-->\\r\\n</div>\");\n$templateCache.put(\"fields/datetime/datetime-default.html\",\"<div>\\r\\n    <div class=\\\"input-group\\\" style=\\\"width: 100%\\\">\\r\\n\\r\\n\\r\\n\\r\\n        <input class=\\\"form-control input-lg\\\" ng-model=\\\"value.Value\\\" is-open=\\\"to.isOpen\\\" datepicker-options=\\\"to.datepickerOptions\\\" datepicker-popup />\\r\\n\\r\\n        <span class=\\\"input-group-btn\\\" style=\\\"vertical-align: top;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default icon-field-button pull-right\\\"\\r\\n                    ng-disabled=\\\"to.disabled\\\"\\r\\n                    ng-click=\\\"to.isOpen = true;\\\">\\r\\n                <i class=\\\"eav-icon-calendar\\\"></i>\\r\\n            </button>\\r\\n        </span>\\r\\n            <!--<div class=\\\"input-group-addon\\\" style=\\\"cursor: pointer;\\\" ng-click=\\\"to.isOpen = true;\\\">\\r\\n            <i class=\\\"glyphicon glyphicon-calendar\\\"></i>\\r\\n        </div>-->\\r\\n       <timepicker ng-show=\\\"to.settings.merged.UseTimePicker\\\" ng-model=\\\"value.Value\\\" show-meridian=\\\"ismeridian\\\"></timepicker>\\r\\n</div>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"fields/empty/empty-default.html\",\"<span></span>\");\n$templateCache.put(\"fields/entity/entity-default.html\",\"<div class=\\\"eav-entityselect\\\">\\r\\n\\r\\n    <div ui-tree=\\\"options\\\" data-empty-placeholder-enabled=\\\"false\\\" ng-show=\\\"to.settings.merged.EnableCreate || chosenEntities.length > 0\\\">\\r\\n        <table ui-tree-nodes ng-model=\\\"chosenEntities\\\" entity-validation ng-required=\\\"false\\\" class=\\\"eav-entityselect-table\\\" style=\\\"table-layout:fixed;\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th></th>\\r\\n                    <th></th>\\r\\n                    <th></th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tr ng-repeat=\\\"item in chosenEntities track by $id(item)\\\" ui-tree-node class=\\\"eav-entityselect-item\\\" ui-tree-handle>\\r\\n                <td>\\r\\n                    <i title=\\\"{{ \\'FieldType.Entity.DragMove\\' | translate }}\\\" class=\\\"eav-icon-link pull-left eav-entityselect-icon\\\" ng-show=\\\"to.settings.Entity.AllowMultiValue\\\"></i>\\r\\n                    <i title=\\\"\\\" class=\\\"eav-icon-link pull-left eav-entityselect-icon\\\" ng-show=\\\"!to.settings.Entity.AllowMultiValue\\\"></i>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <span class=\\\"eav-entityselect-item-title\\\" title=\\\"{{getEntityText(item) + \\' (\\' + item + \\')\\'}}\\\">{{getEntityText(item)}}</span>\\r\\n                </td>\\r\\n                <td style=\\\"text-align:right;\\\">\\r\\n                    <ul class=\\\"eav-entityselect-item-actions\\\" data-nodrag>\\r\\n                        <li>\\r\\n                            <a title=\\\"{{ \\'FieldType.Entity.Edit\\' | translate }}\\\" ng-click=\\\"edit(item, index)\\\" ng-if=\\\"to.settings.merged.EnableEdit\\\">\\r\\n                                <i class=\\\"eav-icon-pencil\\\"></i>\\r\\n                            </a>\\r\\n                        </li>\\r\\n                        <li>\\r\\n                            <a title=\\\"{{ \\'FieldType.Entity.Remove\\' | translate }}\\\" ng-click=\\\"removeSlot(item, $index)\\\" class=\\\"eav-entityselect-item-remove\\\" ng-if=\\\"to.settings.merged.EnableRemove\\\">\\r\\n                                <i ng-class=\\\"{ \\'icon-minus-circled\\': to.settings.merged.AllowMultiValue, \\'icon-down-dir\\': !to.settings.merged.AllowMultiValue  }\\\"></i>\\r\\n                            </a>\\r\\n                        </li>\\r\\n                        <li>\\r\\n                            <!-- todo: i18n, code in action, icon-visiblity/alignment -->\\r\\n                            <a title=\\\"{{ \\'FieldType.Entity.Delete\\' | translate }}\\\" ng-click=\\\"deleteItemInSlot(item, $index)\\\" class=\\\"eav-entityselect-item-remove\\\" ng-if=\\\"to.settings.merged.EnableDelete\\\">\\r\\n                                <i class=\\\"eav-icon-cancel\\\"></i>\\r\\n                            </a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n    <ol>\\r\\n        <!-- test - want to re-align how two add-scenarios work; ideally side-by side -->\\r\\n        <li class=\\\"eav-entityselect-item subtle-till-mouseover\\\"\\r\\n            ng-show=\\\"(to.settings.merged.EnableAddExisting && (to.settings.merged.AllowMultiValue || chosenEntities.length < 1)) || (to.settings.merged.EnableCreate && (to.settings.merged.AllowMultiValue || chosenEntities.length < 1))\\\">\\r\\n\\r\\n            <!-- create new entity to add to this list -->\\r\\n            <div ng-if=\\\"to.settings.merged.EnableCreate && (to.settings.merged.AllowMultiValue || chosenEntities.length < 1)\\\"\\r\\n                 class=\\\"eav-entityselect-item eav-entityselect-create\\\"\\r\\n                 ng-click=\\\"openNewEntityDialog()\\\"\\r\\n                 style=\\\"width: 50%; float: left\\\"\\r\\n                 >\\r\\n                <i class=\\\"eav-icon-plus pull-left eav-entityselect-icon\\\"></i>\\r\\n                <span>{{ \\'FieldType.Entity.New\\' | translate }}&nbsp;</span>\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n                style=\\\"width: 50%; float: left;\\\"\\r\\n                class=\\\"eav-entityselect-item\\\"\\r\\n                ng-show=\\\"to.settings.merged.EnableAddExisting && (to.settings.merged.AllowMultiValue || chosenEntities.length < 1)\\\">\\r\\n                    <i class=\\\"eav-icon-plus-circled pull-left eav-entityselect-icon-before-select\\\"></i>\\r\\n                    <div class=\\\"eav-entityselect-selector-wrapper\\\">\\r\\n                        <select class=\\\"eav-entityselect-selector form-control input-lg\\\"\\r\\n                                formly-skip-ng-model-attrs-manipulator\\r\\n                                ng-model=\\\"selectedEntity\\\"\\r\\n                                ng-change=\\\"addEntity()\\\">\\r\\n                            <option selected=\\\"selected\\\" value=\\\"\\\" translate=\\\"FieldType.Entity.Choose\\\"></option>\\r\\n                            <option ng-repeat=\\\"item in availableEntities\\\" ng-disabled=\\\"chosenEntities.indexOf(item.Value) != -1\\\" value=\\\"{{item.Value}}\\\">{{item.Text}}</option>\\r\\n                        </select>\\r\\n                </div>\\r\\n            </div>\\r\\n        </li>\\r\\n        <!-- add existing entity to this list--><!--ng-if=\\\"to.settings.merged.EnableAddExisting\\\"-->\\r\\n        <!--<li class=\\\"eav-entityselect-item subtle-till-mouseover\\\"\\r\\n            ng-show=\\\"to.settings.merged.EnableAddExisting && (to.settings.merged.AllowMultiValue || chosenEntities.length < 1)\\\">\\r\\n            <div>\\r\\n                <i class=\\\"eav-icon-plus-circled pull-left eav-entityselect-icon-before-select\\\"></i>\\r\\n                <div class=\\\"eav-entityselect-selector-wrapper\\\">\\r\\n                    <select class=\\\"eav-entityselect-selector form-control input-lg\\\"\\r\\n                            formly-skip-ng-model-attrs-manipulator\\r\\n                            ng-model=\\\"selectedEntity\\\"\\r\\n                            ng-change=\\\"addEntity()\\\">\\r\\n                        <option value=\\\"\\\" translate=\\\"FieldType.Entity.Choose\\\"></option>\\r\\n                        <option ng-repeat=\\\"item in availableEntities\\\" ng-disabled=\\\"chosenEntities.indexOf(item.Value) != -1\\\" value=\\\"{{item.Value}}\\\">{{item.Text}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n        </li>-->\\r\\n\\r\\n        <!-- create new entity to add to this list -->\\r\\n        <!--<li ng-if=\\\"to.settings.merged.EnableCreate && (to.settings.merged.AllowMultiValue || chosenEntities.length < 1)\\\"\\r\\n            class=\\\"eav-entityselect-item eav-entityselect-create subtle-till-mouseover\\\">\\r\\n            <div ng-click=\\\"openNewEntityDialog()\\\">\\r\\n                <i class=\\\"eav-icon-plus pull-left eav-entityselect-icon\\\"></i>\\r\\n                <span>{{ \\'FieldType.Entity.New\\' | translate }}&nbsp;</span>\\r\\n            </div>\\r\\n        </li>-->\\r\\n    </ol>\\r\\n</div>\");\n$templateCache.put(\"ml-entities/tests/SpecRunner.html\",\"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n  <meta charset=\\\"utf-8\\\">\\r\\n  <title>Jasmine Spec Runner v2.3.4</title>\\r\\n    <!--\\r\\n  <link rel=\\\"shortcut icon\\\" type=\\\"image/png\\\" href=\\\"lib/jasmine-2.3.4/jasmine_favicon.png\\\">\\r\\n  <link rel=\\\"stylesheet\\\" href=\\\"lib/jasmine-2.3.4/jasmine.css\\\">\\r\\n\\r\\n  <script src=\\\"lib/jasmine-2.3.4/jasmine.js\\\"></script>\\r\\n  <script src=\\\"lib/jasmine-2.3.4/jasmine-html.js\\\"></script>\\r\\n  <script src=\\\"lib/jasmine-2.3.4/boot.js\\\"></script>\\r\\n        -->\\r\\n\\r\\n    <link rel=\\\"stylesheet\\\" href=\\\"../../../../node_modules\\\\grunt-contrib-jasmine\\\\node_modules\\\\jasmine-core/lib/jasmine-core/jasmine.css\\\">\\r\\n    <script src=\\\"../../../../node_modules\\\\grunt-contrib-jasmine\\\\node_modules\\\\jasmine-core/lib/jasmine-core/jasmine.js\\\"></script>\\r\\n    <script src=\\\"../../../../node_modules\\\\grunt-contrib-jasmine\\\\node_modules\\\\jasmine-core/lib/jasmine-core/jasmine-html.js\\\"></script>\\r\\n    <script src=\\\"../../../../node_modules\\\\grunt-contrib-jasmine\\\\node_modules\\\\jasmine-core/lib/jasmine-core/boot.js\\\"></script>\\r\\n  <!-- include source files here... -->\\r\\n    <!--\\r\\n  <script src=\\\"src/Player.js\\\"></script>\\r\\n  <script src=\\\"src/Song.js\\\"></script>\\r\\n    -->\\r\\n    <script src=\\\"../entity-enhancer.js\\\"></script>\\r\\n\\r\\n\\r\\n  <!-- include spec files here... -->\\r\\n    <!--\\r\\n  <script src=\\\"spec/SpecHelper.js\\\"></script>\\r\\n  <script src=\\\"spec/PlayerSpec.js\\\"></script>\\r\\n        -->\\r\\n    <script src=\\\"../specs/eav-content-ml.spec.js\\\"></script>\\r\\n\\r\\n</head>\\r\\n\\r\\n<body>\\r\\n</body>\\r\\n</html>\\r\\n\");}]);\n/*\r\n * This wrapper should be around all fields, so that they can collapse \r\n * when a field-group-title requires collapsing\r\n */\r\n(function () {\r\n    \"use strict\";\r\n\r\n    angular.module(\"eavFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", function (formlyConfigProvider) {\r\n            formlyConfigProvider.setWrapper({\r\n                name: 'collapsible',\r\n                templateUrl: \"wrappers/collapsible.html\"\r\n            });\r\n        }]);\r\n})();\n\r\n(function() {\r\n\t\"use strict\";\r\n\r\n    angular.module(\"eavFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", function(formlyConfigProvider) {\r\n            formlyConfigProvider.setWrapper({\r\n                name: 'disablevisually',\r\n                templateUrl: \"wrappers/disablevisually.html\"\r\n            });\r\n        }]);\r\n})();\n\r\n(function() {\r\n\t\"use strict\";\r\n\r\n    angular.module(\"eavFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", function(formlyConfigProvider) {\r\n            formlyConfigProvider.setWrapper({\r\n                name: 'eavLabel',\r\n                templateUrl: \"wrappers/eav-label.html\"\r\n            });\r\n        }]);\r\n})();\n\r\n/*\r\n * This is the label-wrapper of a group-title, \r\n * and in the html allows show/hide of the entire group\r\n * show-hide works over the options property to.collapseGroup\r\n */\r\n(function() {\r\n\t\"use strict\";\r\n\r\n    angular.module(\"eavFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", function(formlyConfigProvider) {\r\n            formlyConfigProvider.setWrapper({\r\n                name: 'fieldGroup',\r\n                templateUrl: \"wrappers/field-group.html\"\r\n            });\r\n        }]);\r\n})();\n/*\r\n * This wrapper should be around all fields, so that they can float the label \r\n */\r\n(function () {\r\n    \"use strict\";\r\n    angular.module(\"eavFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", function (formlyConfigProvider) {\r\n            formlyConfigProvider.setWrapper({\r\n                name: 'float-label',\r\n                templateUrl: \"wrappers/float-label.html\"\r\n            });\r\n        }]);\r\n})();\n/*\r\n * This wrapper should be around all fields, so that they can float the label \r\n */\r\n(function () {\r\n    \"use strict\";\r\n    angular.module(\"eavFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", function (formlyConfigProvider) {\r\n            formlyConfigProvider.setWrapper({\r\n                name: 'no-label-space',\r\n                templateUrl: \"wrappers/no-label-space.html\"\r\n            });\r\n        }]);\r\n})();\n/*\r\n * This wrapper should be around all fields, so that they can float the label \r\n */\r\n(function () {\r\n    \"use strict\";\r\n    angular.module(\"eavFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", function (formlyConfigProvider) {\r\n            formlyConfigProvider.setWrapper({\r\n                name: 'preview-default',\r\n                templateUrl: \"wrappers/preview-default.html\"\r\n            });\r\n        }]);\r\n})();\n/*\r\n * This wrapper should be around all fields, so that they can float the label \r\n */\r\n(function () {\r\n    \"use strict\";\r\n    angular.module(\"eavFieldTemplates\")\r\n        .config([\"formlyConfigProvider\", function (formlyConfigProvider) {\r\n            formlyConfigProvider.setWrapper({\r\n                name: 'responsive',\r\n                templateUrl: \"wrappers/responsive.html\"\r\n            });\r\n        }]);\r\n})();",null],"sourceRoot":"/source/"}